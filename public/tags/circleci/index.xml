<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>circleci on suwa3 blog</title>
    <link>https://hugo.suwa3.me/tags/circleci/</link>
    <description>Recent content in circleci on suwa3 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sat, 14 Sep 2019 11:00:00 +0000</lastBuildDate><atom:link href="https://hugo.suwa3.me/tags/circleci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>circleCI</title>
      <link>https://hugo.suwa3.me/post/2019-09-14-circleci/</link>
      <pubDate>Sat, 14 Sep 2019 11:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-09-14-circleci/</guid>
      <description>circleCIの設定をやってみました。
Continuous Integration and Delivery - CircleCI
まずgit hubアカウントでユーザー登録を済ませたら
なにかを自動化するリポジトリを選択して
以下ターミナル
サンプルコードはここ参考にしました。
CircleCIでのPythonアプリケーションの構成-CircleCI
config.ymlの中身はこんなかんじです。
$ mkdir .circleci
$ cd .circleci/ $ vi config.yml $ git add config.yml $ git commit -m ‘config.yml&amp;rsquo; $ git push
$ cd ../ $ source myvenv/bin/activate
=&amp;gt; venvの中に入る場合
$ pip freeze
今入っているパッケージの情報を表示
$ pip freeze &amp;gt; requirements.txt
=&amp;gt; そしてgit push
ふむ
大人数で管理しているリポジトリなんか
みんなブランチ編集して
成功しているのかどうか一つ一つテストするの
確かに大変そうなので、これは便利だなあとおもいました。
バッヂも付けたよ。
Status BadgesのコードをコピペしてREADME.mdに貼り付けたの。
こんな感じで緑のバッヂがついた。
ちょっとかっこよくなった、やったねえ🙋‍♀️</description>
    </item>
    
  </channel>
</rss>
