<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on suwa3 blog</title>
    <link>https://hugo.suwa3.me/tags/nginx/</link>
    <description>Recent content in nginx on suwa3 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Tue, 28 Jan 2020 13:00:00 +0000</lastBuildDate><atom:link href="https://hugo.suwa3.me/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>マストドン構築3日目</title>
      <link>https://hugo.suwa3.me/post/2020-01-28-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%893%E6%97%A5%E7%9B%AE/</link>
      <pubDate>Tue, 28 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-28-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%893%E6%97%A5%E7%9B%AE/</guid>
      <description>Mastodonの構築をしていました。
マストドン構築3日目 on AWS
今日学んだこと
serviceコマンドでNginxのconfigtest や status のチェックが出来る
$ service nginx configtest $ service nginx status ● nginx.service - A high performance web server and a reverse proxy server Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled) Active: active (running) (Result: exit-code) since Tue 2020-01-28 05:16:57 CET; 31min ago (略) nginxコマンドで設定が生きているかのテストが出来る
$ nginx -t あとは今まで通り/var/log/nginx の下で、access.logとerror.logの確認です。</description>
    </item>
    
    <item>
      <title>Nginxの設定をAnsibleで展開</title>
      <link>https://hugo.suwa3.me/post/2019-10-20-nginx%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92ansible%E3%81%A7%E5%B1%95%E9%96%8B/</link>
      <pubDate>Sun, 20 Oct 2019 11:30:11 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-20-nginx%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92ansible%E3%81%A7%E5%B1%95%E9%96%8B/</guid>
      <description>どんすわサーバー内に入って
Nginxの設定ファイルどこにあるのかなあと探して見つけました。
/etc/nginx$ cat nginx.conf
出てきたnginx.confをcopyして
ローカルのdon.suwa3.me-ansibleに追加したらGitHubにpushです。
https://github.com/suwa3/don.suwa3.me-ansible/blob/master/nginx.conf
ついでにyamlも追加
- hosts: all tasks: - name:nginx.conf become: yes template: src: nginx.conf dest: /etc/nginx/nginx.conf owner: root group: root mode: 0644
そういえばポートを22222に変更していたので
ポート番号の変更を追記しました。
$ sudo vi ansible.cfg [defaults] hostfile = ./hosts remote_port = 22222
playbookしてみます。
$ ansible-playbook -i hosts nginx.yaml ____________ &amp;lt; PLAY [all] &amp;gt; \ ^__^ \ (oo)\_______ (__)\ )\/\ ||&amp;mdash;-w | || ||
無事okでました〜
やったねえ</description>
    </item>
    
    <item>
      <title>postgreSQL修了/Kubernetes予習</title>
      <link>https://hugo.suwa3.me/post/2019-08-02-postgresql%E4%BF%AE%E4%BA%86-kubernetes%E4%BA%88%E7%BF%92/</link>
      <pubDate>Fri, 02 Aug 2019 13:00:45 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-08-02-postgresql%E4%BF%AE%E4%BA%86-kubernetes%E4%BA%88%E7%BF%92/</guid>
      <description>お昼はpostgreSQLの動画を観ていたよ。
一通り全て見終わりました。
わーい˙˚ʚ(｡･-･｡)ɞ˚˙
手を動かして実際にデータベースつくったり触ったりしたいので
もう少し動画にはお世話になりそう。
Fab Cafeのサラダお気に入りなの。
金曜日の楽しみだよ。
草ってかんじ。
土曜日はKubernetesの女子限定ハンズオンで
参加型の座学なのだけれども
不安過ぎて入門書を衝動買いしそうになった写真です。
なので帰宅して少し予習しました。
https://kubernetes.io/docs/concepts/cluster-administration/manage-deployment/
この内容を実際にやってみた。
DockerのアイコンからPreferenceでKubernetesを使うことできるのね。
Nginxを3つDeploymentをつかってたてたけれども
自動修復機能で、1つを消しても代わりのNginxが生まれるの。
最初は
｢消したのにNginx！｣
とおもったけれども
｢私が死んでも代わりはいるもの｣
ってことかあ、と納得しました。</description>
    </item>
    
    <item>
      <title>PORTもくもくメンテナンス</title>
      <link>https://hugo.suwa3.me/post/2019-07-20-616/</link>
      <pubDate>Sat, 20 Jul 2019 13:00:56 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-07-20-616/</guid>
      <description>PORTのもくもく会へ行ってきました。
おやつタイムに配られたシュークリームアイス😊
ランチタイムも色々と会話できたの楽しかったです。
主にMastodonのバックアップ/メンテナンスやりました。
.
やったこと
- postgreSQLのバックアップ
- GitHubで設定ファイルの保全
- EC2上へメンテナンスページの設置
- メンテナンスの流れ確認(設定ファイルについてなど)
.
postgreSQLのバックアップとったの。
.
第 23章バックアップとリストア
https://www.postgresql.jp/document/8.1/html/backup.html
復習しておこう。
Docker上にバックアップ用のディレクトリを作成して
pg_dumpを実行しました。
.
Nginx設定ファイル内の整理をして
Mastodonの設定ファイルとNginxの設定ファイルを
scpコマンドをつかいDLしてGitHubに保存。
.
EC2インスタンス上にメンテナンスページ用のディレクトリを作成して
GitHub上にメンテナンスページを置いていたので
それをgit cloneしてメンテナンスの準備をしたよ。
.
site-availableにメンテナンス用のNginx設定ファイルを置いて
中の設定ファイルをメンテナンス用に変更したの。
シンボリックリンクを書き換えて、設定ファイルをテストし
忘れずにNginxをリロード。
.
これblog書いていて
下書き保存がうまくいかず
一度ぜんぶ消えてしまったので
もう一度はじめから書き直したの
復習バッチリです！！！
.
帰りは一杯飲んで帰ったよお。</description>
    </item>
    
  </channel>
</rss>
