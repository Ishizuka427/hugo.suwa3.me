<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>django on suwa3 blog</title>
    <link>https://hugo.suwa3.me/tags/django/</link>
    <description>Recent content in django on suwa3 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Tue, 21 Jan 2020 13:00:00 +0000</lastBuildDate><atom:link href="https://hugo.suwa3.me/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>微風邪</title>
      <link>https://hugo.suwa3.me/post/2020-01-21-%E5%BE%AE%E9%A2%A8%E9%82%AA/</link>
      <pubDate>Tue, 21 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-21-%E5%BE%AE%E9%A2%A8%E9%82%AA/</guid>
      <description>なんだか微風邪です。
Django流石にもう少し勉強しなければ
と、感じたので
少しずつ気づいたことをまとめていきたいです。
Slackの自動化で色々と学べて嬉しかったので
インフラっぽいことやるために
マストドンの構築3日目に、早く取り掛かりたいです。
構築が完了して引っ越しが済んだら
botたくさん書いてDBのチューニング試したい。</description>
    </item>
    
    <item>
      <title>DjangoGirls</title>
      <link>https://hugo.suwa3.me/post/2019-12-07-djangogirls/</link>
      <pubDate>Sat, 07 Dec 2019 13:00:22 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-07-djangogirls/</guid>
      <description>コーチとしてDjangoGirlsのワークショップに参加しました。
先日、AWSのハンズオンを主催してみて
｢参加する側よりも主催する側の方が
勉強に繋がって成長できるのでは｣
と感じたのをキッカケに
自分自身が理想としていたDjangoGirlsのハンズオンに
スタッフとして参加してみようと思いました。
受けた質問を一通りまとめて、躓きやすいポイントを整理しながら
｢どういったサポートが相手のためになるのか、どういった伝え方がスムーズに受け入れられるか｣
など考えました。
ただ訊かれたことに答えるだけではなく
その周辺情報を伝えることで、より理解が深まる場合もあると思うのだけれども
もともとインフラよりの方と
フロントよりの方では質問内容や興味のもちかたの傾向がかなり違うだとか
非エンジニアの方への伝え方で、なるべく専門的な用語を使わないだとか
テクニックが要るなぁと感じました。
チュートリアルの完成度の高さがあってこそ
こういった面について考えることができるのだなぁ
と思いました。
まだまだ勉強不足な部分たくさんあるので
これからも頑張りたいです。
今日の収穫、いっぱいあったのですが
個人的に面白いなと思ったのが
DjangoのMTVという考え方で
Laravelの話も少し出ていてわかりやすかったです。
Djangoの魅力をもっと知りたいなと感じました。
自分で書いたものをどんどん試して改造してみたい〜😃
あとはFlaskというフレームワークの存在を知ったので
これも軽く試してみたいです。
初めてDjangoGirlsのハンズオンに参加したとき
Django自体の魅力はもちろん
チュートリアルの完成度の高さと
コーチ役との距離感のちょうど良さと
DjangoGirls代表であるマミさんの牽引力に惹かれて
「このコミュニティに所属したいなぁ」
と、一目惚れに近い気持ちになったの。
今後も、開発コミュニティを通して交流を深めつつ
技術の幅を広げていきたいなと思いました。</description>
    </item>
    
    <item>
      <title>Django GirlsチュートリアルでつくったものでDockerfile作成</title>
      <link>https://hugo.suwa3.me/post/2019-10-20-django-girls%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%A7%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE%E3%81%A7dockerfile%E4%BD%9C%E6%88%90/</link>
      <pubDate>Sun, 20 Oct 2019 11:20:36 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-20-django-girls%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%A7%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE%E3%81%A7dockerfile%E4%BD%9C%E6%88%90/</guid>
      <description>まずDocker Hubで使いたいイメージを探します。
公式のものなど、なるべく信頼できるイメージをつかった方が良さげです。
Django Girlsチュートリアルでつくったものはこちらです。
$ ls blog manage.py myvenv README.md db.sqlite3 mysite requirements.txt
元になるイメージはpython:3.7.5-slim-busterを選びました。
Django起動時に打ち込んでいるコマンドを
Dockerfileに書き込んでいきます。
$ vi Dockerfile
FROM python:3.7.5-slim-buster COPY . /app/ WORKDIR /app RUN pip3 install -r requirements.txt RUN python3 manage.py collectstatic &amp;ndash;noinput CMD python3 manage.py runserver 0.0.0.0:8000
イメージ名にはわかりやすい名前をつけて
タグにはバージョン（日付や0.1.0など）を指定してあげると良いです。
無記入だとlatestになります。
$ docker build -t [イメージ名]:[タグ] . 例えば $ docker build -t djangogirls:0.1.0 .
最後のドットを忘れないように注意です。
一覧を出すには
$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE djangogirls latest 53a38ee83c1a 24 minutes ago</description>
    </item>
    
    <item>
      <title>Webアプリ制作byPython@DjangoGirls</title>
      <link>https://hugo.suwa3.me/post/2019-09-07-1148/</link>
      <pubDate>Sat, 07 Sep 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-09-07-1148/</guid>
      <description>DjangoGirls主催の女子限定ハンズオンへ行ってきました。
PythonでWebアプリを作ろう [女性対象/男女コーチ◎] 2019.9 - connpass
初めてWebアプリつくったの、とっても楽しかった。
チュートリアルを参考につくったの。
とてもわかりやすくて、よく出来ているなあと感じたので
ぜひトライしてみてください。
Django Girls Tutorial
最初はvimのみでディレクトリの作成からファイル内の編集までやっていて
途中からVSCode使ってみようかな？
とおもって使い分けをはじめたの。
今まで設定ファイルなんかはvimで
MastodonでAnsibleの設定を書くときはもっぱらvimなので
&amp;lsquo;ターミナルから何かするときはvim&amp;rsquo; という謎の固定観念があって
自分のやりやすい方法を見つければいいんだなあとおもったら
とてもサクサク進むようになった。
Djangoをいれてディレクトリやファイルなどがバーっと作られて
それをターミナルからチェックしていたため
ファイルなどもvimで編集していたの。
VSCode見やすいねえ。
基本的にvimのチューニング一切していないのもあるのだけれども
いままでサーバー内で作業することが多かったので
「VSCodeでも見ることができる！！」というのがプチ感動だった。
ターミナル内でさっと開ける上にとてもシンプルで
ショートカットを覚えるとどんどん使いやすくなって
改めてvimが好きになりました。
Emacsをもっと使いこなせるようになりたいです。
自分でキーバインド設定も魅力的よね。
完成品こちらです
GitHubにはあげました。
suwa3/djangogirls
デプロイまだです。
ラズパイに置きたい♡</description>
    </item>
    
  </channel>
</rss>
