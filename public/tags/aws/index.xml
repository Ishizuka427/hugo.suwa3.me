<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on suwa3 blog</title>
    <link>https://hugo.suwa3.me/tags/aws/</link>
    <description>Recent content in aws on suwa3 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Wed, 11 Dec 2019 13:00:00 +0000</lastBuildDate><atom:link href="https://hugo.suwa3.me/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS re:Invent 2019 Containers re:Cap</title>
      <link>https://hugo.suwa3.me/post/2019-12-11-1942/</link>
      <pubDate>Wed, 11 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-11-1942/</guid>
      <description>AWS re:Invent 2019 Containers re:Capに行ってきました。
re:Inventは毎年ラスベガスで開催されるAWSの新機能発表イベントです。
今回のセミナーは、そのイベントで発表された内容の中でも
コンテナ技術に限定して解説するセミナーでした。
特に中盤以降から
「難解だなぁ」
と感じたけれども、このセミナーを聴講したことで
ECSやEKSのサービスを実際にさわってみたいな
と、思えたので
参加してよかったのかもしれない。
個人用のメモです。
あとAWSLoftのキャンディを貰ったの。
かわいい〜</description>
    </item>
    
    <item>
      <title>centOSにLAMP環境の構築をしてWordPressの引越し on AWS</title>
      <link>https://hugo.suwa3.me/post/2019-11-30-centos%E3%81%ABlamp%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89%E3%82%92%E3%81%97%E3%81%A6wordpress%E3%81%AE%E5%BC%95%E8%B6%8A%E3%81%97-on-aws/</link>
      <pubDate>Sat, 30 Nov 2019 14:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-30-centos%E3%81%ABlamp%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89%E3%82%92%E3%81%97%E3%81%A6wordpress%E3%81%AE%E5%BC%95%E8%B6%8A%E3%81%97-on-aws/</guid>
      <description>備忘録としてまとめます。
ざっくりとやった内容です。
AWSでEC2インスタンスをたてる EC2内にLAMP環境を構築 EC2内にWordPressをインストール 旧WordPressからデータをエクスポート 新WordPressへデータをインポート Route53でサブドメインを切る Let’s Encryptで証明書発行 諸々の設定ファイルを書く AWSでEC2インスタンスをたてる 主に参考にした記事です。
Amazon EC2 Linux インスタンスの開始方法 - Amazon Elastic Compute Cloud
注意するポイントとして
Amazon Linux 2ではなくAmazon Linux AMIを使用します。
好みの問題かもしれないですが
Amazon Linux 2
$ sudo amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
Amazon Linux AMI
$ sudo yum install -y httpd24 php70 mysql56-server php70-mysqlnd
この違いです。
amazon-linux-extrasではなくyumを使いたかったので
Amazon Linux AMIを使用しました。
セキュリティグループは下記のとおりです。
SSH: ポート範囲22
HTTP: ポート範囲80
HTTPS: ポート範囲443
鍵を作成したら.ssh配下に移動します。
$ mv ~/.Downloads/HogeKeyName.pem ~/.ssh/
権限の変更をします。
$ chmod 600 HogeKeyName.</description>
    </item>
    
    <item>
      <title>AWSOME DAY</title>
      <link>https://hugo.suwa3.me/post/2019-11-01-awsome-day/</link>
      <pubDate>Fri, 01 Nov 2019 13:00:29 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-01-awsome-day/</guid>
      <description>朝からAWSOME DAYという
AWS主催のセミナーに参加していました。
セミナーに参加していて思ったのが
休みの日の感覚に近いなぁといった感じだった。
丸一日座学というのは少ないけれども
休日に丸一日もくもく会で朝から作業だとか
OSCに行ったりハンズオンに参加したりすることはあるので
休みと、仕事でセミナーに行く差ってほぼ無くて
なんだか仕事しなきゃとおもってレポートを丁寧に書いてみた。
そう考えると、休みの日は趣味鯖の手入れをしたり
Pythonだとか興味のある分野の学習にあてたりしているので
趣味と仕事の境界線も曖昧なところがあって
好きで没頭できるのはとても嬉しいのだけれども
逆に、これ興味もなく好きでもないのに仕事でやるとか
きっとひたすら苦行だろうし
向き不向きって、能力というよりは興味関心なのかもしれないと思った。
AWSの認定資格とりたい。
参考書を見に書店へ行かなきゃ。
最新の技術やツール、知りたいし使えるようになりたいのと同時に
コンピューター内部の仕組みを知りたいの
自作OSや自作コンピューターやりたいなぁと思う。
外に向かう興味と、内に向かう興味って感じする。
現役でエンジニアとして働けるの
頑張ったところであと30年とかなんだろうけれど
あと100年くらい現役でエンジニアやれたら良いのにとおもう。
そのくらい時間がないというか
学んでも学んでもジリジリとしか進まない。</description>
    </item>
    
    <item>
      <title>RDS作成時ポイント、お引っ越し</title>
      <link>https://hugo.suwa3.me/post/2019-10-04-rds%E4%BD%9C%E6%88%90%E6%99%82%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%8A%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97/</link>
      <pubDate>Fri, 04 Oct 2019 13:10:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-04-rds%E4%BD%9C%E6%88%90%E6%99%82%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%8A%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97/</guid>
      <description>RDSとは：AWSのDBマネジメントサービスです。
作成時のポイント
作成時になるべく既存のMySQLと近いversionを選ぶようにします。
作成後エンドポイントを控えておくと作業がスムーズです。
EC2インスタンス内でdumpファイルのある
/tmp下に移動し、下記コマンドを実行してインポート。
$ mysql -u [ユーザー名] -p &amp;ndash;host [エンドポイント] &amp;lt; backup20191004.sql
オプション解説
--host [エンドポイントなどのホスト名]
RDSの場合はAmazon RDS DBインスタンスのエンドポイント
エンドポイントは、RDSマネジメントコンソールのインスタンス詳細で確認できます。
MySQL DB または MariaDB DB から Amazon RDS MySQL または MariaDB DB インスタンスへのデータのインポート
インポートが完了したらRDSにログインしてみます。
$ mysql -u [ユーザー名] -p &amp;ndash;host [エンドポイント]
DBの一覧を確認して、引っ越しができているか見ます。
mysql&amp;gt; show databases;
RDSが完成したら向きの指定を変えます。
EC2インスタンス内に入り下記に移動（Apacheなどの設定により違う）
/var/www/html/wp-config.php
// ** MySQL 設定 - この情報はホスティング先から入手してください。 ** // /** WordPress のためのデータベース名 */ define(&amp;lsquo;DB_NAME&amp;rsquo;, &amp;lsquo;[DB名]&amp;rsquo;);
/** MySQL データベースのユーザー名 */ define(&amp;lsquo;DB_USER&amp;rsquo;, &amp;lsquo;[ユーザー名]&amp;rsquo;);</description>
    </item>
    
    <item>
      <title>WordpressのEC2インスタンス内MySQLバックアップ</title>
      <link>https://hugo.suwa3.me/post/2019-10-04-wordpress%E3%81%AEec2%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E5%86%85mysql%E3%82%92rds%E3%81%AB%E3%81%8A%E5%BC%95%E8%B6%8A%E3%81%97/</link>
      <pubDate>Fri, 04 Oct 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-04-wordpress%E3%81%AEec2%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E5%86%85mysql%E3%82%92rds%E3%81%AB%E3%81%8A%E5%BC%95%E8%B6%8A%E3%81%97/</guid>
      <description>WordpressのEC2インスタンス内にあるMySQLデータをバックアップします。
MySQLのデータベースをmysqldumpでバックアップ/復元する方法
上記を参考にして進めました。
まずはEC2内に入りエクスポート
$ mysqldump &amp;ndash;single-transaction &amp;ndash;databases [DB名] -u [ユーザー名] -p &amp;gt; /tmp/backup20191004.sql
オプション解説
--single-transaction
データの整合性を維持する。ワントランザクションで作業を行う設定する
--databases [DB名]
DB名の指定
-u [ユーザー名]
ユーザー名の指定
-p
上で指定したユーザー名のパスワードを使用するオプション
dumpファイルを取ることに成功しました！
Next Step
RDSを作成します。</description>
    </item>
    
    <item>
      <title>LT記念日</title>
      <link>https://hugo.suwa3.me/post/2019-09-28-lt%E8%A8%98%E5%BF%B5%E6%97%A5/</link>
      <pubDate>Sat, 28 Sep 2019 13:00:19 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-09-28-lt%E8%A8%98%E5%BF%B5%E6%97%A5/</guid>
      <description>PORTのもくもく会に参加してきました。
ほぼランチからの参加でした。
お気に入りの変な人いました！やったねえ
みそぴ磁石のルービックキューブ触らせてくれた
動きの滑らかさに感動したあ。
超絶美女と仲良くなりました、笑　わーい
ランチタイムは
「どうやって就活したのか」
などについて話しました。
就活の流れや、それにともなった技術的な勉強の進め方も
まとめられたらいいなあ。
初めてLT（Lightning Talks）をしました。
簡単な発表なのだけれども
内容は昨日あげたスライドをそのまま使いました。
反応が良く、質問もたくさん出てくれたので嬉しかったです。
いくつか質問をピックアップしてまとめました。
本日のもくもく会では
主にAWS CLIの設定をしたので書きます。
$ aws &amp;ndash;version -bash: aws: command not found
AWSコマンドの設定しないと！
AWS CLI の設定
$ ls ~/Library/Python/3.7/bin
$ vi ~/.bash_profile export PATH=~/Library/Python/3.7/bin:$PATH
↑を追記
設定ファイルと認証情報ファイル
頻繁に利用される構成設定および認証情報を AWS CLI が維持するファイルに保存することができます。
$ vi ~/.aws/credentials
[default] aws_access_key_id=ひみつ aws_secret_access_key=ひみつ
$ vi ~/.aws/config
[default] region=us-west-2 output=json
awsコマンド使えるようになっているかなあ
$ aws &amp;ndash;version aws-cli/1.16.248 Python/3.7.4 Darwin/17.7.0 botocore/1.12.238
わーい、できた\( ˆoˆ )/</description>
    </item>
    
    <item>
      <title>ポート番号の変更</title>
      <link>https://hugo.suwa3.me/post/2019-09-21-%E3%83%9D%E3%83%BC%E3%83%88%E7%95%AA%E5%8F%B7%E3%81%AE%E5%A4%89%E6%9B%B4/</link>
      <pubDate>Sat, 21 Sep 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-09-21-%E3%83%9D%E3%83%BC%E3%83%88%E7%95%AA%E5%8F%B7%E3%81%AE%E5%A4%89%E6%9B%B4/</guid>
      <description>もくもく会に参加してきました。
ProLabo渋谷もくもく会
黙々と作業しました！
ポート番号を変えるだけで攻撃数が激減するらしいという噂をきいて
早速試してみた。
まずログファイルからアクセス数を確認します。
$ cat /var/log/auth.log | grep -v sximada | grep -v ubuntu | grep -v CRON | grep -v &amp;lsquo;Sep 20&amp;rsquo; | wc -l
626件でした。
1日に600件以上のピンポンダッシュ&amp;hellip;&amp;hellip;恐怖でしかないです。
SSHログインのポート番号の設定を変える前に
万が一ログインができなくなった場合に備えて
（クラウドでSSHログインができなくなったら致命的なので）
スナップショットを撮っておきます。
AWSのEC2インスタンスのステータスをStoppingにしました。
なんと鯖立て初のStoppingです。
怒られてしまうかもしれない。
EC2の再起動をかけたら、立ち上がりにかなり時間がかかって
冷や汗もんでした😢
こわー！
無事EC2インスタンスが立ち上がり
/etc/ssh/sshd_config
こちらのファイルに
Port 22 Port 2222
と書いて
Port22はデフォルトの設定でコメントアウトしてあったのですが
なにも記述がなければ
22が自動的にSSH用の番号として割り振られるようです。
念のため22も残して2222からログインできるかテスト。
設定を適用させるため忘れずssh再起動です。
$ sudo service ssh restart
2222ポートからsshログインできるか確認。
$ ssh don.suwa3.me -p2222
ログインできました！
やったねえ
EC2インスタンスのセキュリティグループも変更しました。
忘れず変更したのえらーい、わーい
図でまとめておきました。
セキュリティグループのほうは</description>
    </item>
    
    <item>
      <title>AWS大規模障害</title>
      <link>https://hugo.suwa3.me/post/2019-08-23-aws%E5%A4%A7%E8%A6%8F%E6%A8%A1%E9%9A%9C%E5%AE%B3/</link>
      <pubDate>Fri, 23 Aug 2019 09:16:44 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-08-23-aws%E5%A4%A7%E8%A6%8F%E6%A8%A1%E9%9A%9C%E5%AE%B3/</guid>
      <description>AWSで大規模な障害が起きていますね。
don.suwa3.meはAWSのEC2インスタンスを利用しているので
急いでログインしてDashboardのOpen issuesをcheckしました。
以下まとめ。
EC2インスタンスに関する障害報告
こちらは日本時間とGoogle翻訳です。
RDSに関する障害報告
こちらは日本時間とGoogle翻訳です。
現在いまだ復旧していないようです。
心がそわそわするー。</description>
    </item>
    
    <item>
      <title>監視ツール</title>
      <link>https://hugo.suwa3.me/post/2019-08-19-945/</link>
      <pubDate>Mon, 19 Aug 2019 13:00:23 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-08-19-945/</guid>
      <description>早起きして朝Tully&amp;rsquo;sしました。
主にAnsible化について調べたよ。
Ansibleをはじめる人に。
ここでAnsibleの名付けのもとになった小説が紹介されていて
Ansibleが登場するSF小説「エンダーのゲーム」読んだ
絶対に面白そうなので読みたいとおもいました。
SFすき。
Ansibleって自動化させるための機能なんだとおもっていたけれども
構成管理ツールと呼ばれているらしく
Ansibleの他にも色々とあるのね。
最近のトレンドがAnsibleらしい。
シンプルで使いやすいとのこと。
とりあえず調べるだけ調べて
AWSのコワーキングスペースLoftに移動しました。
AWSのアカウントを持っているだけで
平日ここのスペースを無料で使えるの、かなり大きい。
あまり時間もなかったので
とりあえずメッセージの返信やスケジュールの調整など雑務を片付けて
軽くお昼を食べて出ました。
SNSがDockerふわふわタイムに突入して重くなったの。
簡易的な監視ツール入れたいなとおもって登録だけしました。
uptime robot
.
美容院で前髪カットして部分パーマかけて
根元リタッチして
髪の毛のメンテナンスしたよ。</description>
    </item>
    
    <item>
      <title>Lambda</title>
      <link>https://hugo.suwa3.me/post/2019-08-16-lambda/</link>
      <pubDate>Fri, 16 Aug 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-08-16-lambda/</guid>
      <description>AWSで例えば
&amp;ldquo;S3へファイルがあがったら、それをトリガーにして何かプログラムが走る&amp;rdquo;
というような
簡単な動作をさせたいねという話から
Lambdaならコードさえ書けば、EC2要らずで動くの便利なのでは？
と、いうことでLambdaについてザッと調べました。
.
AWS初心者入門 第7回～「Lambda」ってなにがスゴイんですか？
説明はそこそこにサッサと現物を触ってみようということで
Python による Lambda 関数のビルド
AWSのチュートリアルを参考にコンソールをポチポチしてから
ローカル環境で実行も出来るらしいということで
Qiitaの記事をいくつか参考にしつつ試してみました。
.
aws-sam-local 改め aws-sam-cli の新機能 sam init を試す
[AWS SAM CLIでLambda Functionを開発する](http:// https://qiita.com/te20/items/5a28cef4966c75886218)
Pythonの参考に出来る新しい記事が見当たらなかったのと
タイポミスで、記事通りだと実際に動作しないものや
若干の変更点もあったので
自分で備忘録用に記事をまとめてみることにしました。
Pythonでaws-sam-cliをローカル実行するまで
Mastodonにもupしたのだけれども、ほぼ反応なかったの寂しい😢
ま、いいけどねえ。
treeコマンドを使えるようになった画像です。
LambdaをGitHubにあげるところまでやったよ。
.
そういえば
gitコマンド操作に慣れるため
ブラウザからのGitHub禁止令が出されました。
ひいい
git stashなどのコマンド操作や
サーバー内でgit操作をしたいときに
gitコマンドに慣れていた方が良いよね。
と、いうことでしばらく封印です。
少しだけgitコマンド慣れたよ☺️</description>
    </item>
    
    <item>
      <title>Loft</title>
      <link>https://hugo.suwa3.me/post/2019-07-29-loft/</link>
      <pubDate>Mon, 29 Jul 2019 13:00:59 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-07-29-loft/</guid>
      <description>目黒にあるAWSのコワーキングLoftに行ってきました。
↓参考としてAWSの紹介blog貼ります。
https://goworkship.com/magazine/aws-loft-tokyo/
(上記サイトより引用)
広くてきれい。
WiFiのSSIDとpassは、受付のお姉さんに聞いたらわかりました。
気合い入れてTo-Doリストつくったよ。
何やるつもりだったのか忘れてしまうので
整理大事。
8割できたら次に進もうかなってなるしね。
.
綺麗だし景色も良くて気に入ったので
また平日に来れそうなときは来よう。
エレベーターが段ボールだった、テンションあがる。
移動時間はpostgreSQLの動画をみていた。
内容きちんと復習して
実際に手をうごかして整理します。</description>
    </item>
    
    <item>
      <title>Dockerマスターになりたい</title>
      <link>https://hugo.suwa3.me/post/2019-06-27-docker%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8A%E3%81%9F%E3%81%84/</link>
      <pubDate>Thu, 27 Jun 2019 13:00:08 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-06-27-docker%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8A%E3%81%9F%E3%81%84/</guid>
      <description>最初はAWS日本語だしAWSの設定なら楽チン！
とおもっていたけれども、これ日本語が意味不明だと突然
｢何言ってるのかな？？｣
に、なるのつらい。
vimで設定ファイル編集するほうが
言われたとおり素直にコピペするだけなので
ラクだなと思うようになってきた。
素直にコピペして動く場合であれば。
.
パブリックアクセスのブロックは全解除でいけました。
公開しても良い画像で、ファイルをひとつ作ってみて
それを投稿してerror出ないかテストしてみました。
.
パケットポリシーエディタの中身は
AWSのポリシージェネレーターでパパッと生成できた。
しかしジェネレーターの選択欄ものすごく種類あるので
どれ選択したら良いのか初見わからないのでは…
.
で、メディアストレージの設定ファイルの編集なんですが
参考にしていたblogの内容の表記っていうのかな
若干違っていて
どれが正しいのかわからないので
設定ファイルを書き直して
Docker立ち上げ直して
マストドンで画像投稿してみて
Dockerのログみてerror探して
というのを10回ほど繰り返し
まだerror出ています。
うお〜〜〜〜〜〜
アプリ開発の動画みて気分転換しよ🙋
また明日がんばります。
.
でもねでもね
最初の頃はerrorの特定も全くわからなかったの。
最近は、だんだん流れがわかってきたの嬉しい。
こういうリズムで、こういう順序で
こういう角度からerrorの原因を潰していくのかあ
って、少しずつ見えてきた。
メディアストレージのerrorちっともわからんけども‪ᐠ( ᐛ )ᐟ笑
まじでわからん</description>
    </item>
    
    <item>
      <title>表参道の上島珈琲店</title>
      <link>https://hugo.suwa3.me/post/2019-06-26-501/</link>
      <pubDate>Wed, 26 Jun 2019 13:00:51 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-06-26-501/</guid>
      <description>朝から低気圧で体調不良でした。
強く打った歯がグラグラしていて
打撲痛なんだけれども、いててだったよ。
痛み止め飲みすぎて効かなくなっているのがつらい。
.
表参道の上島珈琲店とても良かった。
明る過ぎず、暗過ぎずの照明で目が疲れない。
WiFiちゃんと繋がる。
内装がオシャレで尚且つ落ち着く。
ソファ椅子が固くない。
素晴らしいね。
.
メールサーバーの設定をしていました。
SESってSimple email serviceの略なんだけど
どこがSimpleなんだ？ってかんじです。
.
躓いていた原因は
登録完了メールのアドレスをGmailで設定していて
登録するメールはYahooアドレスを使っていたの。
SESのEmail address欄でGmailのアドレスのみ登録していて
Yahooアドレスも登録いるんだなあと後から気づいた。
.
本来なら送信制限の解除をして、不特定多数からのメール送信許可をするから
そんな個別設定は不要なんだけれども
おひとり様だし、何かしら穴があっても嫌なので
今の時点でやらなくても良いリスキーな設定は避けてきたのね。
で結局つまずいて、GmailもYahooも両方登録して事なきを得ました。
設定ファイルの編集はスムーズにできた。
.
メディアストレージについては、パブリックアクセス許可の管理でつまずいています。
まず日本語がわからん。
元々英語なものがChromeの自動翻訳でわけわからん
って事が多々ある。
日本語の解読からです。
｢新しいアクセスコントロールリスト(ACL)を介して許可されたパケットとオブジェクトへのパブリックアクセスをブロックする｣
その下に
｢任意のアクセスコントロールリスト(ACL)を介して許可されたパケットとオブジェクトへのパブリックアクセスをブロックする｣
って続いてて、似たような文面であと2つ続いて
チェックボックスがついているんだけど
｢は？｣
ってなって全くもって意味不明なのでググります。
.
夜はメンタルよわよわだった。
体調不良と低気圧でダメだったねえ。
.
夢中になってやっていて
あまり勉強しているって感覚はなくて
ただひたすら楽しいので知りたいやりたい！
ってきもちなの。
あまり頑張ったり努力したりしている感覚はなくて苦しくない。
.
しかし、楽しいと余計に自分の体力を無視してやり続けてしまうところがあるので
体調には気をつけたいと思いました。
意識して休みます。</description>
    </item>
    
    <item>
      <title>鯖缶記念日</title>
      <link>https://hugo.suwa3.me/post/2019-06-25-495/</link>
      <pubDate>Tue, 25 Jun 2019 13:00:53 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-06-25-495/</guid>
      <description>設定が諸々残っていますが
なんとか鯖立て成功しました。
.
メールサーバーとメディアストレージを
なんとかしなきゃなの。
まず、どこのものを使おうか悩んで
猿毛さんからSend Gridを教えてもらったり
Mail gunってサービス名も
マストドンの設定で使っている鯖多いよーだとか
なんとなく聞いていたりしたので
比較や登録、チュートリアル検索して調べた。
.
おそらく無料系サービスは、無料枠をこえると
こえた時点で一度ストッパーが働いてしまうみたいで
おひとり様なら全然良いのだけれども
ひとが増えた際にパスワード変更が出来ないだとかの
不具合がおこる可能性を考えると
AWSのSESで自動的にスケールアップしてくれる方が良いのかなあ
とおもったり。
.
機能面だけなら、門戸を開くときや必要に迫られたタイミングでSESへ設定し直せば良いじゃない？
って話になるのだけれども
自分の勉強のためにあえてAWSを選択したので
(オーバースペックでは？と言われる)
おひとり様で気楽なときに無料枠内でSESに慣れることができるのは、それならそれで良いかなあとおもうの。
多少の授業料なら全然払います！ってきもち。
.
そしてメールサーバーの設定をしたのですが、メール来ないので明日なんとかします。
まとめて、整理して、切り分け作業だよ。
お昼休みに少し触って無理そうならメディアストレージの設定進めとこ。
これも良さそうなチュートリアルが見つかればAWSのS3で進めるとおもいます。
.
あと全然話が変わるんだけれども、ラズパイ欲しい。
うちにデスクトップのWindowsが2台あって
まあまあ年季の入ってるものと
それ以上に年季の入っているものの2台なので
MacBookを買ってからは、なかなか使わなくなってしまった。
.
しかしOSがWindowsだと開発するにしてもあまり使い道がなさそうなのがネック
むしろ物理サーバーにしてしまえば？
って案も出ているけれども、住んでいる地域バレが少し怖いかも。
単純に目的が
｢パソコンの中身や仕組みもっと知りたい！｣
なので、せっかくなら楽しいおもちゃにしたいなあってきもちで
ラズパイの使い道アイディアゆるぼです。</description>
    </item>
    
    <item>
      <title>レシピづくり</title>
      <link>https://hugo.suwa3.me/post/2019-06-20-%E3%83%AC%E3%82%B7%E3%83%94%E3%81%A5%E3%81%8F%E3%82%8A/</link>
      <pubDate>Thu, 20 Jun 2019 13:00:39 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-06-20-%E3%83%AC%E3%82%B7%E3%83%94%E3%81%A5%E3%81%8F%E3%82%8A/</guid>
      <description>AWSにおけるwordpressのチュートリアル読んでいるけれども
ステップ2で
Linux 仮想マシンの起動のステップ 2 d.～2 f. とステップ 3 を参照
って書いてあるの
おそらく参照するのはステップ 3 d.〜3 f.とステップ4のことだし
（そもそも仮想マシン起動のステップ2にfは存在しない）
その上wordpressチュートリアルのステップ3
システムlogにおいて
ssh設定再度試して探してもユーザーpassでてこないの
RDSでデータベースの設定を先にしておかないとダメなんか？
DBの設定について何も言及ないけれども実は必要なのか？
どちらにせよチュートリアルううううてかんじです。
.
謎は深まるけれども、いったんWeb上にwordpressたてられたので
ひとまず部屋のすみに置いておいて
本来の目的を見失いそうになってしまう。
wordpressはAWSに慣れるための練習で
目的はMisskeyの構築です。
.
今日の隙間時間はMisskeyのレシピづくりをすることに決定しました。
.
MastodonをAWSとDocker利用でたてるレシピと
MisskeyのReadMeを横に並べてみて
どこがどこの代替なのか
Mastodonとの違いは何なのかをきちんと整理したいとおもいます。
ふわっとだけど書いてみたの。
答え合わせがこわいけど楽しみだにゃ( •ω•ฅ)
Dockerわからんちなので後乗せクジラするかもしれない。
.
そしていつのまにかKnzkLiveの配信権限が付与されていた。
やったねえ
作業キャスもできちゃう。
8割うまくいかないひとなので
舌打ちしかしなさそう。
ツイキャスよりも気軽に配信できて
勝手に延長されていくの良さげ。
週末にでもKnzkLive試してみたいなあ。</description>
    </item>
    
    <item>
      <title>SSH</title>
      <link>https://hugo.suwa3.me/post/2019-06-19-ssh/</link>
      <pubDate>Wed, 19 Jun 2019 13:00:44 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-06-19-ssh/</guid>
      <description>にゃにゃーん！
AWSのマーケットプレイスから
WordPressのWebページ立ち上げできたよ。
庭に遊具を置けた気分。
チュートリアルの参考画像が英語で
色々とすっ飛ばしたけれども
あとから
｢これ足りてなくね？｣
って修正してなんとか形になりました。
.
ドットインストールでWebページの生成方法は
なんとなく見ていたので
それがパッケージになっているものなんだなあ
って把握した。
.
ログインしたいんだけど
ログインpassの取得方法
チュートリアルには
｢システムlogに載っています｣
ってあって、丁寧に参考画像まで付いているのに
実際にシステムlog開いてみたけれどもログインpassわからないんだなあ。
sshのhost keyが載っているの。
おそらくsshの設定すっ飛ばしている。
復習兼ねてチュートリアルを最初からやります😢
英語わからん😢
.
gitについても動画でふむふむした。
gitとGitHubの関係を
メールとGmailの関係です
って説明していて
なるほどとおもった。
gitの使い方をさらっと学んだけれども
GitHubって便利機能なんだなあとおもいました。</description>
    </item>
    
    <item>
      <title>EC2</title>
      <link>https://hugo.suwa3.me/post/2019-06-18-468/</link>
      <pubDate>Tue, 18 Jun 2019 13:00:28 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-06-18-468/</guid>
      <description>AWSの動画不要説を唱えてしまったけれども
よくよく考えてみたら
何種類かある公式チュートリアルを見渡してみて
｢仮想サーバーのインスタンスを立てたいのでEC2のチュートリアルはこれかな？｣
と、探すことができたのは動画を観ていたからだし
さらっとでも前提知識あるなしで見えるものかなり違うなとおもったので
安易に切り捨てる癖よくないかなあ
と、反省しました。
マストドンのたてかた
AWSをつかったものやVPSをつかったもの
とりあえず色々と読んでいきます。
躓きやすいポイントもメモしておこうね。
あとはAWSの動画も、さらっと最後まで観るのと
何種類か視聴しておきます。
朝や昼休憩、移動や待ち時間だとかの
隙間時間にちまちまやっているよ。
ちりつも🐰
めちゃ楽しい。
自分の庭を持てた気分。
Evernoteに今日の備忘録のこした。
Dockerのスライドは、前半の歴史がおもしろかった。
imageってなんやねん、とおもっていたけれど
AWSでも触れて少しずつわかりかけてきた気がする。
Docker入門-基礎編</description>
    </item>
    
    <item>
      <title>AWS、動画学習サイトの感想</title>
      <link>https://hugo.suwa3.me/post/2019-06-17-aws%E5%8B%95%E7%94%BB%E5%AD%A6%E7%BF%92%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E6%84%9F%E6%83%B3/</link>
      <pubDate>Mon, 17 Jun 2019 13:00:33 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-06-17-aws%E5%8B%95%E7%94%BB%E5%AD%A6%E7%BF%92%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E6%84%9F%E6%83%B3/</guid>
      <description>朝起きてせっせと
動画でAWSの手順を観ていて
2012年だとか2014年の動画
みる意味あるのか？
と考え直し、動画のプログラミング学習サイトを片っ端から登録してみた。
無料の動画学習系でおそらく最も幅広い範囲を扱っているドットインストールでも
2012年から更新していません！
なお質問は受け付けません！
ってかんじだし
｢とりあえず登録したほうが早くないか？｣
と、おもいなおして
さっさと登録してみました。
.
結論︰さっさと登録した方が良い
.
AWSの公式チュートリアル見た方がわかりやすい。
動画学習サイトのものは古い情報なので、ログイン後の画面が若干違っていた。
AWSログイン直後にちゃんと公式のチュートリアル案内があるのね。
恐らく2012年頃は
動画の画面から察するに、そういったログイン直後のチュートリアルや手引きはなかったのかなあと思われます。
.
ついでに、片っ端から登録した動画の学習サイトの感想を備忘録がてら書きます。
.
ドットインストール
長所
-扱っている範囲が広い
-動画が短くまとめられている
-レベルのムラが少ない
短所
-情報が古い、だいたい2014年頃かそれ以前で止まっている
.
progate
長所
-専用アプリがある
-キャラクターがかわいい
-恐らく学生向けに授業する教授や先生向けなのでは
短所
-無料会員では視聴可能動画がかなり少ない
-そもそも動画の種類が少ない
（有料会員登録して一つの言語を掘り下げるのであればアリなのかもしれない）
-有料会員登録は月額1000円程度
.
Schoo
長所
-動画の種類が多い
-生放送であれば無料で視聴可能
短所
-録画したものは有料会員にならないと観られない(月額1000円程度)
-AWSに限ればここも若干情報古めでした。2014年
(登録したほうが早いのでAWSの動画不要説ある)
.
paiza
長所
-転職サイトの附属として学習動画サービスがついてくるかんじ
-ついでに転職もできるかもしれない
短所
-扱っている範囲はそこまで広くない
.
コードモンキー
長所
-猿がでてくる
短所
-動画学習サイトというより普通にゲームだった
.
.
用途に合わせて動画サイトは使っていきたいです。
なので随時更新するつもり。
いつか表なんかにまとめられたらいいね。
時間が無限に欲しい。
.</description>
    </item>
    
  </channel>
</rss>
