<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech-blog on suwa3 blog</title>
    <link>https://hugo.suwa3.me/categories/tech-blog/</link>
    <description>Recent content in tech-blog on suwa3 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sun, 14 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://hugo.suwa3.me/categories/tech-blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Display Playing emacs in Discord</title>
      <link>https://hugo.suwa3.me/post/2022-08-14-display_playing_emacs_in_discord/</link>
      <pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2022-08-14-display_playing_emacs_in_discord/</guid>
      <description>Requirements Discord client app is installed.
If you normally use it in a browser, you need to install it. Install elcord from MELPA https://github.com/Mstrodl/elcord
M-x package-list-packages
→ Select and install elcord
init.el Example
;;; Display &amp;#34;Playing emacs&amp;#34; in Discord (add-to-list &amp;#39;load-path &amp;#34;~/.emacs.d/elpa/elcord-20220723.33/&amp;#34;) (require &amp;#39;elcord) Discord-side settings User Settings &amp;gt; Game activity &amp;gt; Add it!
Specify Emacs.
Done! </description>
    </item>
    
    <item>
      <title>How to set the text color and text foreground color in Emacs org-mode</title>
      <link>https://hugo.suwa3.me/post/2022-06-09-how_to_set_the_text_color_and_text_foreground_color_in_emacs_org-mode/</link>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2022-06-09-how_to_set_the_text_color_and_text_foreground_color_in_emacs_org-mode/</guid>
      <description>Background I wanted to change the text and background colors in Org-mode. I have changed the Markdown text and background colors before. So I tried to remember how to do that, but I forgot, so I looked it up.
This blog is a reminder.
This is Org-mode before the change.
The color of the level 1 headline is red, and the color of the level 2 headline and link is the same blue.</description>
    </item>
    
    <item>
      <title>Install iedit</title>
      <link>https://hugo.suwa3.me/post/2022-05-25-iedit/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2022-05-25-iedit/</guid>
      <description>What is iedit? https://github.com/victorhge/iedit
Tools for Bulk Editing
Install M-x package-list-packages
→ Select and install iedet
init.el ;;iedit (add-to-list &amp;#39;load-path &amp;#34;~/.emacs.d/iedit&amp;#34;) (require &amp;#39;iedit) How to use Press C-; at the point where you want to edit the batch. (It&amp;rsquo;s default key bindings.)
Then you will be in edit mode, and when you are done modifying, C-; again to finish editing.
Note At first, I didn&amp;rsquo;t know how to use it. But I found it very useful to see what is going on in real time by looking at the *Messages*.</description>
    </item>
    
    <item>
      <title>make a list</title>
      <link>https://hugo.suwa3.me/post/2022-04-10-make_a_list/</link>
      <pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2022-04-10-make_a_list/</guid>
      <description>I have been very busy lately. Therefore, I couldn&amp;rsquo;t write my blog. Finally, now that my busyness has calmed down, I would like to spend my weekends posting blogs and catching up on technology.
I updated my MindMap. I made a list of technologies I want to know about. (by Notion) I started living with a dog last month. He is a puppy, but he will be quite large. The house I live in now allows dogs.</description>
    </item>
    
    <item>
      <title>kafka on Docker</title>
      <link>https://hugo.suwa3.me/post/2022-02-20-kafka_on_docker/</link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2022-02-20-kafka_on_docker/</guid>
      <description>Kafka on Docker なんだか二度目な気がするけれど気のせいです
docker-compose.yml version: &amp;#34;3&amp;#34; services: zookeeper: image: confluentinc/cp-zookeeper:5.5.1 hostname: zookeeper container_name: zookeeper ports: - &amp;#34;32181:32181&amp;#34; environment: ZOOKEEPER_CLIENT_PORT: 32181 ZOOKEEPER_TICK_TIME: 2000 broker: image: confluentinc/cp-kafka:5.5.1 hostname: broker container_name: broker depends_on: - zookeeper ports: - &amp;#34;9092:9092&amp;#34; - &amp;#34;29092:29092&amp;#34; environment: KAFKA_BROKER_ID: 1 KAFKA_ZOOKEEPER_CONNECT: &amp;#34;zookeeper:32181&amp;#34; KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092 KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 CONFLUENT_SUPPORT_METRICS_ENABLE: &amp;#34;false&amp;#34; cli: image: confluentinc/cp-kafka:5.5.1 hostname: cli container_name: cli depends_on: - broker entrypoint: /bin/sh tty: true networks: default: external: name: iot_network そういえば、先日知ったのですが！docker-compose コマンドが、Docker CLI にサブコマンド compose という形で実装されて docker compose ps ができるようになったらしいです。Usage を見ると docker-compose のほうが少しだけ Options の種類が多そうに見えるのですが、docker-compose で非推奨のものはわざわざ実装しないという方針のよう？</description>
    </item>
    
    <item>
      <title>Looking back at 2021</title>
      <link>https://hugo.suwa3.me/post/2021-12-26-looking_back_at_2021/</link>
      <pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-12-26-looking_back_at_2021/</guid>
      <description>2021の目標 昨年(2020年)の振り返りです。
A look-back 2020
2021年の目標は「体力づくり」でした。
2021年の半ばから週に2〜3日出社するようになったため、体力はついたかなと思います。
技術系イベント＆BLOG 以前は入門だったりハンズオンだったりのイベントに「広く浅く、とにかくたくさん！」という気持ちで参加していたのですが、だんだん専門的な内容を扱うようになるにつれて参加したい技術イベントの種類が減ってきたように感じます。
Kubernetes Middle Way
ふわっとしていた Kubernetes のネットワークについて、流れを把握することが出来ました。 Zapier
日常生活での課題を解決したい！→技術選定→設計→実装→試験→新たな課題
一連の流れを一つの BLOG でまとめることができました。
メール送受信の仕組みとプロトコルについて、学ぶモチベーションのきっかけになりました。 Customize my Terminal
バルタン星人にハマってターミナルに表示させてみました。 Contribute Anniversary
初めて OSS に PR を出して merge され、晴れて contributor になれました。
2021年で一番うれしかったです。 Django forms
久しぶりに Django Girls へ参加してきました。
チュートリアルの翻訳作業をもくもくとこなしました。
「何故スタッフとして参加するのか」ということを言語化できたので良かったです。 他には、Netlify 上でホスティングしていた当 BLOG を Vercel▲ に移行したり、Emacs の理解を深めるために Lisp 入門したりしました。
読んだ書籍 ITと数学
データをもとにして予測をたてていく行為を、ノートの上で数式をもちいて行うための本でした。例えば、一年間の月別平均気温のグラフを四次関数で仮定します。そこから、最小二乗法で誤差を小さくしていくために紙に数式を書いて実際に解いていきました。また、パラメータの値を求めるために、偏微分や合成関数だとかの公式を思い出しつつ解いていきました。
わたしにとって数学は現実逃避のための道具でしたが、数学を現実に役立てるために使う初めての経験でした。(本当に悲しいことがあったときは、読書をするより数学に没頭するほうが現実からより離れることができると感じます。)
後述する転職活動が思いのほか難航してつらかったので、この書籍で数式を解きながら現実逃避していました。
転職活動 転職活動、はじめはグダグダでした。
エージェントに登録してみたのですが
「とりあえず練習だと思って、多少興味の方向性が違っても面接を受けてみてください」
というアドバイスの通りに、何社か受けてみました。そして、興味がないので明らかに顔と態度に出てしまい、企業側も
「エージェント経由ということは何社か受けているとは思うのですが、その中で弊社を選んだ理由は何ですか？」
といった内容で質問をしてくるのですが、正直(うーん、何でだろう？)という気持ちで答えるので、まったく的を得ない回答しかできずに相手を困惑させたと思います。
そういった面接を50社近く受けました。だんだんと、面接する企業側に対して失礼だし、申し訳ないという気持ちが大きくなり、また(エージェントの『数を撃てば当たる』の転職方法は、わたしに向かないのでは・・)と、感じ始めたため、一旦エージェントを使わずに転職活動をしてみることにしました。
「本当に転職したい」
と心から思う、IT企業のSRE職に2社応募した結果、2社ともスムーズに内定を貰うことが出来ました。ここから得た教訓は、おそらく自分が思っている以上に、自分の本音が顔と態度にでるということでした。
うそをつくことが苦手で、本音と建前を使い分けることが下手な人間は、常に人様にバレても問題のないような本音で生きたほうが、生きやすいと思います。普段の小さな考えごとでも、人が見ていないような場でも、恥ずかしくない生き方をしたいと思いました。</description>
    </item>
    
    <item>
      <title>Getting Started in lisp</title>
      <link>https://hugo.suwa3.me/post/2021-12-19-getting_started_in_lisp/</link>
      <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-12-19-getting_started_in_lisp/</guid>
      <description>なぜ Lisp に入門したのか もともと Emacs の設定をするときに 「おおもとである Lisp の言語設計の思想を少しでも理解することで Emacs の設定にいかせるのでは？」 というモチベーションで、Lisp について調べていた。
例えば、leaf みたいなパッケージ管理を使うと、本来なら自分で制御できる範囲の根っこの部分が他人依存になってしまうから使わないようにしていこうと考えた。
ただ、そもそもその判断に妥当性があるのかイマイチ自分自身で納得できなかった。どこまでを自分で制御可能な射程距離だと考えるのかにもよるのかもしれない。
調べていくなかで Lisp の言語設計の思想が Emacs の設計思想に影響を与えているように感じた。本体を小さくして必要に応じてモジュールを追加していく、そのモジュールも自分自身で実装していく(それが簡単にできるようになっている)といった価値観なんだなぁと思った。
わたしは、機能性の高いペン立てが欲しくて探したけれども、どれも自分の欲しい機能を満たしていないし、そもそも将来的にどういった機能が欲しくなるかも未知数で
「長く使いたいからこそ、最小構成で尚且つ拡張性の高いペン立ては存在するのか？」
と考えたときに、レゴブロックでペン立てを作れば良いと思った。
探したら、実際にレゴでペン立てを作る人たちは一定数いた。
きっと彼らは Lisper ないしは、その価値観に共感する可能性の高い潜在的 Lisper なのかもしれない(？)
入門してみて とりあえず近所の本屋に行って、検索機で「Lisp」と入力して、出てきた本を買って入門してみた。
「括弧がそのまま構文木を表現している」と知ったときは、確かにそうだわ、そのまま図になる！と感動した。これは図で理解するタイプには分かりやすそう。
演算式であっても前置記法という部分で「アセンブリもそうだったな」と思い出して、リストのメモリ配置の部分では「アセンブリでは自分でやらんといけんかったわ……」と、思い出した。普段コードをあまり書かないので、比較対象がOS自作のさいに触ったアセンブリ言語になってしまう。
全体的にシンプルで入門向きな言語だと感じた。これで Emacs の設定も捗ると良いなぁ。(捗るのか？)</description>
    </item>
    
    <item>
      <title>Emacs etc</title>
      <link>https://hugo.suwa3.me/post/2021-12-11-emacs_etc/</link>
      <pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-12-11-emacs_etc/</guid>
      <description>emacs_卒leaf 使っている package の整理
leaf とは: Homebrew みたいな感じ
elpa (Emacs Lisp Package Archives)
→ emacs 内で使われているパッケージを管理 これからは: use-package.el を使う 今後 github からのパッケージを入れる場合は？
→ quelpa &amp;amp; quelpa-use-package を検討する
使っている package 名一覧 (leaf leaf-keywords :ensure t :init (leaf hydra :ensure t) (leaf el-get :ensure t) (leaf blackout :ensure t) (leaf terraform-mode :ensure t) (leaf gfm-mode :ensure t) (leaf markdown-mode :ensure t) :config ;; initialize leaf-keywords.el (leaf-keywords-init))) ;;残り - Ivy - swiper - counsel - prescientc - ivy-prescient 今後も使うかどうか検討して必要なら入れる</description>
    </item>
    
    <item>
      <title>Try kafka</title>
      <link>https://hugo.suwa3.me/post/2021-12-05-try_kafka/</link>
      <pubDate>Sun, 05 Dec 2021 13:00:27 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-12-05-try_kafka/</guid>
      <description>Kafkaとは ナンジャラホイから始まったので調べました。
Kafka on Docker ざっくり概要を掴んだら Docker で試します。なんか local で試すの重そうだな、環境汚しそうだな・・と感じたら、とりあえず Docker で試せるか調べるとだいたいある。　リポジトリ: https://github.com/wurstmeister/kafka-docker
チュートリアル: http://wurstmeister.github.io/kafka-docker/
docker-compose.yml の書き換えなどが必要なので、本家をフォーク&amp;amp; clone して使うのが良さそう。 Kafka 完全に理解したｸﾏ-ʕ•ᴥ•ʔ</description>
    </item>
    
    <item>
      <title>Django forms</title>
      <link>https://hugo.suwa3.me/post/2021-11-28-django_forms/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-11-28-django_forms/</guid>
      <description>Django Girls https://djangogirls.org/
Python フレームワークである Django を題材に、女性や性的マイノリティーなどテクノロジーの知識習得に壁を感じる方々を対象にワークショップを開いている慈善団体です。
コロナ以前は月イチ開かれるハンズオンにて Teaching Assistant として参加していました。(コロナでしばらく活動がなかったのだけれども、)最近小さなもくもく会があったので参加してきました。
主に Django Girls チュートリアルのDjangoフォーム部分の翻訳作業をしました。
チュートリアルは何度かやっているけれども、「ここって結局何がしたいんだっけ？」というところや「ここの考え方はどう翻訳(意訳)したら伝わりやすい？」など、つど悩みながらだったので思いのほか時間がかかりました。他のスタッフの方に相談しながら最後まで進められました。
なぜやるのか Wantedly みたいやな！
実際、女性向けの開発コミュニティは結構存在している。PyLadies や Java女子部、Women Who Go Tokyo etc..
「スタッフとして参加したい」
と、強く思ったのは Django Girls で、その理由は
コミュニティの理念として門戸の広さを感じた 自分がやりたいことにちかいなぁと感じた というのが大きかったからかもしれない。
他のコミュニティは、ある程度の前提知識がある女性向けだなぁと感じたのだけれども、Django Girls では
「ファイルとディレクトリの違いって何？」
だとか
「ターミナルとは？」
とか
「PC の中の『仮想環境』という意味がどうしても納得できない」
だとかの、参加者ひとりひとりの疑問に向き合いながら、スタッフたちで説明を試みたり一緒に考えたりする。
地方に住む学生だった頃
「エンジニアになりたい」 という意思はあれど、上京を反対されたり、地方に未経験者OKのエンジニア求人が無かったりした。そして、エンジニアと交流できるようなコミュニティも見つけられなかった。
もし、当時の自分と同じような立場の学生や女性がいたら、そういった人たちの小さなきっかけになるようなコミュニティがあればなぁ・・
と、考えたときに、そのコミュニティ像に一番近いと感じたのが Django Girls でした。
女性や性的マイノリティーなどテクノロジーの知識習得に壁を感じる方々を救いたいのであれば、NPOだとか、未経験者向けのエンジニア養成学校のようなサービスも多くある。
ただ、個人的に、エンジニアの「習得した知識をコミュニティを通して共有していく」という文化がとても好きで、わたし自身も Django Girls に参加することでたくさん学ばせてもらって感謝しているので、その恩返しのつもりでスタッフとして貢献していけたら良いのかなぁと思いました。
色々と堅苦しく考えてしまいがちだけれども、肩の力を抜きつつコミュニティでの出会いを楽しみながら活動していきたいです。</description>
    </item>
    
    <item>
      <title>Git Large File Storage (LFS)</title>
      <link>https://hugo.suwa3.me/post/2021-11-27-git_lfs/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-11-27-git_lfs/</guid>
      <description>Hugo の画像をどこで管理するかの検討 候補
Git Large File Storage (LFS) Git LFS で画像データなどを管理する際のイメージが湧いていないので調査して整理する
https://git-lfs.github.com/ AWS S3 きっかけ Hugo on Vercel で blog を投稿した際に、記事内でつかっている画像 image が build 時大量に up されていて build が重いので何とかしたいと思いました。そもそも バイナリデータを大量に git で管理したくないなぁということで、いくつか候補を挙げて調査してみることにしました。
候補1: Git Large File Storage (LFS) って何だろう Git で画像や動画のような大きなファイルを別サーバーに分けて管理する方法があるらしい？ということで、どういった構成でデータをもつことになるのかザックリ調べました。
文字で読んでもサッパリ分からんだったので図で整理しました。
ローカルで blog(Markdown) を編集して Github に push する push の直前に該当の画像ファイルなどは LFS API を通して Git Large File Storage にアップロード される (Github には画像のオブジェクトハッシュやファイルサイズなどのメタ情報のみ保存される) (text pointer から実体が紐付くイメージで構成図を書いたけど逆にややこしい図になっているな・・) Markdown で書かれた blog text と、Git Large File Storage が vercel に(たぶん)アップロードされる vercel 上で hugo の build によって html に変換される → その際に画像ファイルも都度アップロードされる〜〜〜 ここまで考えて「あれ？LFSで速度改善されないのでは？？」と、気づきました。気づいてよかったし、着手前にきちんと調査詰めて要件を満たしているか確認するの大事だなと思いました。</description>
    </item>
    
    <item>
      <title>Contribute Anniversary</title>
      <link>https://hugo.suwa3.me/post/2021-11-25-contribute_anniversary/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-11-25-contribute_anniversary/</guid>
      <description>Contribute Anniversary 先日、初めて OSS に PR を出して merge され、晴れて contributor になれたため経緯を書いていきたいと思います。
該当 PR:
https://github.com/kubernetes-sigs/kubespray/pull/8224
経緯 ansible-playbook を実行したら「設定値が適切でないよ」と Error が出たので、Github で PR や issue を眺めて原因を探していました。見慣れたアイコンがあるなぁと思ったら、なんと職場の上司がそのソースコードに対して PR を出していて、わたしの Error 箇所である「適切ではない設定値」が merge されていました。
何よりもまず「わたしの上司コントリビューターなの？！」ということに驚きました。「Error 箇所を特定していたら上司を見つけたよ！すごい！」と、上司へ報告をしに行ったところ、上司は
「この設定で Error したの？もしバグだったら自分の修正が世界中のユーザーに迷惑をかけることになる・・どうしよう」
と落ち込んで(？)いて、確かにそうだな・・大変そう・・と思いながらも
「じゃあこの Error の原因調べるのお願いしますね」
と、丸投げして一週間くらい放置していました。
もし仮に修正が必要なバグがあったとしても、わたしじゃ恐らく原因を突き止められないしなぁという気持ちもありました。
何の音沙汰もなく一週間経ち
(世界中の人が使っているツールのはずなのに、わたし以外誰も何も文句を言ってこない。おかしい)
と、流石に上司のせいではなく、自分の環境が悪いのだろうなと思い調査してみることにしました。
該当箇所についてドキュメント内を調べたところ「設定値が適切でないよ」と警告が出ていた箇所とは、また別の設定値が出てきました。具体的には、上司が indentfirst=None と設定してたところは first=False と設定するように書かれていました。あれ？やっぱり上司は世界中の人に迷惑をかけているのかな？と不安になりながらも、それらパッケージのおおもとのソースコードを見てみることにしました。
すると、以下のことが分かりました。
現行バージョンでは indentfirst=None、新しいバージョンでは first=False と指定されている indentfirst=None は次期バージョンで Error になるため Warning である 現行バージョンでも first=False の設定を使うことができる つまり、わたしの環境のパッケージのバージョンが一つ飛び抜けて高くなっていて(requirement.txt で様々なパッケージの推奨バージョンは指定されていたのに、どんな構築をすればそうなるんだ？)それが原因で今回の Error が引き起こされていました。上司は世界中の人に迷惑をかけておらず、わたしが自分で掘った穴に勝手に落ちている状態でした。
パッケージのダウングレードをすれば大丈夫そうということが分かったので、これで調査を切り上げようかと思いましたが、上司の出した PR を参考にして少し頑張ればわたしも今回の内容で PR を出せるのでは？と気づきました。</description>
    </item>
    
    <item>
      <title>Configure init.el so that twilight-bright-theme works</title>
      <link>https://hugo.suwa3.me/post/2021-11-21-configure_init.el_so_that_twilight-bright-theme_works/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-11-21-configure_init.el_so_that_twilight-bright-theme_works/</guid>
      <description>Theme の設定が効いていない emacs のバージョンを上げてから Theme が効いていない Error を放置していたので何とかしました。ちなみにこの Error を解消したら Theme より下に設定されていたものたちが全て効くようになりました。今回の件で、Error は早めに摘もうという気持ちになりました。
修正箇所 これは emacs のバージョンを上げるたびに起こりうる Error のため、忘れないように手順を残しておきます。
emacs version: 27.2
修正前の init.el
;; Theme (leaf twilight-bright-theme :ensure t) (require &amp;#39;twilight-bright-theme) (load-theme twilight-bright t) 修正後の init.el
;; Theme (leaf twilight-bright-theme :ensure t) (require &amp;#39;twilight-bright-theme) (setq custom-theme-directory &amp;#34;~/.emacs.d/elpa/twilight-bright-theme-20130605.843/&amp;#34;) (load-theme &amp;#39;twilight-bright t) &#39;twilight-bright-theme から Tag jump して /elpa 配下で設定しているフルパスを入手する ※ alt + . setq custom-theme-directory で、1で入手したフルパスを指定する twilight-bright の先頭にシングルクォートを付けてシンボルにする あとは ;; Theme 以下を上から一行ずつ eval して表示を確認していく</description>
    </item>
    
    <item>
      <title>css test</title>
      <link>https://hugo.suwa3.me/post/2021-11-14-css_test/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-11-14-css_test/</guid>
      <description> test1 test2 *[ ] test3 *[ ] test4
test5 test6 aaa bbb </description>
    </item>
    
    <item>
      <title>Fix checkbox</title>
      <link>https://hugo.suwa3.me/post/2021-11-14-fix_checkbox/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-11-14-fix_checkbox/</guid>
      <description>暫定対処 https://github.com/zwbetz-gh/papercss-hugo-theme
hugo の上記 Theme で、Markdown の チェックボックス表記が崩れている状態だった。
custom.css に以下の修正を加えることで解消した。
ul li input { display: inline; } ただ、この修正は根本的な解決にはならない。修正の影響範囲が大きくなってしまうため、予期せぬところでまた表記が崩れる可能性が出てくる。
根本解決への道筋(仮) class 属性を付与してそれぞれ表記を指定する → 修正箇所が増えるけれど影響範囲は小さい hugo の Markdown レンダリングエンジンについて調査する → 大変 良い機会なので、hugo の Theme を何か作ってみたいなぁと思いました。
郷に入っては郷に従え https://github.com/zwbetz-gh/papercss-hugo-theme/blob/master/static/css/paper.css#L745-L781
「ul li xx の場合は」
ul, li, xx, など、それぞれの場合について細かく指定しているようなので暫定的な対処で良さそう。
issue&amp;amp;PR 作成の準備_TODO わたしは手元で既に custom.css に変更を加えてしまっている。
papercss hugo theme を使用して最小構成で作成しなおす 同様の表記崩れがあることを確認する スクショを作成して、暫定対処の内容で issue&amp;amp;PR 作成 感想 hugo のレンダリングエンジンに手を加えるというのは Theme の世界から外れて hugo の修正になってしまう。まずは Theme の中で完結する(つまり暫定対処の)修正をせざるを得ないのかもしれない。
ただ暫定的な対処の場合だと hugo 内で Markdown を表記させる場合には妥当だけれども、Org-mode からリスト表示させる場合は &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt; で行っているようだった。つまり Org-mode から表示させたときに、この修正は効かなくなってしまう。</description>
    </item>
    
    <item>
      <title>don.suwa3.me_2nd</title>
      <link>https://hugo.suwa3.me/post/2021-11-07-don_suwa3_me_2nd/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-11-07-don_suwa3_me_2nd/</guid>
      <description>さくらのVPS 何台もポコポコ建てる気はないので1台分の「さくらのVPS」に登録
- [x] さくらのVPSに登録 CPU: 仮想2Core メモリ: 1GB SSD: 50GB 勘でこのスペックにしたけど多分足りない。
おそらく build で失敗するし、力技で構築できたとしても実運用はできなさそう。(メモリ不足で落ちる)
足りなくなったらサーバースペック上げれば良いか！
構築しながら Ansible 書いてしまおう。がんばろう。
スタートスクリプト Mastodon | さくらのクラウド ドキュメント
Mastodon の構築を一発でやってくれるスクリプトがあるらしい。
楽チンで良いなーと思ったけれど、運用中にどこで何の設定しているのかわからなくなりそうなので、さくらのスタートスクリプトは使わないことにしました。
設定時にドキュメントと合わせてTODOリストとして使う。
設定済みリスト 主にセキュリティ周りの設定 - [x] ssh 鍵の設定 - [x] id, pass でのログインを許可しない - [x] 作業用ユーザーを作成して sudo 権限を付与 - [x] デフォルトユーザーを削除 - [x] port の変更 (/etc/ssh/sshd_config) - [x] ufw の設定 - [x] さくらでパケットフィルタの設定解除 EC2 のときは稼働時間に応じて課金だったので、構築中の使わないときはサーバーを落としていた。 さくら VPN は定額？っぽいので落とさなくても良さそう。踏み台にされたくないので最低限の設定はしておく。。
※ログイン試行の log を見やすくするために port の変更もしておく
その他の設定 - [x] ~/.</description>
    </item>
    
    <item>
      <title>Change Theme and Font</title>
      <link>https://hugo.suwa3.me/post/2021-10-10-change_theme_and_font/</link>
      <pubDate>Sat, 09 Oct 2021 13:00:27 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-10-10-change_theme_and_font/</guid>
      <description>hugo でフォントの編集 だいたい assets/css の下に custom.css がある。
https://github.com/zwbetz-gh/papercss-hugo-theme/blob/master/assets/css/custom.css
使いたいフォントの選定
日本語の手書き風のやつ
https://fonts.google.com/specimen/Yomogi#standard-styles
@import url(https://fonts.googleapis.com/css?family=Yomogi); body { background-image: url(&amp;#39;{{ &amp;#34;img/geometry2.png&amp;#34; | relURL }}&amp;#39;); font-family: Neucha,Yomogi,sans-serif; } /* font */ tr { font-family: Neucha,Yomogi,sans-serif } p { font-family: Neucha,Yomogi,sans-serif } a { font-family: Neucha,Yomogi,sans-serif } h1,h2,h3,h4,h5,h6 { font-family: Neucha,Yomogi,sans-serif } th,td { font-family: Neucha,Yomogi,sans-serif } ↑年に2回くらいしかcss書かないから覚え書き。
かなりクセ強めになったけどプライベートなBlogなので良し！</description>
    </item>
    
    <item>
      <title>testing</title>
      <link>https://hugo.suwa3.me/post/2021-07-12-testing/</link>
      <pubDate>Mon, 12 Jul 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-07-12-testing/</guid>
      <description>test</description>
    </item>
    
    <item>
      <title>Hacker Rank</title>
      <link>https://hugo.suwa3.me/post/2021-06-26-hackerrank/</link>
      <pubDate>Sat, 26 Jun 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-06-26-hackerrank/</guid>
      <description>諸事情あり Hacker Rank の Bash 試験の練習問題を解きました！
いろいろあって悲しかったので、昇華するための output です。
Linux Shell/Bash Let&amp;rsquo;s Echo Write a bash script that prints the string &amp;ldquo;HELLO&amp;rdquo;. echo &amp;#34;HELLO&amp;#34; Looping and Skipping Your task is to use for loops to display only odd natural numbers from 1 to 99. for i in {1..99} do if [ $((i % 2)) = 1 ] then echo $i fi done Looping with Numbers Use a for loop to display the natural numbers from 1 to 50.</description>
    </item>
    
    <item>
      <title>Customize my Terminal</title>
      <link>https://hugo.suwa3.me/post/2021-05-03-customize_my_terminal/</link>
      <pubDate>Mon, 03 May 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-05-03-customize_my_terminal/</guid>
      <description>GWだしターミナルのカスタマイズしたい！
ということで、いじってみました。備忘録です。
環境 macOS Catalina zsh 最終形態 /etc/zshrc
source ~/.git-prompt.sh # Prompt option display settings GIT_PS1_SHOWDIRTYSTATE=true GIT_PS1_SHOWUNTRACKEDFILES=true GIT_PS1_SHOWSTASHSTATE=true GIT_PS1_SHOWUPSTREAM=auto # Default prompt setopt PROMPT_SUBST ; PS1=&amp;#39;💠 %F{cyan}%n@%m%f: %F{white}%~%f %F{red}$(__git_ps1 &amp;#34;(%s)&amp;#34;)%f \$ &amp;#39; # 表示 💠 suwa3@mbp-local: ~/Ishizuka427/ (master=) $ デスクトップの背景にはM78星雲を設定し、ターミナルの背景を半透明にしてうっすらと見えるようにしてあります。非常にエモいですね。
制御文字で、ターミナルを起動するたびにバルタン星人が出現するようにしました。これでリモートサーバーと間違えません。
プロンプト 表示させたいもの
ユーザー名 ホスト名 カレントディレクトリ 現在のブランチ名 プロンプト部分の表示が長くなると入力できる長さが短くなってしまうので、入力部分のみ改行して表示させたい。
パラメータ 出力内容 %n ユーザー名 %m ホスト名 %~ カレントディレクトリ ※ブランチ名については後述します
シンプルに書くとこんな感じ
PS1=&amp;#39;%n@%m: %~ %#&amp;#39; # 表示 ユーザー名@ホスト名: ~/Ishizuka427 % 色をつける %F{色}文字列%f
ユーザー名、ホスト名の部分をcyan色にしてみます。
%F{cyan}%n@%m%f black, red, green, yellow, blue, magenta, cyan, white の7色から選んで指定できます。</description>
    </item>
    
    <item>
      <title>Zapier</title>
      <link>https://hugo.suwa3.me/post/2021-05-01-zapier/</link>
      <pubDate>Sat, 01 May 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-05-01-zapier/</guid>
      <description>前提 プライベートのメールはYahoo!メールを長いこと愛用しているのですが
「このメールの、この内容は見落としたくないからDiscordに転送したいなぁ」
という思いがあり、ツールを使ってbotを作ってみることにしました。
トリガー: 任意のメールが届いたら
アクション: Discordに通知と内容が飛ぶ
ツール選定 候補
Zapier(有料あり) IFTTT(無料) Zapierについて Free プランの内容をザックリ
100タスク/月 アプリケーションは5個まで 15分の制限あり シングルステップのみ 有料なら即却下だったけれども、要件としてはFreeで十分OKそうだったのでZapierに決めました。
実装 Email Parser by Zapier で MailBox を作成(xxx@robot.zapier.com) Yahoo!メール側で転送設定をする Yahoo!メール側で xxx@robot.zapier.com を連絡用メールアドレスとして登録する Zapier の Trigger 設定で Email Parser by Zapier にて作成した MailBox に届くメールを取得する Zapier の Filter 設定で Subject や Body に含まれる任意の Text(単語)を登録してメールを絞り込む Zapier の Action 設定で Discord のサーバー#Channel に届くよう設定する →とりあえず動いたが課題あり
課題 Yahoo!メールの仕様で、自動転送されたメールはYahoo!メールのメールサーバーに残らない。→残したい
勘で試験を実施したらエラいことになったので試験設計はしっかりやる
次回 ZapierからIMAP by Zapier Integrationsを利用して、Yahoo!メールのメールサーバーへ任意のメール情報を取りに行けないか。
設計、実装まで行う。
感想 メールってめちゃくちゃ古典的という印象だけれども、実はシンプルで扱いやすいのかなぁと感じました。</description>
    </item>
    
    <item>
      <title>Remote Emacs</title>
      <link>https://hugo.suwa3.me/post/2021-03-13-remote_emacs/</link>
      <pubDate>Sat, 13 Mar 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-03-13-remote_emacs/</guid>
      <description>Emacs 奮闘記 🌟 ゴール リモートサーバー上に、local にあるような Emacs 環境をつくりたい == 経緯 == リモートサーバー上に local で動いている spacemacs (emacs の設定群)の init.el を、そのまま貼ってみた。
＿人人人人人人人人人人＿
＞　まともに動かない　＜
￣Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^￣
素の Emacs だと動く・・。
これを機に、卒spacemacs してプレーンな Emacs をカスタマイズしていきたいと思います！ 設定したものたち leaf
スタンダードな設定と、ミニバッファの補完パッケージを入れました。
(参考: https://emacs-jp.github.io/tips/emacs-in-2020)
ssh
多段 ssh できるように設定する。
※ Trump を使って ssh 接続する際に踏み台を使う場合は、先に ~/.ssh/config の設定をしてしまうほうがラク。
# Gateway host XXXX HostName XXX.XX.X.XX User hoge # RemoteHost-out Host YYYY HostName YY.YYY.YY.YY User huga ProxyCommand ssh -W %h:%p XXXX Trump
デフォルトで入っているみたいなので特に設定はなし C-x C-f /ssh:huga@YYYY:/home/huga</description>
    </item>
    
    <item>
      <title>Evernote to Markdown</title>
      <link>https://hugo.suwa3.me/post/2021-03-06-evernote_to_markdown/</link>
      <pubDate>Fri, 05 Mar 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-03-06-evernote_to_markdown/</guid>
      <description>Evernote to Markdown ここのREADME.mdの通りに実行したらできました。
https://github.com/wormi4ok/evernote2md
今回はDockerを使ってみました🐳
※バージョンが19系だったので最新の20系にUpdateしました
Evernoteのエクスポートファイル.enexを.md形式に変換 先にEvernoteの記事をExportしておきます
ノートをエクスポートする – Evernote ヘルプ＆参考情報
% mkdir exports % mv ~/Downloads/Mynote.enex . % docker run -t --rm -v &amp;#34;$PWD&amp;#34;:/tmp -w /tmp wormi4ok/evernote2md:latest exports/Mynote.enex ./notes Unable to find image &amp;#39;wormi4ok/evernote2md:latest&amp;#39; locally latest: Pulling from wormi4ok/evernote2md ba3557a56b15: Pull complete 2c339f1d5460: Pull complete Digest: sha256:e4d5eb9715f4a8b096e58c393a227f88d3c79fcecb2d2d0da33b0e9c7f0561b2 Status: Downloaded newer image for wormi4ok/evernote2md:latest Notes: 5 / 5 [===========================================================================================] 100.00% 0s Done! あるか確認
notes % ls Evernote_blog.md	Shell_Script.md	purpose_of_the_week.</description>
    </item>
    
    <item>
      <title>Kubernetes Middle Way</title>
      <link>https://hugo.suwa3.me/post/2021-01-24-kubernetes_middle_way/</link>
      <pubDate>Sun, 24 Jan 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-01-24-kubernetes_middle_way/</guid>
      <description>Kubernetes Middle Way Kubernetes Middle Way の最終セッションの内容が良さげだったのでまとめました！
https://www.youtube.com/watch?v=KmM16GHwies&amp;amp;feature=youtu.be
スライド資料
整理しながら理解する、Kubernetesのネットワークの仕組み by @hhiroshell 1. イントロダクション Kubernetes のネットワークはいろいろな用語が出てきて把握が難しい
このセッションのゴール
Kubernetes のネットワークの全体像を理解する 様々な構成要素の役割と関係性を整理して把握 ネットワーク周りのドキュメントの言っていることがわかる 2. Kubernetes のネットワークのアーキテクチャ 全体を4つに分けて考えてみる
インフラによって実態は異なる ベアメタルなど。なんだろうベアメタルって・・🤔🐻くま？ Node Network 2. Node Network 上にソフトウェア的に構成される論理ネットワーク
要件がいろいろとあるらしい
クラスター内の全 Pod が、互いのIPアドレスでNATなしで変換できるなど Pod Network / Cluster Network 3. Pod を Cluster 内のネットワークに参加させる
kubelet が Pod を起動するときに CNI プラグインを実行することで上記を行っている kubelet と CNI プラグイン 4. Pod に対する通信において、名前解決・ロードバランシング・サービスディスカバリなどの機能を提供する Service Network
3. Cluster Network 公式ドキュメントでは&amp;quot;Cluster Networking&amp;quot;。自力構築する場合は Flannel, Calico などを使う</description>
    </item>
    
    <item>
      <title>Shell Script</title>
      <link>https://hugo.suwa3.me/post/2021-01-24-shell_script/</link>
      <pubDate>Sun, 24 Jan 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-01-24-shell_script/</guid>
      <description>Shell Script Shell Script をキチンとやろうと思って色々さわったので備忘録メモです。
独学プログラマーのPart3 (第16章 Bash, 第17章 正規表現) を読む Bash (オプション_コラム) $ ls --author -l # Ubuntu &amp;ndash;author オプション初めて使ったかも。ls の help を見たら -A とのこと。なるほど〜
$ ls --help # Ubuntu Usage: ls [OPTION]... [FILE]... List information about the FILEs (the current directory by default). Sort entries alphabetically if none of -cftuvSUX nor --sort is specified. Mandatory arguments to long options are mandatory for short options too. -a, --all do not ignore entries starting with .</description>
    </item>
    
    <item>
      <title>purpose of the week</title>
      <link>https://hugo.suwa3.me/post/2021-01-22-purpose_of_the_week/</link>
      <pubDate>Fri, 22 Jan 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-01-22-purpose_of_the_week/</guid>
      <description>purpose of the week タイトルが英語なのは、Markdown化 (Hugoへ移植) するときスムーズにするためです。。
画像がうさぎなのは、単純にうさぎが好きだから＆まだまだ出来なくても成長するぞ！の心意気です。成長を実感したら、もう少し大人なうさぎにするかも。
体力づくり 体力づくりは習慣化まあまあ出来ていて
毎日お風呂後にストレッチ 週に5回くらいストレッチ後に筋トレ(腹筋＆背筋それぞれ50回ずつ) 週2〜3回の朝ランキング ↑これが、来月まで続けば御の字かなぁ。
続けられなくても、代替策を考えればOKの気持ちで💪
学習面は、**書かないとやらないな？**と思ったので書きます。
技術 勉強会の内容、発表動画と資料を参考にまとめる youtube発表動画
スライド資料 Kubernetes Middle Way
シェルスクリプト練習問題（中級編） | ゆるっとエンジニアブログ 独学プログラマー(Part3) shell script
独学プログラマー(Part4) SQL 独学プログラマー(Part1,2) Python それぞれ完了したらアウトプットするぞい。
語学 How language shapes the way we think | Lera Boroditsky (youtube) 言語の違いが考え方にどう影響するのか具体例をもとに紹介されている。おもしろい〜 TEDシャドーイング
ラズパイの新作にテンアゲしたので。 Raspberry Foundation Release Their Own Silicon, the Raspberry Pi Pico Linux Today 翻訳 </description>
    </item>
    
    <item>
      <title>Evernote blog</title>
      <link>https://hugo.suwa3.me/post/2021-01-19-evernote_blog/</link>
      <pubDate>Tue, 19 Jan 2021 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2021-01-19-evernote_blog/</guid>
      <description>Evernote blog 今日から試験的に Evernote で blog を書いてみたいと思います。
今まで Hugo+Netlify で3ヶ月ほどblogを運用していましたが、Postach.io という Evernote のノートブックをそのままブログにできるサービスがあることを知って、思うところもあり乗り換えてみようと考えました。
Hugo+Netlify から Evernote+Postach.io へ乗り換えようと考えた理由 1) Hugo は Theme カスタマイズが大変そう GitHub上 などで公開されている Theme を読み込んで簡単に変更できますが、それらをカスタマイズするにはリポジトリをフォークして、cssファイルなどを上書きする必要があります。(ちょっと面倒くさい)
2) git 管理が煩わしい 静的サイトジェネレーターは更新の度に git push するのが手間なうえ、書き直したエモい差分が GitHub 上で公開されてしまうなどの問題があります。(これはプライベートリポジトリで管理してしまえば解決します。)
3) Markdown では細やかな色付けが難しい カスタマイズすることで不可能ではないですが、基本的にモノクロで少しさびしいです。
4) WYSIWYGエディタマイブームが来ている GitHub 上でオープンソースの WYSIWYG エディタを探したり、「編集作業とは」について考えることが増えたり、人生で初の WYSIWYG ブームが到来中です。
5) Evernote to Markdown のGitHubリポジトリを見つけた *.enex形式でエクスポートされた Evernote を、Markdown ファイルに変換する CLI ツールを見つけました。いつでも Hugo に戻ってこられるね♪
Wordpress to Markdown の際も画像の移行で詰まったけれど、たぶん Evernote to Markdown も画像なり日本語のファイル名なりでエラーしそうな予感がしています。Wordpress on EC2 から Hugo+Netlify に乗り換えてから、すっかり blog の更新が減ってしまった。正直、Hugo を触っていて一番テンションが上がった瞬間って、Wordpress からエクスポートしてきた記事を CLI ツールで Markdown に変換して、それを Hugo で問題なく表示できた瞬間がピークでした。</description>
    </item>
    
    <item>
      <title>A look-back 2020</title>
      <link>https://hugo.suwa3.me/post/2020-12-31-a-look-back-2020/</link>
      <pubDate>Thu, 31 Dec 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-12-31-a-look-back-2020/</guid>
      <description>2019年年末のふりかえりです。
2019年ふりかえり
来年も楽しむ気持ちを忘れずに、少しずつ自身のキャリアや方向性などを 考えていくような内省を意識した一年にしたいです。
確かに2019年は「楽しむ」をテーマに生きていた気がします。
2020年は、外より内に目を向けることが多かった一年になった(かな？)と思います。
以下、2020年のふりかえりです。
技術系イベント 今年は様々なオンラインイベントに参加しました！ 住む場所を問わず交流ができるのがオンラインの良さだと感じました。 オンラインでのLTやハッカソンの経験が印象的でした。
PythonでWebアプリを作ろう(女性対象/男女コーチ◎) 2020.01
DjangoGirls の活動にスタッフとして参加しました。今年は物理イベントでの開催が難しく、参加したのは年明けの一度のみでした。女性向けの開発コミュニティには今後も関わっていきたいと思います。
自作OSもくもく会
サイボウズの日本橋オフィスが会場でした。コンピューターについての理解を深める目的で簡易的なOS自作に挑戦しました。
初心者向けDocker/Kubernetesハンズオン(女性限定)
こちらも会場がサイボウズで、サイボウズ社員の方が主催するイベントでした。当時はサイボウズについて詳しくなかったのですが、丁寧に作り込まれた資料や中心となる解説者も周囲のサポートも自然で、居心地の良さを感じたのが印象的でした。
Ansiblejpディベロッパー部 2020.02
参加したかったのですが、人気で抽選になるかと思い、上司に「抽選に協力してください。わたしが当たったらわたしが参加します。もし上司が当たってもわたしに参加させてください」と、ジャイアン理論で話を進めていたら、先着順だったのでジャイアンせずに参加できました🙌。親睦会に参加して、登壇者の方々と Twitter でも繋がり、今でも謎の仲間意識をもっています。(わたしだけ？)
JAWS-UG 初心者支部#23 次回のハンズオン勉強会向けのチューター向け予習会
LambdaとAWSのAI Services と連携させて「文字起こし &amp;amp; 翻訳パイプライン」を、作ってみるハンズオンに参加しました。今まで参加したハンズオンの中で一番楽しかったです。レベル感的にも合っていたのかも。
Kubernetes Novice Tokyo #3
「何かしらのオンラインイベントで登壇を経験しておきたい！」と、思いこちらの初心者向け LT 枠で参加しました。→スライド資料参加者の方たちとTwitterで繋がり、オンラインイベントでは名刺交換がない代わりに SNS などで繋がることが増えた印象でした。むしろそちらの方が個人的には有り難いです。
RasPiハンズオン
Raspberry Pi のオンラインハンズオンに参加しました。上海からの参加者や、セキュリティ関連の元研究職の女性参加者の話が面白かったです。
社内ハッカソン
人生初ハッカソンです。shell script や Pythonで、mecab を使った形態素解析＆整形を担当しました。チーム外の人とコミュニケーションをとるキッカケになって良かったです。
技術Blog PostgreSQLの設定内容 〜PGTuneを使ってみて〜
MySQL と違い、PostgreSQL は初期設定のままでまともに動かないということを学びました。最初に知っていればあれほどサービス運用に苦労しなかったかもしれない。。
Slack見落とし撲滅作戦 Python + Selenium
Python と自動化の練習用に書いた記事です。実際には Slack の UI 変更に依存してしまう機能なので悪手ですが。。目的が先にあったので、動機づけはオマケです！
LambdaとPythonでAPI GatewayをエンドポイントにしてSlackに何かを送る
Lambda を AWS 内のサービスと組み合わせることで IAM ロールの設定に慣れてしまいさえすれば、何でもできる万能感がありました。サービス運用している自鯖をAPIエンドポイントとして兼務させていたけれど、エンドポイントであることを忘れてサーバーを落としてしまうと機能移動が大変なので、Lambda 移行はサーバー代節約＆開発時間短縮に有効だと感じました。</description>
    </item>
    
    <item>
      <title>Customize_spacemacs_font_settings</title>
      <link>https://hugo.suwa3.me/post/2020-12-09-customize_spacemacs_font_settings/</link>
      <pubDate>Wed, 09 Dec 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-12-09-customize_spacemacs_font_settings/</guid>
      <description>今日は spacemacs の整備をしたよ。
お仕事のタスク管理と日報管理をエディタでやりたいなと思って
Org-mode を検討したけれど、そこまで高機能でなくても良いし
優先度によっての色分けや、日報へのコピペがしやすい形式を考えて
spacemacs の markdown-mode をカスタマイズすることにしました。
Markdown の設定 M-x customize-face markdown- ↑タブを押す
markdown-header-face-1 を選択
設定画面が開くので Show All Attributes を押す。
foreground: 文字色
background: 背景色
それぞれ設定して、.spacemacs/init.el を開きます。
最後にこういった設定が追加されていると思うので、それらを user-config の中に移動します。
あとは、他のものもこの形式どおりに書いていけば編集できます。
(custom-set-faces ;; custom-set-faces was added by Custom. ;; If you edit it by hand, you could mess it up, so be careful. ;; Your init file should contain only one such instance. ;; If there is more than one, they won&amp;#39;t work right.</description>
    </item>
    
    <item>
      <title>Work_from_home</title>
      <link>https://hugo.suwa3.me/post/2020-12-08-work_from_home/</link>
      <pubDate>Mon, 07 Dec 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-12-08-work_from_home/</guid>
      <description>今回は在宅ワーク Advent Calendar 2020 - Adventarへ参加させて頂きました。
8日目の記事です。
環境の変化に戸惑い適応していった過程を、思い出しながら書きたいと思います。
はじめてのリモートワーク 今年の3月頃からリモートワーク中心の生活になり、現在、出社はほぼゼロです。
初めてリモートで働いた日のことは今でも良く覚えています。
ソファに座って、いつもオフィスでしているように作業を始めようとするも
目の前の洗濯物が気になり、数分後には洗濯物を片付けていました。
その後もなかなか集中できずに
情けなく悔しくて、メソメソと泣いたのを覚えています。
なぜ泣くほどに悔しかったのか？ もともと移動時間やカフェなどで勉強することや、勉強会へ参加して技術のキャッチアップをすることが苦ではないタイプでした。
気分が向かなくても、開始してしまえば集中できること 習慣にしてしまえば、歯磨き同様「やらないと気持ち悪い」という気持ちになること それらのことを経験上知っていたため わたしは自律することが得意である という自負があったからでした。
しかし、これは相当な勘違いだったみたいです。。
リモートワークが始まってすぐ、わたし自身、かなり自己管理が苦手な人間だということが分かりました。
様々な試行錯誤、他のリモートワーカーとの情報交換で得た 「自己管理や自律が苦手な人間がどうしても集中したいときに使えるワザ」 を、下記にまとめてみました。
自己管理が苦手なひとのためのリモートワーク Tips なかなか集中できないときの解決方法を書きます。
1. 擬似的に自分を追い込む
毎日が締切日です。
毎日ではなくても、架空の締切日を自分のなかでつくって、スケジュールなどに記載しておくと集中できます。
「ソファではなくデスクの方が集中できますよ」
という情報を色々なところで見ましたが、今までの傾向で
時間が極端になくて締め切り当日というような極限状態であれば、パジャマだろうがソファでの作業だろうが集中できる
ということが分かってきました。
ソファだから視界に映るものが気になって気が散るのではなく、そもそもの逼迫感が足りていないのではないか？ということです。
(ただ、腰を悪くするので基本はデスクでの作業が良いと思います。)
2. 場所を変える
わたしの中で、集中できる外の作業場所は
ベランダ 神社のベンチ
です。 どの場所も、本来であれば作業に適さない場所です。
ベランダ
ベランダでの作業は、単純に気分転換です。
自宅での作業に煮詰まっても、無料で簡単に環境を変えることができます。
神社のベンチ
上記で作業するときのポイントは
緊急対応しているフリで15分だけ作業する
です。
「た、たまたま来たタイミングで緊急事態が発生してしまったんだからね！！」
「神社だけどノートPCを開いて対応しなければいけない＞＜」
このような演技をして、猛スピードで作業します。
驚くほど集中できるので試してみてください。
これは、1の「擬似的に自分を追い込む」との合わせ技になります。
公園などでも問題ないですが、子どもたちが遊んでいる場ではPCに何があるか分からないため
(子どもたちに非はなく、大事なPCを公園で広げる自分の責任です。)
個人的には人気のない神社がお気に入りです。
帰る際には手を合わせて集中できますようにと、お願いします。
3. 気にしない
逆説的なようですが、集中できなくても落ち込み過ぎず
「あした頑張ろう」で、案外どうにかなるということを学びました。
周りもなんとなく「あ、今日は集中できなかったんだな」と察してくれたりします。
それが毎日だとツライですが、集中できる『当たり日』を増やしていこう！
くらいに、肩の力を抜いてお仕事をするほうがストレスもなく 「明日も頑張るぞ！」 という前向きな気持ちになれる気がします。明日も頑張ろう！！</description>
    </item>
    
    <item>
      <title>Health</title>
      <link>https://hugo.suwa3.me/post/2020-12-06-health/</link>
      <pubDate>Sun, 06 Dec 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-12-06-health/</guid>
      <description>先週の診察にて
症状から見て喘息らしいということで吸入器が処方され、息苦しさと夜間の咳は止まった。 血液検査の結果から心不全も疑われるけれど、一旦喘息の薬を追加で出して症状が改善するか様子を見ることになった。 それまで深夜の咳に悩まされていたけれど、新しく追加された薬を飲むようになって胃の不快感と吐き気で眠れなくなった。 喘息の薬(錠剤)の副作用で、悪心や食欲不振で数日のあいだ起き上がれなかった。
吐くのにトイレに行けないから枕元で吐くしかないし、何かを読んだり身体を起こしたりする事もできず退屈だった。
日中も夜もあまり眠れずに慢性的な睡眠不足になった。
先生曰く、小学生で副作用が出ることはあれど
大人で副作用が出るのは「かなり珍しい」とのこと。
40年前は、子どもでもこの薬を飲むしかなかったという話を聞いた。
その時代の喘息の子どもたちが本当に気の毒で辛くなった。
ほんの数日間だけでも、昭和初期に喘息だった子どもたちの辛さを疑似体験するという
ある意味、レアで貴重な経験だったかもしれない。
なにより怖かったのが、検査結果から疑われていた心不全の症状と
薬の副作用で現れる症状が似ていて
まだ診断が確定していない状態だったのもあって
「心不全だったら余命数年レベルで重症になってしまう・・薬の副作用であってほしい」
と、吐きながら不安になるのは結構メンタルにきました。
お薬の服用を止めたら、少しずつ回復してきたので良かったです。</description>
    </item>
    
    <item>
      <title>Physical_condition</title>
      <link>https://hugo.suwa3.me/post/2020-12-01-physical_condition/</link>
      <pubDate>Tue, 01 Dec 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-12-01-physical_condition/</guid>
      <description>目標の管理をGitHubでやりはじめて
なんとかプライベートの時間をやりくりして、勉強時間を捻出していたのが
急に体調不良が重なって、診断が確定せずに宙ぶらりんの状態なまま
お薬だけ増えていくので、今日は(おそらく)その副作用で午前中は具合が良くなかったの。
昨日、新しく追加された薬の副作用に
胃の不快感、吐き気、悪心、嘔吐、食欲不振、腹部膨満感などがあったので
副作用が続くようならお薬を変えてもらえるか相談する。
普段、歯医者以外で病院にかかることなんて滅多になかったのに
ここ数ヶ月で、お給料の3分の1近くを医療費が占めるようになって
最近はお仕事終わりにほぼ毎日通院をしている状況なの
まずは健康に生きることを意識していきたい。
通院が減って健康な状態に戻れば
また勉強時間を捻出できるようになると思うので
ボチボチと様子を見ながらやっていきたいです。</description>
    </item>
    
    <item>
      <title>Mindmap</title>
      <link>https://hugo.suwa3.me/post/2020-11-28-mindmap/</link>
      <pubDate>Sat, 28 Nov 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-11-28-mindmap/</guid>
      <description>目標マインドマップ 目標マインドマップを GitHub 上で git 管理したい 誰でもブラウザから最新のマインドマップを見られるようにしたい plantUML を png 形式で描画して、その画像を README.md に表示させることにしました。
環境づくり まずは Mac に環境をつくったよ
plantUML は java で動くとのことなので、バージョンを確認。
% java -version No Java runtime present, requesting install. ＿人人人人人人＿
＞　なかった　＜
￣Y^Y^Y^Y^Y^Y^￣
java、標準で入っているものだと思ったらなかった・・
Mac OS XでのOracle Javaのインストールと使用に関する情報およびシステム要件
Mac OS X 10.6以下: Mac OSには、AppleのJavaがプリインストールされています。 Mac OS X 10.7 (Lion)以上: Mac OS Xバージョン10.7以上には、Javaはプリインストールされていません。Oracleから最新のJavaを入手するには、Mac OS X 10.7.3以上が必要です。
ほーー
ということで、以下からインストールしました。
https://www.oracle.com/jp/java/technologies/javase-jdk15-downloads.html
% java -version java version &amp;#34;15.0.1&amp;#34; 2020-10-20 Java(TM) SE Runtime Environment (build 15.</description>
    </item>
    
    <item>
      <title>充電</title>
      <link>https://hugo.suwa3.me/post/2020-11-20-%E5%85%85%E9%9B%BB/</link>
      <pubDate>Fri, 20 Nov 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-11-20-%E5%85%85%E9%9B%BB/</guid>
      <description>移動時間や寝る前の時間は引き続き TOEIC です。
本格的に毎日勉強するようになって2週間経つけれど
オンライン英会話で「最近覚えたやつ！」と、分かる単語の量がグンと増えたなぁと実感できるようになった。
特に抽象的だったり、ビジネスでつかう単語が弱いと感じるので強化したい。
先週のステンドグラスです
今週のネイルです
我ながら惚れ惚れする出来
今回のベージュ系はCanDoで購入したけれど
100円でも塗り心地まったく問題なく、持ちも良いので重宝している。
今週は全体的に具合が良くなくて、金曜日の夜は頭痛と喉の痛みがあったので早めに寝たの。
今日も軽く風邪の症状があって、念の為ステンドグラスはお休みすることにしたよ。
自宅で充電します。</description>
    </item>
    
    <item>
      <title>英語</title>
      <link>https://hugo.suwa3.me/post/2020-11-15-%E8%8B%B1%E8%AA%9E/</link>
      <pubDate>Sun, 15 Nov 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-11-15-%E8%8B%B1%E8%AA%9E/</guid>
      <description>ステンドグラス ステンドグラス教室はだんだんコツを掴んできて
ハンダ付けを速く綺麗に接着できるようになってきました。
あと、良い場所にある大きめなロッカーが空いたので
工具やガラスなどを引っ越しました。
海外のステンドグラスコミュニティ SNS で作品の写真を投稿したら
思いのほか反応があって、作り方など聞かれたので英語で返信コメントしたの。
そのことをオンライン英会話の先生に話したら
「売ろう！」
と、海外でメジャーなハンドメイド販売サイトを教えて貰ったので
SNS に作品を上げつつ、反応が良かったものは販売もしていきたいなぁと思いました。
以前、ハンドメイド品の委託販売や受注制作をしていた時期があったけれど
ステンドグラスは値段が高いし、壊れやすいので
海外への販売はリスクが高そう。
小さく試しながら様々な販路を開拓してみたいです。
英語 オンライン英会話の先生に
「毎日15分〜20分は TOEIC の勉強をしましょうね」
と言われてから、技術関連よりも優先して英語学習の時間を確保していて
週末は、ステンドグラス以外の作業時間はほぼ英語でした。
やり始めると楽しい🙌
問題を解くのに今はすごく時間がかかって
文法問題も、答えの根拠を明らかにして回答するし(勘は禁止)
単語も分からなければ調べて、関連語や語源を結びつけて
訓練を重ねて、実践レベルまで慣らしていくのだなぁと思った。
母が英語教師で、子どもの頃から英語にふれる機会があったので
なんとなくいつも勘で聞き取ったり会話したりしていたのだけれど
会話の瞬発力をもっと高めるため、シナプスを太くしていきたいです。
オンライン英会話をやりはじめて
「やんわりとした伝え方」
を意識するようになったの。
短い単語で、素早く、単調な発音では冷たい印象を与えるので
ちょっと回りくどく長い言い回しで、イントネーションに表情をつけるイメージで、語りかけるような(ここが難しい)
そういったことを意識し始めました。</description>
    </item>
    
    <item>
      <title>mindmap</title>
      <link>https://hugo.suwa3.me/post/2020-11-11-mindmap/</link>
      <pubDate>Tue, 10 Nov 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-11-11-mindmap/</guid>
      <description>最近スキマ時間でちょこちょこ整備している目標マインドマップ！
https://github.com/Ishizuka427/MindMap
目標を git で管理したいなぁというのと
今まで mindomo というマインドマップ作成ツールを使っていたけれど
URL などで常に最新の状態を公開しておきたかったので
(そもそもスクショして公開するのグレー寄りのアウト臭した！)
PlantUML で調べたら
MindMap Diagram という形でβ版の記法があるらしく
Org-mode とも互換性ありとのことなので採用することにしました。
https://plantuml.com/ja/mindmap-diagram
そして、PlantUML で GitHub に記述したものを
すぐに描画した状態で見たいなぁと思いツールを探したら
Chrome拡張機能にありました🙌
PlantUML Viewer
この拡張機能を入れれば
PlantUML で作成したものを GitHub の Raw ボタンから画像で表示してくれるの。
実際に見てみるとこんな感じ
かわいい
ただ、これは拡張機能を入れていないと見られないので
あくまで便利ツールとしてつかって
画像表示は Org-mode をつかって image 生成したら都度 push していく感じかなぁ。
GitHub Actions で画像を最新に保つよう自動化しても良いけれど
都度 push 方式に落ち着きそうです。</description>
    </item>
    
    <item>
      <title>ステンドグラスなど</title>
      <link>https://hugo.suwa3.me/post/2020-11-07-%E3%82%B9%E3%83%86%E3%83%B3%E3%83%89%E3%82%B0%E3%83%A9%E3%82%B9%E3%81%AA%E3%81%A9/</link>
      <pubDate>Sat, 07 Nov 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-11-07-%E3%82%B9%E3%83%86%E3%83%B3%E3%83%89%E3%82%B0%E3%83%A9%E3%82%B9%E3%81%AA%E3%81%A9/</guid>
      <description>ステンドグラス ステンドグラスつくってきました🙌
ガラスを切ったりハンダ付けしたりしました。
辞めてしまう人はひっそりとやめていく中
先生から
「ずいぶんと後輩が増えたねえ」
と言われた。
前回は指を切ったり、ハンダで火傷したりしたのだけれど
今回は無傷だったので GJ でした！
HP_スマホ用ページ 背景を変えたり、動く画像の素材を変えたりしました。
あとは Qiita や Twiiter のアイコンを素材として使いたかったので
それぞれの Brand Guideline をチェックしました。
(Connpass のみ使用不可だったので、自作アイコンです)
GitHub profile GitHub の Profile を編集して、トップページに自分の情報が表示されるようにしました。
リポジトリ名が username のリポジトリを作成して
https://github.com/anuraghazra/github-readme-stats
上記の README 通りに README.md へ一文追加するだけで映える GitHub🙌
目標 目標ひとつひとつクリアしていきたい。
個人的興味の目標がやっぱりクリアするの速いけれど
お仕事に関わるかも？な内容も、マイペースに進められたらいいなぁ</description>
    </item>
    
    <item>
      <title>imageのパス一括編集など</title>
      <link>https://hugo.suwa3.me/post/2020-11-06-image%E3%81%AE%E3%83%91%E3%82%B9%E4%B8%80%E6%8B%AC%E7%B7%A8%E9%9B%86%E3%81%AA%E3%81%A9/</link>
      <pubDate>Fri, 06 Nov 2020 10:00:44 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-11-06-image%E3%81%AE%E3%83%91%E3%82%B9%E4%B8%80%E6%8B%AC%E7%B7%A8%E9%9B%86%E3%81%AA%E3%81%A9/</guid>
      <description>hugo の image パスが相対パスになっていて、表示させるために
絶対パスに一括変換したので備忘録です。
posts % find . -type f -name &amp;#39;*.md&amp;#39; -print | xargs sed -i -e &amp;#39;s/](images/](\/images/g&amp;#39; diff で差分を確認。
相対パスが絶対パスになっているか。
% git diff diff --git &amp;#34;a/content/posts/2019-03-20-\343\201\212\343\203\274\343\202\214.md&amp;#34; &amp;#34;b/content/posts/2019-03-20-\343\201\212\343\203\274\343\202\214.md&amp;#34; index ebfbbc5..3c8b655 100644 --- &amp;#34;a/content/posts/2019-03-20-\343\201\212\343\203\274\343\202\214.md&amp;#34; +++ &amp;#34;b/content/posts/2019-03-20-\343\201\212\343\203\274\343\202\214.md&amp;#34; @@ -14,7 +14,7 @@ tags: お昼は俺塩だよ -![](images/2019-03-20-12-16-242496347815638826604.jpg) +![](/images/2019-03-20-12-16-242496347815638826604.jpg) .md-e というバックアップファイル？が生成されていた。
posts % ls 2019-03-19-最初のブログ投稿.md 2019-03-19-最初のブログ投稿.md-e 2019-03-20-おーれ.md 2019-03-20-おーれ.md-e 2019-03-21-ねこちゃん.md 2019-03-21-ねこちゃん.md-e いったん .gitignore に追加しておく。
% vi ../../.gitignore *.md-e サーバーを起動して、ローカルで表示チェック。
% hugo server | EN -------------------|------ Pages | 693 Paginator pages | 311 Non-page files | 848 Static files | 393 Processed images | 0 Aliases | 115 Sitemaps | 1 Cleaned | 0 .</description>
    </item>
    
    <item>
      <title>週末</title>
      <link>https://hugo.suwa3.me/post/2020-11-01-%E9%80%B1%E6%9C%AB/</link>
      <pubDate>Sun, 01 Nov 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-11-01-%E9%80%B1%E6%9C%AB/</guid>
      <description>Evernote で10月31日ぶんの blog を書きました。
2020.10.31
ステンドグラス教室がお休みだったので
半日くらいまとまった時間をとることができて
いっぱい作業できたので嬉しかった。
11月1日も少しだけ作業できたよ。
2020.11.1
この日は WordPress をホスティングしていた EC2 インスタンスを停止させました。
ちょうど一年前、AWS 勉強会を主催した時期に起動させたインスタンスで
ずっと自分の blog をホスティングしていたの。
思い出のあるサーバーを停止させるときって感慨深いねえ。
月々30ドル弱がサーバー代でかかっていて
今月からは Route53 の0.50ドルとEBSボリュームの料金のみになるの
サーバー上で稼働させている WordPress サイトのデータを損なわずに
記事の Markdown 化をして静的サイトホスティングへ移行することで
年間360ドルのサーバー代を節約することができた。
達成感しかない・・・！
プライベートでの成果がわかりやすく数字で出せると嬉しいね。
新しい職場にいて
もう入社して4ヶ月になるのに、(4ヶ月目にもなって &amp;ldquo;新しい職場&amp;rdquo; でもないのだけれども)
孤独感だったり、掴みどころの無さだったり、気後れというか
わたしはここにいても良いのだろうか、採用間違えたなぁと思われているのでは？
という気持ちだったの。
自分のいる会社について
なかなか雰囲気が把握できないなぁと感じていた。
時間があれば自社について調べて
外から見て、他とどう違うのか
実際に働いている人たちともっと交流して
どういった考え方で働いているのか、ふんわりでも良いから掴みたい。
と、行動していたの。
そしたら、ある記事で
「仕事デキない人を採用しちゃったな」と思われる恐怖、ひとりぼっちの中途社員が自信を取り戻すまで | サイボウズ式
入社して孤独感に悩む人がいて、意外と同じような人が沢山いることを知って安心した。
リモートだからかなぁ？と思っていたけれども
&amp;ldquo;チームワーク&amp;quot;へのハードルを高く感じて、自分から壁をつくってしまうのかなぁと思う。
具体的な外的要因のない孤独感というのは自身の問題だし
職場の仲間達は親切で、透明性が高く働きやすいと感じる。
ひとつひとつ成長して
少しでも貢献、還元できるようになりたい。
最近は暇つぶしに Quora を見ることがあって
色々な立場の人の様々な意見を見ることができて興味深いなと感じる反面
内容のエグさだったり、建前の内側を見せられると
ウッとくる部分があって
反動で星の王子さまを読むようになったので
SNS 向いていないなぁと思う。
社内政治が苦手だし
他人の悪口は聞くだけでもつらい。</description>
    </item>
    
    <item>
      <title>ハッカソンなど</title>
      <link>https://hugo.suwa3.me/post/2020-10-26-%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3%E3%81%AA%E3%81%A9/</link>
      <pubDate>Mon, 26 Oct 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-10-26-%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3%E3%81%AA%E3%81%A9/</guid>
      <description>ハッカソン 先週末は社内ハッカソンに参加しました
楽しかったぁ
社内のチーム外の人との関わり増やしたいなぁと思って
それとなく漏らしていたら、中途ザツダンに誘われたの。
入社したばかりの人たちと、リモートでザツダンをする会に顔を出して
(まだ入社して三ヶ月なのに先輩ヅラしちゃうみたいだな・・)
などと思いつつ、せっかく参加したなら楽しく話したいなー
と思って色々質問した。
後日、中途ザツダンの参加者の一人から
「ハッカソン参加しませんか？」
の、お誘いメッセージがきて
反射的に「参加します！」って返していたの。
ハッカソンへ参加してみたいなとは思っていて
ただ、参加したところで足手まといになるだけだろうなぁ
といった気持ちだったのだけれど
誘われちゃったんじゃね、しょうがないよね！笑
みたいなノリでした。
参加表明して数日後には、やっぱり足手まといになるとしか思えなくて
なんで参加しちゃったんだろうと
マリッジブルーならぬハッカソンブルーになっていたけれども
結果とても楽しかったし、色々と勉強になって良かったなぁと思いました。
わたしは主に解析やデータ整形などを担当したの。
mecab での形態素解析や、分析は初めてで学びが多かった。
解析後の、ゴミ掃除やデータの整理をしながら
辞書づくり大事だなぁと感じました。
Elasticsearch やりたくて、ただ「その技術を使いたいから」
では理由付けやストーリーが弱いと思い、どういった経緯なら自然かと考えたけれど難しかったの。
以前ホスティングしていた OSS に Elasticsearch の機構が実装されていて
バージョンに合わせてインストールすることで自動でマッピングしてくれた。
他では Docker で Elasticsearch を立ち上げて、手動で定義の設定を行うのだなぁというところまでは進んだので
プラグインで形態素解析があるのを見つけたときは、ぜひ簡易的なものでも良いから
実装フェーズまで進めたいと思ったの。
いったんプライベートで実装まで進められたら良いなぁ。
今回ハッカソンで書いたコードも
今後、形態素解析をつかう機会に備えて
汎用的に使えるよう書き換えたら、GitHub にツールとして置いておきたい
shell script とごっちゃになっている部分をいったん全部 Python で書き換え＆リファクタリングする。
ステンドグラス ずっと忙しくて参加できておらず
振替で2コマ連続だったので
土曜日は、朝から夕方まで工房でステンドグラスづくりに没頭しました。
PCから離れて、ひたすらガラス切りに集中する時間も乙だなと思ったよ。
教室の生徒さんが、余った端材で皆に鏡を作ってくれたの。
かわいい。
どれも可愛くて悩んだけれど、茶色にしたよ。
持ち歩いたら壊してしまいそうだったから
机の上にあっても馴染むような色にした。
ハッカソンにステンドグラスにと
てんこ盛りの週末だったけれども
それと同時並行で、隙間時間をつかいつつ
鬼滅の刃を7巻まで読み進めたのすごくない？
そして日曜日は寝起き早々に一句詠んだよ
日曜日泥のように眠って今
自由律俳句だよ。</description>
    </item>
    
    <item>
      <title>雑記</title>
      <link>https://hugo.suwa3.me/post/2020-10-20-%E9%9B%91%E8%A8%98/</link>
      <pubDate>Tue, 20 Oct 2020 10:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-10-20-%E9%9B%91%E8%A8%98/</guid>
      <description>https://techblog.zozo.com/entry/zozomat-cqrs
ザッと目を通していた
新しいサービスをつくるとき、データをどう持たせるかとか
どういった構造にしたら良いかとか、正解がわからないなと思った。
そのとき正解でも サービスの変化や、その他の様々な要因(新たなセキュリティリスクとか)とともに
最適解は変わっていくのだなぁと思った。
新しいことに挑戦していく分野は楽しいけれども
それを引っ張っていくには、広い知識が要るのかなぁ。
転職して思ったのは
システムの保守性だったり、社内の技術やツールへの精通だったり
そういった部分も大事だなと感じて
そこで目指す像って、狭く深い知識をもつエキスパートって感じする。
最近覚えたことって
独自コマンドとか、サーバーの独自仕様とかが多くて
「結局これって内部ではどう動いているの？」
って調べて、腹落ちさせるのが大事だなと思った。</description>
    </item>
    
    <item>
      <title>マルチタスク</title>
      <link>https://hugo.suwa3.me/post/2020-10-12-%E3%83%9E%E3%83%AB%E3%83%81%E3%82%BF%E3%82%B9%E3%82%AF/</link>
      <pubDate>Mon, 12 Oct 2020 22:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-10-12-%E3%83%9E%E3%83%AB%E3%83%81%E3%82%BF%E3%82%B9%E3%82%AF/</guid>
      <description>ちょうど個人で管理している技術 Note の todo も山盛りになってきて
こなしきれない気持ちになってきていた。
以前プライベートで4つぐらいイベント等を管理していた時期があったのだけれど
紙を縦割りして優先順位つけて「いつまでに終わらせる」と目標設定したの。
疑似カンバンタスク管理って感じ
可視化するにあたっての方向性としては、カンバンツールが目で見てわかりやすく
整理するのに有用なのかもしれないなぁと思う。
しかし個人のタスク管理なんて、自分で見てわかりやすいのが優先だし
スプレッドシートなり紙でもメモでも、管理しやすい方法を考えるのが良いのかな。
あー、でもGitHubProjectの機能を触ってみたいのでやるぞい (好奇心が最優先！)
4つぐらいイベント等を管理していたときの内容は
ミニ四駆大会の主催 県立美術館へ油絵グループ展に作品を出す ハンドメイド品の委託販売先とのやりとり 中型バイクの免許取得 アホみたいに忙しかったので整理して進める必要があったの。
興味あると際限なく手を出しちゃうんだけど、時間は有限だと学んだよ。
ミニ四駆大会はいろいろな人が協力して引っ張ってくれて二期も開催されたし
県立美術館にも、先生のアドバイスもあって初めて50号の大きさで完成させた絵を間に合わせることができた。
ハンドメイドは3店舗ほどカフェや雑貨屋さんに営業して置かせてもらえることが出来た。
中免の資格も無事取れました (めっちゃ転んで怪我したが)
感覚的に、頭で管理できるタスクって4つまでだなーと感じていて
とりあえず「何をやらないか」を決めて、削っていきたい。
ボリューム的に無理だと感じたら周りに相談する。
同時並行って、本当に些細なやるべきことをやり忘れるので
買うものとか伝えることとか、小さな todo も一つの場所にポコポコ投げておくの。
あと「今日はこれ」と場所を変えて集中する。
うまく頭が切り替えられないときは、何かしら環境を変えて作業するとサクッと移行できる気がする。</description>
    </item>
    
    <item>
      <title>部活動と目標</title>
      <link>https://hugo.suwa3.me/post/2020-10-05-%E9%83%A8%E6%B4%BB%E5%8B%95%E3%81%A8%E7%9B%AE%E6%A8%99/</link>
      <pubDate>Mon, 05 Oct 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-10-05-%E9%83%A8%E6%B4%BB%E5%8B%95%E3%81%A8%E7%9B%AE%E6%A8%99/</guid>
      <description>目標 ここ数ヶ月で新しいことをどんどん始めていて
色々と発散しそうだなーと思ったので
特にプライベートにおける技術面にしぼって目標を整理しようと思いました！
短期目標_2020/10
💖平日夕方＆土日に集中する
💙英語学習を習慣化する
💙DjangoGirls の活動がんばる
中期目標_2020/秋
🍁英語学習を通して技術の情報量・情報の質を高める
🍁Python への抵抗感をなくす
長期目標_2020/~数年
しばらくは技術ファーストで一点突破
🌏1. Kubernetes
💫2. IoT 分野 (サブ)
👩女性のための開発コミュニティ活動を継続
何を優先するのか、逆に何をやらないのか
整理しないと何でもかんでもやろうとしてしまう性格なので気をつけたい😩
ついでに具体的な積み作業タスクも貼る。
これ Evernote で毎月管理しているのだけれども
GitHub で issue などにして git 管理してしまったほうがログも残るし良い気がする。
Project 機能をつかってカンバン形式で視覚化するのもありかなぁ。
直感的に管理しやすそう。色々と試して模索していきたい。
動画編集部 職場の動画編集部に入部しました。
チーム外の人とも交流をしたい 表現の幅を広げたい といった理由で参加したため、まだ具体的に作りたいものも決まっていないのですが・・。
自分のもっている技術について、今はこうやってblogに備忘録として残しているので
そういったものを動画で発信できたらなぁとぼんやり考えています。
最近めちゃ真面目では？
一日ダラダラDayを設けよう。</description>
    </item>
    
    <item>
      <title>近況</title>
      <link>https://hugo.suwa3.me/post/2020-10-04-%E8%BF%91%E6%B3%81-3/</link>
      <pubDate>Sun, 04 Oct 2020 13:00:44 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-10-04-%E8%BF%91%E6%B3%81-3/</guid>
      <description>久しぶりです。
近況をトピックごとに書きます。
歯医者 歯医者さんの麻酔注射がとても苦手で
手汗をかくし震えが止まらず意識が遠のくので
このまま気絶できればラクなのに・・とか思うのですが
歯医者で麻酔を伴う治療をした翌日には
顔をナイフでざっくり切られて
歯を粉々にされる夢をみるくらいストレスなの。
ここのところ右の歯を治療したら左の歯が欠けて
左の歯を治療したら右の歯が欠けて・・
というのを繰り返していて
歯の治療のストレスで気がおかしくなりそうです(;_;)
歯並びも良くないし、歯も柔らかいかららしい。
甘いもの断ちして、骨を丈夫にするため小魚食べようかなぁ。
オンライン英会話 毎週木曜日にオンライン英会話を始めて、一ヶ月ちょっと経つけれども
先週まであまり効果が実感できなかったのに
今回は「以前より喋れるようになったかも」と、思えたよ。
予習復習が大事かもしれない。毎日、少しずつでも英語の学習を進めたい。
ステンドグラス ステンドグラス工房では、ガラス切りの工程に入りました。
油性ペンで切る部分に印を付けて
ガラスを切る用のカッターで、体重をかけながらキリキリと切っていくんだよ。
このガラスは綺麗でお気に入りなので、切っていて楽しい。
HUGO 土曜日は WordPress の静的サイト (Markdown) 化を進めたよ。
静的サイトジェネレーターは Hugo を採用することにしました。
https://gohugo.io/getting-started/quick-start/
Quick Start を参考にインストールから記事の生成まで行った。
そして先日、wordpress-export-to-markdown ツールでつくった.mdファイルの中から
適当に記事を選んで /quickstart/content 配下に置いたよ。
ローカルでの記事表示に成功しました👏
次回はホスティングサービスの選定と、移行までやれたらいいなあ。
SHISHA 前職の先輩とシーシャに行こうとお店に行ったら、不定休でお休みだったの。
なので、近所のカフェでコーヒーを飲みながら近況について話しました。
その後は線路沿いにある屋台のような居酒屋さんで飲んだよ。
明るい時間から外で飲むの、なんだか良いねえ。
学生時代の話や、使ってみたい言語の話などをしました。
DjangoGirls DjangoGirls というPython のフレームワークを題材にハンズオンなどをする
女性コミュニティのスタッフをしていて、その打ち合わせ zoom に参加しました。
今年はなかなか活動が難しかったけれど、メンバー皆で模索しながら今後の活動について考えてブラッシュアップしていけたらなぁと思ったよ。</description>
    </item>
    
    <item>
      <title>SHISHA</title>
      <link>https://hugo.suwa3.me/post/2020-09-29-3120/</link>
      <pubDate>Tue, 29 Sep 2020 13:00:46 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-29-3120/</guid>
      <description>先日は女友達と遊んできたよ。
シーシャ屋さんに行ってきました。
一年ぶりくらいに行ったの。
二人でポケーっとしながら
おもむろに始まる会話にうんうんって頷きつつ
お互いに近況を報告したり、結論のないような話を延々したり
こういうリラックスした状態でのとりとめのない会話、癒やしだなぁと思ったよ。
あと、ステンドグラス教室でつくった鏡を渡した。
喜んでくれたので良かった♡
自分のためより、誰か身近な人のためにつくるのは
何をつくるか考えるだけでワクワクするし、ガラス選びも楽しいなぁと思ったよ。
最近のネイルです。
ちょっと派手め😊
ぜんぶ赤ではなくて、ベージュを挟んでも良かったかも。
深い赤は秋らしくて良い🍁</description>
    </item>
    
    <item>
      <title>台湾の</title>
      <link>https://hugo.suwa3.me/post/2020-09-25-%E5%8F%B0%E6%B9%BE%E3%81%AE/</link>
      <pubDate>Fri, 25 Sep 2020 01:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-25-%E5%8F%B0%E6%B9%BE%E3%81%AE/</guid>
      <description>今日は台湾のデジタル大臣オードリー・タンさんが登壇した
オンラインイベントを視聴しました。
わたしは彼女のファンだなぁと、強く実感した発表でした。
今年の夏はDjangoGirlsの方々と
「Pycon台湾へ行きたいね」
と話していて
結局、コロナで台湾のカンファレンスに行くことは出来なかったのだけれども
そのときにg0vを知って
少しずつ、台湾やオードリー・タンさんに関心を持つようになったの。
今回、オンラインイベントで
日本にいながら台湾のデジタル大臣の登壇イベントを観ることができるのって
素晴らしいことだなぁと感じたよ。
発表の中で印象的だったものについて書いていきます。
Society 5.0 https://www8.cao.go.jp/cstp/society5_0/
これは日本についてなのだけれども
こういった目標があることを初めて知った。
政府主導のハッカソンとか無いのかな？と思ったら
台湾には総統杯ハッカソンというものがあって流石だなと思いました。
リバースメンターシップ 台湾の大臣たちは、35歳以下の若者がメンターとしてつくらしい。
若い人に求められるのは、先入観のないアイディアで方向性を示す力で
上の世代は人脈やパワーを発揮してもらうとのこと。なるほどなぁ。
若い世代は、上から言われたことに従うだけではなく
積極的に提案していくことが大切だとのことだった。
先入観のない時期に気づいた違和感について
「そういうものだから」ではなく、何故なのか/改善できないかといった姿勢で
自分にできることを考えていきたいなと思いました。
デザインシンキング ダブルダイヤモンド構造の、1つ目のダイヤモンドがデザインシンキングで
2つ目のダイヤモンドはコンピューテーショナルシンキングとのこと。
まず最初に課題を認識して
一見関係の無さそうな課題のなかから、共通項を見つけて解決策を設計する。
その思考方法が重要とのことだった。
彼女は調和を重視する方なのだなぁと感じたよ。
技術革新について
技術に従わせるのではなく、技術を人々が使いやすいものにすること
と話していて、ただ様々なものを変化させていくのではなく
そこにあるものをどう発見するのか、調和を見つけるという視点なのだなぁと感じた。
わたしは自分で考えることが好きなので
読書や会話を通して、触発されて考えることや参考にすることは多いのだけれども
あまり人に強く憧れたり、影響を受けたりすることが少ないタイプだと自覚していて
珍しく、追っかけみたいなことをしているなぁと思いました。笑
色々なことを考えるキッカケになったし
なんだか生活に彩りがある感じで良いなぁと思ったよ。</description>
    </item>
    
    <item>
      <title>TODO作成 / 鏡完成</title>
      <link>https://hugo.suwa3.me/post/2020-09-19-todo%E4%BD%9C%E6%88%90-%E9%8F%A1%E5%AE%8C%E6%88%90/</link>
      <pubDate>Sat, 19 Sep 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-19-todo%E4%BD%9C%E6%88%90-%E9%8F%A1%E5%AE%8C%E6%88%90/</guid>
      <description>寝落ちが続いていました。
木曜日のオンライン英会話は体調不良で skip させてもらったよ。
以前は転職直後でも平日に勉強していたのに
最近は週末に数時間程度なので、もう少し時間を割きたい。
todo を整理して、サクッと取り掛かることができるタスクから消費していく。
GitHub を見たらめっきり commit が減っていたので
もう少し頑張ろうと思いました。
wordpress export 手順 wordpress-export-to-markdown (leftieFriele版) をフォークする。
本家のものはマルチバイト文字のバグが存在する。leftieFriele版はその修正(https://github.com/lonekorean/wordpress-export-to-markdown/pull/41)が取り込まれている。 カレントディレクトリをwordpress-export-to-markdownに移動する。
$ cd wordpress-export-to-markdown wordpressからexport.xmlをダウンロードする。
ダウンロードしたファイル名はexport.xmlにする。 依存ライブラリをインストールする。
$ npm install wordpress-export-to-markdownを実行する。
$ node index.js --prefix-date=true --input export.xml | tee output.log output.logを加工してエラーリストを作成する。
$ grep FAILED output.log | awk -e &#39;{print $2}&#39; &amp;gt; errorlist.txt 作業じわじわと進みました。
ステンドグラスは鏡が完成しました。
良い感じ！
次の図案もできたよ。
次はユリの花をあしらった時計をつくるの。
先生から曲線OKが出たので、曲線をふんだんに盛り込んでみた。
(初心者にとって曲線は難易度が高いらしい)</description>
    </item>
    
    <item>
      <title>フットケア</title>
      <link>https://hugo.suwa3.me/post/2020-09-15-%E3%83%95%E3%83%83%E3%83%88%E3%82%B1%E3%82%A2/</link>
      <pubDate>Tue, 15 Sep 2020 13:00:38 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-15-%E3%83%95%E3%83%83%E3%83%88%E3%82%B1%E3%82%A2/</guid>
      <description>最近は忙しかったのでブログを怠りがちでしたが
少しずつ、何があって何を考えたのか
体調についても書きたいと思いました。
お昼休みにネイルしたよ。
とても可愛くできた。
もはやプロでは？
初めてフットケアサロンに行ったよ。
主な目的 (施術内容) は、魚の目治療と角質除去、ピーリングなどです。
魚の目の治療のつもりだったけれども
ウイルス性のイボだということが分かりました。皮膚科通いだなぁ。
あと、足の裏にホクロができているから
ついでに診てもらうと良いかもとのことだった。
サロン内はとても雰囲気が良くて住みたいくらいだったよ。
スタッフさんも落ち着いていて癒やされた。
落ち着いてリラックスした状態での会話は、とても癒やされるのだなぁと思った。
先週から親知らず周辺が痛くて
顎から喉にかけての炎症 (智歯周囲炎) で、痛み止めと化膿止めを飲んでいたの。
顎が殴られる夢で早朝に目覚める日が続いて
痛みで口が開かなくてウィダーinゼリーで生き延びていたけれど
今朝あたりから、痛み止め無しでも平気なくらい回復したよ。
良かったねぇ🙌</description>
    </item>
    
    <item>
      <title>wordpress export to markdown</title>
      <link>https://hugo.suwa3.me/post/2020-09-12-wordpress-export-to-markdown/</link>
      <pubDate>Sat, 12 Sep 2020 13:00:50 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-12-wordpress-export-to-markdown/</guid>
      <description>WordPress の Markdown 化に、以下のツールを使うことにしました。
Node 製の変換ツールです。
wordpress-export-to-markdown
https://github.com/lonekorean/wordpress-export-to-markdown
README.md の通りに進めていきます。
準備 Nodeのバージョン管理ツールをbrewで入れる
$ brew install n バージョンを指定してNodeをインストール
$ sudo n 12.18.2 wordpress-export-to-markdown をインストール
$ npm install wordpress-export-to-markdown 実行 $ npx wordpress-export-to-markdown --prefix-date=true --input evenarabbitcanunderstand.WordPress.2020-09-12.xml Starting wizard... ? Path to output folder? (output) ? Path to output folder? output ? Create year folders? (y/N) ? Create year folders? No ? Create month folders? (y/N) ? Create month folders? No ? Create a folder for each post?</description>
    </item>
    
    <item>
      <title>たぬき</title>
      <link>https://hugo.suwa3.me/post/2020-09-10-%E3%81%9F%E3%81%AC%E3%81%8D/</link>
      <pubDate>Thu, 10 Sep 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-10-%E3%81%9F%E3%81%AC%E3%81%8D/</guid>
      <description>職場の目の前に滋賀があった。
信楽焼のたぬきも居た。
可愛かったです。
ただ、高い位置の棚に置かれていて
たぬきシリーズで一番人気の「おねがい狸」は
あの上目使いが武器なのに、目線より上の棚に置かれてしまったら
本来の魅力が伝わらないのでは？と思いました。
(あと落ちたら危なさそう)
オンライン英会話でタヌキについて語りました。
信楽焼たぬきをペットとして迎えると話したら、相手は置物の画像を見て
｢なるほどね。レストランの前によく居るわね｣
と、笑っていたのだけれども
リアル狸の画像を検索で見つけたらしく
｢待ってタヌキって本当に居るの？！｣
と驚いていました。
海外には狸いないっぽい。
かわいい動物を布教できたので良かった🐾
迎えた信楽焼たぬきがこちら
かわいい
サイズを測って、良い感じの座布団を用意してあげたいと思います。</description>
    </item>
    
    <item>
      <title>WordPress移行_途中経過</title>
      <link>https://hugo.suwa3.me/post/2020-09-06-wordpress%E7%A7%BB%E8%A1%8C_%E9%80%94%E4%B8%AD%E7%B5%8C%E9%81%8E/</link>
      <pubDate>Sun, 06 Sep 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-06-wordpress%E7%A7%BB%E8%A1%8C_%E9%80%94%E4%B8%AD%E7%B5%8C%E9%81%8E/</guid>
      <description>ホスティングしているWordPressサイトを
静的サイトへ移行します。
まず、やるべき内容を書き出しました。
作業に入る前にWordPressのバージョンなどを上げたよ。
backup mysqldump --single-transaction -u ***** -p ************* &amp;gt; /tmp/wp-2020-09-05.dump ※ セキュリティホールになる可能性もあるので
バックアップファイルは/tmp配下には置かず/home配下などのほうが良いかも。
侵入された際に、どのユーザーでも見れてしまう場所にファイルは置かない。
ローカルにWordPress on Docker docker-compose で立ち上げる。
image の wordpress バージョンや php のバージョンはなるべく揃える。
version: &amp;#34;3.8&amp;#34; services: wordpress: image: wordpress:5.*.*-php7.*-apache restart: always ports: - &amp;#34;8080:80&amp;#34; environment: WORDPRESS_DB_HOST: db WORDPRESS_DB_USER: exampleuser WORDPRESS_DB_PASSWORD: examplepass WORDPRESS_DB_NAME: exampledb volumes: - wordpress:/var/www/html db: image: mysql:5.7 restart: always ports: - &amp;#34;3306:3306&amp;#34; environment: MYSQL_DATABASE: exampledb MYSQL_USER: exampleuser MYSQL_PASSWORD: examplepass MYSQL_RANDOM_ROOT_PASSWORD: &amp;#39;1&amp;#39; volumes: - db:/var/lib/mysql volumes: wordpress: {} db: {} </description>
    </item>
    
    <item>
      <title>狸とスマート・ステンドグラス・ランプ</title>
      <link>https://hugo.suwa3.me/post/2020-09-05-3091/</link>
      <pubDate>Sat, 05 Sep 2020 07:00:41 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-09-05-3091/</guid>
      <description>初オンライン英会話しました。zoomを繋いでお話したよ。
最初だったので自己紹介からでした。
少し離れたところに住むフランス出身の女性で
ときどき猫の声が聞こえた。
もっと自然に話せるようになりたいので
英会話で使えるフレーズ動画なんかをyoutubeで観てみようと思いました。
TOEICの勉強もレッスン内で扱うので予習復習やります。
あと、ふだん字幕で観ているアニマルプラネットを聴き取れるように
視聴中にリスニングを意識したいなぁと思ったよ。
信楽焼の狸がとても可愛いことに気づいてしまった。
本当に可愛いので少し見てほしい。
https://www.amazon.co.jp/5%E5%8F%B7%E3%81%8A%E9%A1%98%E3%81%84%E7%8B%B8-%E3%81%97%E3%81%8C%E3%82%89%E3%81%8D%E3%83%8F%E3%83%B3%E3%82%AB%E3%83%81%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8-%E3%81%97%E3%81%8C%E3%82%89%E3%81%8D%E3%82%84%E3%81%8D-ta-0186-%E5%B9%85160%C3%97%E5%A5%A5%E8%A1%8C120%C3%97%E9%AB%98%E3%81%95175mm/dp/B01N5C6CWY
身につけているもの一つ一つが縁起物で、きちんと意味があるの。
たぬき(他抜き)ということで、他を出し抜いて成功する商売繁盛の意味もあるとのこと。
こんなに可愛らしくて愛くるしい見た目で実は貪欲なの？と思ったけれども、腹黒かろうがこの可愛さなら許せると思いました。表情がとっても可愛いね。
滋賀に旅行へいくことがあったら信楽焼の狸を見に行きたいなぁと思いました。
我慢できなくなったら通販で買うかもしれません。
ステンドグラス教室へ行ってきました。
ガラスを選ぶのに時間がかかって、今日はカットで終わってしまった。
模様に波のある偏光ガラスで、とても綺麗なものを見つけられたので満足です。
カットしながら(綺麗だな〜)と定期的に癒やされるのは大きい。
真ん中の鏡をカットして、周囲を磨いてテープを留めたら
はんだで貼り合わせていくよ。来週も楽しみ。
ステンドグラスは光や電球と相性が良くて、ランプを作ることも多いのだけれど
光や電球といえばラズパイの十八番なので
RaspberryPiとステンドグラスのランプで
スマート・ステンドグラス・ランプとか面白そうだなぁと思いました。</description>
    </item>
    
    <item>
      <title>ステンドグラス</title>
      <link>https://hugo.suwa3.me/post/2020-08-29-%E3%82%B9%E3%83%86%E3%83%B3%E3%83%89%E3%82%B0%E3%83%A9%E3%82%B9/</link>
      <pubDate>Sat, 29 Aug 2020 13:00:45 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-08-29-%E3%82%B9%E3%83%86%E3%83%B3%E3%83%89%E3%82%B0%E3%83%A9%E3%82%B9/</guid>
      <description>ステンドグラス教室へ行ってきたよ。
完成品です。
今回は練習用の課題として、ミニランプを作成しました。
まずガラスを切るのだけれど
ピザを切るような丸いノコギリの、直径を小さくしたようなものを使うの。
力を込めてキリキリと音が鳴るように切るのが
結構難しくて指にタコができてしまった。
タコ🐙👇
そして切れ目を入れたガラスを、工具や手でパリンっと割って
削る機械で周囲を整えたら、テープを貼っていくの。
左手はガラスで切った👇
名誉の負傷だよ・・
ガラスパーツの接着はハンダゴテを使う。
ハンダゴテで火傷したら数え役満だったけれども
怪我しませんでした！！えらい
接着面にワックスを塗って、丸く盛り上がるように乗せていく感じ。
ワックスを塗り忘れると綺麗にできない。
練習課題が、無事に初回で完成したので
来週から自由制作だよ！
まずはシンプルで直線メインのデザインが良いらしい。
方眼用紙を買ってきてデザイン考えるの楽しみ。</description>
    </item>
    
    <item>
      <title>standalone or webroot</title>
      <link>https://hugo.suwa3.me/post/2020-08-28-standalone-or-webroot/</link>
      <pubDate>Fri, 28 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-08-28-standalone-or-webroot/</guid>
      <description>証明書 また証明書が切れて、つらい思いをしたので備忘録！
来週あたり手動で certbot renew を実行して
大丈夫そうだったら cron 化しちゃう。
$ sudo su - # cd cert-venv/ # source bin/activate (cert-venv)# certbot --help - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - certbot [SUBCOMMAND] [options] [-d DOMAIN] [-d DOMAIN] ... Certbot can obtain and install HTTPS/TLS/SSL certificates.</description>
    </item>
    
    <item>
      <title>ポジティブな整理</title>
      <link>https://hugo.suwa3.me/post/2020-08-25-%E6%95%B4%E7%90%86-2/</link>
      <pubDate>Tue, 25 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-08-25-%E6%95%B4%E7%90%86-2/</guid>
      <description>Twitterに何か書き込んだり
TVでアニマルプラネットを観たり
英米文学を読んだり
知人が所属する劇団の演劇を観に行ったりしなくなった。(これはコロナのせい)
インプットもアウトプットも減っている。
心が忙しない。実際に忙しいのかもしれない。
上手に切り替えをして、緩急つけつつ
なるべく安定した状態で過ごしたい。
成長を感じられない。
いま自分がいる環境はとても恵まれているので
自分自身の課題だと思う。
何でもかんでも興味に任せて手を出していたが
だんだんと自分の方向性が固まってきたのと
分野が専門的になるにつれて
基礎部分の知識が不足していると感じるようになった。
コンピューターそのものに対する理解が浅い。
すべてを網羅するのは無理そうなので
購入した応用情報の参考書を辞書代わりにしたり
読み物として楽しむ感覚で眺めたりして
知識を身につけていきたいと思った。
ポジティブな言葉 会話 blog/SNS 過去の自分は変えられないので、今できる最善の努力を尽くすこと 小さなことでも良いので、新しいことに挑戦する 挑戦して感じたことや発見したことを文章に残す 過去の自分と比較してできるようになったことを考える 半年前、一年前の自分と対話する 小さな目標をたくさん作る 今ある大きな目標を分割していく マイルストーンの設定 </description>
    </item>
    
    <item>
      <title>トランポリンとAudrey先生</title>
      <link>https://hugo.suwa3.me/post/2020-08-24-%E8%BF%91%E6%B3%81-2/</link>
      <pubDate>Mon, 24 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-08-24-%E8%BF%91%E6%B3%81-2/</guid>
      <description>最近SNSをやらなくなってしまった。
あとから
「あのとき何をして何を考えていたか」
というのを思い出すのに良いのだけれども。
blogをキチンと書こうと思いました。
トランポリン熱が熱いです。
マイブームは、アンパンマンマーチが流れるオモチャを片手に
トランポリン上でリズムに合わせて、交互に片足跳びしながら歌いつつ回転するの。
2曲歌い終わる頃にはヘトヘトだよ。
何のために生まれて何をして生きるのか
歌いながら自身の人生を振り返ろう。
あとエアコンのフィルターを掃除しました。
エアコンを18度に設定しても、室内気温が28度だったの。
エアコンを18度に設定しても、室内気温が28度だったの&amp;hellip;..！
さすがに驚いた。
これ先週まで24度に設定していたし
(18度だなんで設定は常識的にありえないと思っていたので)
下手したら室内温度30度超えていたのでは？と思った。
そりゃエアコンかけていても部屋が暑いわ。
フィルターを掃除したら
鋭く冷たい空気が流れるようになりました。
痛いくらいだよ。サーキュレーターが欲しいです。
kubeconだとかの技術系カンファレンスの動画を観てもついていけないし、英語の勉強が本格的に必要だと感じました。
まずは英語に触れる機会をもとうと考えて オンライン英会話をすることにしたよ。
本当はカフェなどで対面レッスンが良いのだろうけれども
しばらくはオンラインで習うつもりです。
Audrey先生と、メールでレッスン日時など話し合いをした。
同性で同年代の先生が良かったので嬉しい。
レッスン初日までに、話したいことや勉強したい内容を自分でもまとめて整理しておこうと思いました。
塾講師時代に英語を教えることもあったのだけれども、ブランクが長すぎるので
中学の文法からコツコツ復習しつつ、レッスンでアウトプットしていきたいです。
目標は技術系カンファレンスの発表内容を、低倍速＆字幕付きでも聞き取れるようになること！
技術記事は最悪翻訳してしまえば読めるけれども、こちらも原文でストレスなく読めるようになれたら良いなぁ。</description>
    </item>
    
    <item>
      <title>ステンドグラスとアダンソン</title>
      <link>https://hugo.suwa3.me/post/2020-08-18-%E3%82%A2%E3%83%80%E3%83%B3%E3%82%BD%E3%83%B3/</link>
      <pubDate>Tue, 18 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-08-18-%E3%82%A2%E3%83%80%E3%83%B3%E3%82%BD%E3%83%B3/</guid>
      <description>最近、机の周りをぴょこぴょこ跳ねている蜘蛛がいて
よく見てみると触肢(手みたい)をコネコネさせながら見上げてきて
とても可愛らしいなぁと思っていたの。
彼らはアダンソンハエトリというらしく
ハエだけではなく、ダニやゴキブリの卵なども食べる益虫とのこと。
巣をつくらない種で、猫みたいに動くものに反応して跳ねるので
綿棒に砂糖水を浸して、猫じゃらしみたく動かすと飛びついてくる。
ここのところ毎日見かけていたので
アダンソンくんと呼んで仲良く(？)していたのだけれども
命名したら姿を現さなくなってしまい寂しい。
今週末、ステンドグラス教室へ行ってくるよ。
以前、ハンドメイドアクセサリーや小物なんかを
カフェや喫茶店に置いてもらって委託販売をしていたのだけれども
もっと作るのに特殊な技術と時間が必要で、より実用的なものを
自分が最も気に入っている喫茶店だけに置いてもらえるようにしたいなぁ。
と、考えていて
実家が家具屋なので、祖父に家具小物の作り方を教わろうかと思っていたけれども
(実際に工場を借りて教わり、家具を自作したことがある)
ずっと昔に貰ったステンドグラスの時計を、気に入って使い続けているので
ステンドグラス製の小物であれば、わたしが気に入っている喫茶店にも馴染むし
理想としているものに近いなぁと感じたので
まずは手始めに作るのを経験してみようと思いました。
お気に入りの喫茶店は、上京してから通い続けていたけれど
最近は行けていなかったので顔を出したいと思います。
お店のすみに、絵画や作品が売られていて
ここ数年は作家さんが作品づくりをやめてしまったと話していたので
いつか喫茶店に置けるような作品を、わたしも作れたら良いなぁと考えていたの。
目標ができたので嬉しい。
「突然、ステンドグラスだなんて言うから驚いた」
と言われたけれど
わたしのなかではボンヤリとした理想がふわふわと漂っていて
それが突然、輪郭をあらわすイメージです。
輪郭があらわれると目標が具体的になっていくの。</description>
    </item>
    
    <item>
      <title>健康</title>
      <link>https://hugo.suwa3.me/post/2020-08-16-%E8%BF%91%E6%B3%81/</link>
      <pubDate>Sun, 16 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-08-16-%E8%BF%91%E6%B3%81/</guid>
      <description>WordPress WordPressのPHPバージョンをあげようとして
下準備はきちんと済ませたのですが
古いPHPだけアンイストールするところを
**勢い余ってApacheもアンインストールしてしまい
**blogが表示されない〜〜〜となって一時撤退しました。
AWSのEC2上でホスティングしているので
AMI作成してインスタンスを冗長稼働させて、作業中はHostsで設定しておきつつ
片方のサーバーでバージョンアップがうまくいったら切り替える方式で進めたよ。
Hostsの設定解除するのを忘れて作業終了してしまい
「blog表示されなくなった」
ってなるお約束？も済ませました。
健康 先週はなぜか体調不良で
PCに向かうと頭痛＆吐き気がするので
「もしかしたらPCアレルギー(あるのか？)かもしれない・・」
とPCアレルギーでググったりしていたのだけれども
体調不良で食欲もないから
何も食べずに横になっていたら、余計に悪化して
寝る前にスープを飲んだら少し良くなったのね。
翌日、またお昼過ぎくらいから頭痛と吐き気がして
スープを飲んだら回復したの。
もしかして・・・と思って
朝起きたらスープを飲むようにしたら、すこぶる体調が良いので
軽く熱中症だった可能性がある。
確かに、エアコンが古くて部屋が暑かったし
何より最近の朝ごはんがコーヒーとドーナッツだけだった。
酷暑の午前中にコーヒーとドーナッツだけでしのごうとすると体調を崩す
という、大事なことを学びました。
わかめとゴマのスープを飲むようにしたら
だいぶ改善されたよ。
エアコンのフィルター掃除が直近の目標です。</description>
    </item>
    
    <item>
      <title>朝の宮下公園</title>
      <link>https://hugo.suwa3.me/post/2020-08-04-%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Tue, 04 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-08-04-%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>こんなにblogを書かなかったの初めてかもしれないくらい放置してしまった。
わたしの2週間をダイジェストでお送りします。
そして、ここのblogが流石に色々アップデートしないと動作がやばめになってきたので
今週末はWordPressどうにかします。。
Kubernetes Novice Tokyo #3 にて、初めてリモートLT参加しました🙌
資料を作成して事前練習をしていて感じたのが
リモートLTだと身振り手振りが通じないので
抑揚を工夫したり、ポインターを活用して注目してほしい箇所を伝える必要があるなぁと思ったよ。
イベント終了後に
発表資料やTwitterのハッシュタグに対して何人かがコメントをくれて
それに対して答えたり感謝したりしながら
オフラインの登壇イベントは打ち上げがあるけれども、オンライン系のイベントではイベント後に参加者とSNSで交流することで繋がりをつくれるの良いな〜
と思った。
オフラインのイベントでも「この人いいなぁ」ってなったら
Twitterのアカウントを聞いて繋がるしねえ。
日曜日の朝、宮下公園に行ってきたよ。
公園は8時から開いているんだけど
朝は人が少なくて涼しく、良い感じだった。
公園で少し遊んだら、朝ごはんを食べて買い物して
そのまま午前中のうちに帰るのがMyベストコースかもしれない。
午後はお昼寝だよ!
最近もっぱら気になっているのが
ジェリーキャットのタコです。
https://jellycat.official.ec/items/24076705
これは抱っこしてソファでお昼寝したら幸せを感じると思う。</description>
    </item>
    
    <item>
      <title>ジオラマ</title>
      <link>https://hugo.suwa3.me/post/2020-07-29-%E3%82%B8%E3%82%AA%E3%83%A9%E3%83%9E/</link>
      <pubDate>Wed, 29 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-29-%E3%82%B8%E3%82%AA%E3%83%A9%E3%83%9E/</guid>
      <description>お昼、机の隅にあるヒツジを眺めながら
**ジオラマ作りたいな〜
**と思ってyoutube見ていたの
https://www.youtube.com/watch?v=J8wiWwV7f8g&amp;amp;t=173s
これSeriaでジオラマの材料が揃うのでは？？
と思い、早速お仕事終わりにSeriaへ寄って
材料を揃えてみた
アクリル絵の具以外はすべて100均で揃ったよ。
完成したのがこれ👇
一時間半くらいで出来上がった。
切り株が一番苦戦したの。写真を見ながら色を塗った。
小石は玄関の前に転がっているのを拾ってきました。
水底は、昼間たまたま見かけた五大湖の写真を参考にしたよ。
湖の底が石畳になっているのかと思ったら
氷の板がくっつきながら凍ってこんな模様になったらしい。
綺麗だねえ</description>
    </item>
    
    <item>
      <title>連休</title>
      <link>https://hugo.suwa3.me/post/2020-07-26-%E9%80%A3%E4%BC%91/</link>
      <pubDate>Sun, 26 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-26-%E9%80%A3%E4%BC%91/</guid>
      <description>四連休前半はひたすらPrometheusについて資料を漁って
後半はEKS on Fargateの発表資料を作って間に合わせました。
EKS絡みは前職の検証結果や諸々の情報を含むので
どこまで出して良いのか、念のため元上司に連絡して確認してもらったよ。
運動不足で基礎代謝量が落ちていると感じる。
あと夏バテで胃が弱っている〜〜
毎日トランポリンして胃に優しいものを食べよう。</description>
    </item>
    
    <item>
      <title>四連休初日</title>
      <link>https://hugo.suwa3.me/post/2020-07-23-%E5%9B%9B%E9%80%A3%E4%BC%91%E5%88%9D%E6%97%A5/</link>
      <pubDate>Thu, 23 Jul 2020 13:00:28 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-23-%E5%9B%9B%E9%80%A3%E4%BC%91%E5%88%9D%E6%97%A5/</guid>
      <description>入社してそろそろ3週間経つんだなぁ
と、しみじみしていたの。
転職早々フルリモートでどうなるんだろうって不安だったけれども
少しずつ慣れてきたかもしれない。
印象的だったのが働き方宣言で
今までもわりと自由に働いていたけれども
働き方を「宣言」することで
自分で決めたことなのだから、責任を持たねば
という気持ちになるなと思った。
自分で決めたことを、自分の責任でやり遂げるのは
大変だけれども、やらされている感があるよりずっと良い。
宣言をするだけなのに、意識が変わるのは面白いなと思ったよ。
仕事を見てもらえている安心感ある。
サポート体制が整っているし
技術習得へのストイックさを感じる。
あと驚いたのが、社内勉強会の質や量もそうだけれど
社外の勉強会やイベント、
テックカンファレンスなどの参加がまあまあ当たり前みたいな雰囲気で
じゃあ、わたしはそれ以上の何が出来るんだろうと考えてしまった。
入社を決める前の話
年始に開催されたハンズオンに参加して
主催している方たちの雰囲気が良いと直感的に思ったの。
入社が決まった頃に代表の著書を片っ端から読んで
働き方の哲学を知って、ユニークな会社だなぁと驚いた。
正直、わたしは内向的な方だし
普通にしていても人からマイペースと言われるし
協調性に自信ないなぁ
と、感じながらだったけれども
環境や周囲の人が変わると
それに影響されて、少しずつ自分自身の変化は感じるので
うまく馴染みつつ良い方に転がっていくと良いなぁと思います。
Chrome拡張機能のバージョンを上げることができました🎉
どうぶつさんnote
cookieにテキストを保存していると
いつ飛ぶかもわからないのでローカルストレージを使おうと思っていたのだけれども
Chromeのstorage API使ってみようと思いました。
https://developer.chrome.com/extensions/storage
docker-composeでGrafanaも立ち上げてみたよ。
Docker上にたてたGrafana
とりあえず、ひたすらPrometheusについて調べて
資料をかき集めていました。
Prometheusの概要 なぜPrometheusなのか (Kubernetesの監視にPrometheusが選ばれる理由)
https://prometheus.io/docs/introduction/overview/
以下はPrometheusとKubernetesがマッチする3つの理由
https://www.weave.works/blog/prometheus-kubernetes-perfect-match/ PrometheusでKubernetesを監視するさいのアーキテクチャ図
https://www.scsk.jp/sp/sysdig/blog/prometheus/prometheus.html
&amp;gt; Kubernetesクラスタアーキテクチャの概要 実際にさわってみる系
Prometheusでkubernetesのノードを監視する
Node exporterのpodをたてることで、監視塔として機能するっぽい prometheus/node_exporter: Exporter for machine metrics なんとなく構成は見えてきたけれども、思っていたよりも重そう・・
そしてSampleとして使えるコードが少ない。
PrometheusやKubernetesのドキュメントにblogとかないかな〜
と探したけれども、なかなか無い〜〜
いったん保険としてEKS on Fargateで発表資料をつくって
Monitoring Kubernetes with Prometheus on Dockerは</description>
    </item>
    
    <item>
      <title>RasPiハンズオン</title>
      <link>https://hugo.suwa3.me/post/2020-07-22-raspi%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</link>
      <pubDate>Wed, 22 Jul 2020 13:00:42 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-22-raspi%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</guid>
      <description>RasPiハンズオンに参加しました🙌
screenコマンドに慣れたよ。
用意して貰っていたRasPiにsshでログインして
いろいろと試して遊んだ感じです。
個人的には $ sudo rm -rf /* してみようのところが面白かった。
なかなか普段やってみようってならないもんねえ。
元セキュリティの研究職の方がいて、その人の話も面白かったです。
ポート全開のサーバーをハニーポッドとして置いて
数万種類以上のマルウェアの情報を集めて、それらを機械学習で解析したらしい。
そのあとはPrometheus on Dockerしていました。
Getting started | Prometheus
👆Sampleにあったシンプルなprometheus.ymlを参考にした
Installation | Prometheus
👆Docker上でPrometheusを動かすのに参考にした
% mkdir Prom % cd Prom % docker pull prom/prometheus % vi prometheus.yml global: scrape_interval: 15s # By default, scrape targets every 15 seconds. # Attach these labels to any time series or alerts when communicating with # external systems (federation, remote storage, Alertmanager).</description>
    </item>
    
    <item>
      <title>オンラインLT</title>
      <link>https://hugo.suwa3.me/post/2020-07-21-%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3lt/</link>
      <pubDate>Tue, 21 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-21-%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3lt/</guid>
      <description>Kubernetes Novice Tokyo #3
https://k8s-novice-jp.connpass.com/event/181410/
👆こちらの初心者用LT枠に申し込みました。
オンラインLT初めてかもしれない。
もくもく会のLTに参加するときは、もくもく中に資料ができあがったら
LT枠に滑り込ませてもらって発表するくらいの感じだったけれども
今回はキチンと連休をつかって資料つくろうと思いました。
いろいろとネタは考えたけれども
PrometheusをDockerで触ってみるのが
サッとできそうだし、目で見て楽しめる感じなので
発表する内容として向いているかなぁと思いました。</description>
    </item>
    
    <item>
      <title>note拡張機能</title>
      <link>https://hugo.suwa3.me/post/2020-07-19-note%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD/</link>
      <pubDate>Sun, 19 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-19-note%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD/</guid>
      <description>👆つくりました
https://codepen.io/ishizuka427/pen/NWxEvpo
https://github.com/Ishizuka427/note
まずわたしのjsスキルがどのくらいかというと
10年以上むかし html ファイル内に script タグを仕込んだな〜
程度です。。
この blog をホスティングするようになって、サイドバーを改造するときは jQuery のドキュメントからサッとコピペ職人していました。
Chrome 拡張機能をつくるにあたって、jQuery で書こうかなと思ったのですが、謎の懐古主義に陥って MDN を読みながら生 js で書いてみることにしました。
処理が進めば進むほどに苦しくて発狂するかと思いました！
途中で、やりたい処理にはライブラリが必要になることが判明して
「Javascript にライブラリとかめちゃくちゃ言語っぽい！」
と感動しました。
高校時代の js の印象って.htmlに書くタグの一つって感じだったのに、、進化したんだなぁと感慨深いです。
申請までしたあとに、そういえば最近 cookie 規制のニュース見たけれども
「この機能は大丈夫だろうか？」
と、気になって調べたら、若干抵触しそう。
ダメだったとしても腐らずまた元気に Javascript 書きましょう🙌</description>
    </item>
    
    <item>
      <title>Chrome拡張機能</title>
      <link>https://hugo.suwa3.me/post/2020-07-18-chrome%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD/</link>
      <pubDate>Sat, 18 Jul 2020 09:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-18-chrome%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD/</guid>
      <description>https://twitter.com/_Tsuka3/status/1284363384968736768?s=20
ということで
転職早々いろいろテンパっていたら
トラップに引っかかり$5.00支払ってしまった。
動機がアホ過ぎるけれども、とりあえず拡張機能つくってみました。
MarkdownでURLを貼り付けるとき[title](url)みたいな形式で書くと思うんだけど
いつもコピペしてこの形に整えるの面倒くさいので、ワンクリックでコピペできる拡張機能がほしいなぁということで目標にしました。
(探せば既にありそうだけれども、今回そういうことは考えない)
https://developer.chrome.com/extensions/getstarted
まずは作業ディレクトリを作成します
mkdir linkmaker cd linkmaker ディレクトリ直下に manifest.json を作成します
{ &amp;#34;manifest_version&amp;#34;: 2, &amp;#34;name&amp;#34;: &amp;#34;Link Maker&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;1.0&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Make link of current tab quickly&amp;#34;, &amp;#34;browser_action&amp;#34;: { &amp;#34;default_popup&amp;#34;: &amp;#34;popup.html&amp;#34;, &amp;#34;default_icon&amp;#34;: &amp;#34;pencil.png&amp;#34; }, &amp;#34;permissions&amp;#34;: [ &amp;#34;tabs&amp;#34; ], &amp;#34;icons&amp;#34; : { &amp;#34;128&amp;#34;: &amp;#34;pencil.png&amp;#34; } } iconにする画像を調達してきて、同じく直下に置きます。
iconを置いたらchrome://extensions/に移動して
右上のデベロッパーモードをオンにしたあと
パッケージ化されていない拡張機能を読み込む で、作業ディレクトリを読み込みます。
jsライブラリ
mkdir -p js/lib wget -O js/lib/jquery.min.js http://code.jquery.com/jquery-2.1.0.min.js popup.html
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;ja&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Link Maker&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;css/popup.</description>
    </item>
    
    <item>
      <title>秋葉原</title>
      <link>https://hugo.suwa3.me/post/2020-07-13-3005/</link>
      <pubDate>Mon, 13 Jul 2020 13:00:35 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-13-3005/</guid>
      <description>最近ぜんぜんblog更新できていなかった
何か大きな力に引っ張り上げられて
なんかすごい！な状態になっているうさぎです。
楽しかったので
またエモい絵日記を書きたい。
土曜日は、Ubuntu Serverの初期設定をスクショして写経する作業した。
https://www.evernote.com/l/AcPiO03PyYdKHIg4saKWXjll-SLD71f2GWE
まだまだ途中なの。
翻訳して、ドキュメントや仕様書を原文で読みつつ
イディオムや単語に慣れるのが狙いです。
英語の勉強がてら、何をしているのかキチンと把握したい。
日曜日は、前職の先輩とラズパイもくもく会しました。
まずは秋葉原の電気街巡りしました。
これ800円で購入したの
LCD電子メモタブレットだよ✎
衝動買いデバイス、これは当たりだった
書き心地がすごく良い。
アキバの電気街は、格安デバイスの掘り出し物があるから楽しい🙌
1000円のスマートウォッチとかカードリーダーとか
ラズパイZEROとか、買いたくなっちゃうよねえ
コワーキングスペース綺麗だったよ。
https://grinspace.jp/facility/
グリンエリアが空いていたので
モニターとキーボードとマウスなどを借りて
ラズパイを接続して、GrovePiという拡張ボードで
センサー系いろいろ試せたの楽しかった😊
がんばってSDカードに専用イメージをインストールしていたんだけど
なんか時間かかるし上手くいかなかったので
先輩が前職の同僚から貰ったという、お下がりラズパイを起動させたら
スムーズにいったので、それに色々インストールしてセットアップ済ませた。笑
ラズパイにログインすると
ドラクエのキャラクターが出現する設定になっていた！
このWordPressのサーバーもsshログインしたらスライムが出現するように
設定してみました。
かわいいいい
macのターミナルを開いたときにメタルスライムを出現させる方法を書きます
環境:
macOS
zsh
https://github.com/dot-motd/dragon-quest
👆ここからgistのURLを調達してくる
% sudo vi ~/.zprofile curl -s &amp;#34;https://gist.githubusercontent.com/makocchi-git/9775443/raw/6747aa4a65e4293201289899931fe04472c5cfcf/metal-slime.txt&amp;#34; # 調達したスライムのURLを設定する。 cat &amp;lt;&amp;lt; EOF EOF % source ~/.zprofile 火事で焼けてしまったけど、再開したというお蕎麦屋さんに行ってきたよ。
先輩はかなり久しぶりだったらしく、喜んでいたので良かった🙌</description>
    </item>
    
    <item>
      <title>スマートウォッチ</title>
      <link>https://hugo.suwa3.me/post/2020-07-07-%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A6%E3%82%A9%E3%83%83%E3%83%81/</link>
      <pubDate>Tue, 07 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-07-%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A6%E3%82%A9%E3%83%83%E3%83%81/</guid>
      <description>スマートウォッチのアップデートをしたら
一定時間動かないでいると
『からだ動かせアラート』(仮名)が鳴るようになった。
アラート鳴らないように設定する方法も分からないので
とりあえず促されるままに椅子から立ち上がって
軽く足踏みしてみたりしているよ。
スポーツジムとか行きたい。
いろいろな予定を忘れるので
基本的に予定はすべて一つのGoogleカレンダーに同期して
10分前になったらスマートウォッチにアラートが飛ぶようにしているの。
ただ職場のスケジュールは、セキュリティ的に同期だめかな感あるので
スケジュール10分前リマインドの整備を進めたい〜</description>
    </item>
    
    <item>
      <title>早起き</title>
      <link>https://hugo.suwa3.me/post/2020-07-05-%E6%97%A9%E8%B5%B7%E3%81%8D/</link>
      <pubDate>Sun, 05 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-05-%E6%97%A9%E8%B5%B7%E3%81%8D/</guid>
      <description>土曜日は早起きして
午前中に前髪を切りに行き、ネイルをして
ステンドグラスぽくて可愛い。
午後はみそぴぴデートしたよ。
久しぶりに会って色々と話せたので良かったです。
その後は、移動してPCの作業環境を整えていました。
日曜日は全力でゴロゴロする日です。
全力でゴロゴロした。
⌒Ｖ⌒Ｖ⌒Ｖ(_A_)ごろごろ
GrovePi+届いたよ。
ラズパイのセットアップしておこう💪</description>
    </item>
    
    <item>
      <title>ひどいありさま</title>
      <link>https://hugo.suwa3.me/post/2020-07-03-%E3%81%B2%E3%81%A9%E3%81%84%E3%81%82%E3%82%8A%E3%81%95%E3%81%BE/</link>
      <pubDate>Fri, 03 Jul 2020 13:00:16 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-03-%E3%81%B2%E3%81%A9%E3%81%84%E3%81%82%E3%82%8A%E3%81%95%E3%81%BE/</guid>
      <description>机の上が我ながらひどい有り様だった！
最近出社が多かったからな・・
劇的ビフォーアフター✨(あのBGM)
Pointはカイコの文鎮と、新入りのヒツジ
はあヒツジの赤ちゃん可愛い
前の職場の先輩とRasPiもくもく会する約束したよ
GrovePi+という拡張ボード(はんだ付け不要でアナログデジタル変換してくれるすごいやつ)を使ってみるがテーマ！
楽しみじゃのう
なんとなく1年前を振り返っていたよ
花屋のCSとして働いていて、昨夏Kubernetesの勉強会に行ったとき
「普段は花を売っています」
と自己紹介したら
「花屋さんなのに趣味でKubernetesの勉強しに来たの？！感動しました」
と言われて、何に感動したんだろう？と思ったけれども
花屋ですら魅了する技術というところだろうか。
学べば学ぶほど
「学ぶこと山のようにあるなぁ」
といった感じでビビるのだが楽しい。</description>
    </item>
    
    <item>
      <title>⋆⸜(* ॑꒳ ॑* )⸝ﾋﾟｮﾝﾋﾟｮﾝ</title>
      <link>https://hugo.suwa3.me/post/2020-07-02--%E0%A5%91-%E0%A5%91-%EF%BE%8B%EF%BE%9F%EF%BD%AE%EF%BE%9D%EF%BE%8B%EF%BE%9F%EF%BD%AE%EF%BE%9D/</link>
      <pubDate>Thu, 02 Jul 2020 13:00:12 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-02--%E0%A5%91-%E0%A5%91-%EF%BE%8B%EF%BE%9F%EF%BD%AE%EF%BE%9D%EF%BE%8B%EF%BE%9F%EF%BD%AE%EF%BE%9D/</guid>
      <description>RasPi3とヒツジ(コリデール種)が届いた。しあわせ⋆⸜(* ॑꒳ ॑* )⸝ﾋﾟｮﾝﾋﾟｮﾝ
職場の人とランチ楽しかったの
新しい職場の先輩方、野球ファンが多くて
同僚の名前より先に野球選手の名前を覚えそうな勢いです
カープの菊池とベイスターズのヤスアキジャンプだよ⋆⸜(* ॑꒳ ॑* )⸝ﾋﾟｮﾝﾋﾟｮﾝ</description>
    </item>
    
    <item>
      <title>出社</title>
      <link>https://hugo.suwa3.me/post/2020-07-01-%E5%87%BA%E7%A4%BE/</link>
      <pubDate>Wed, 01 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-07-01-%E5%87%BA%E7%A4%BE/</guid>
      <description>昨日はコドモンの最終出社日でした。
エンジニアとしてキャリアをスタートした初めての会社で
入社時からエンジニアは数倍に増えて大所帯になっていた。
激動の半年間だったなぁと思いました。
「エンジニアってどうやってお仕事するんだろう？」状態から
半分溺れながらも、基本的にはやりたいことをやらせてもらえて
楽しく働くことができたなぁと思います。
またオフィスへ遊びに行きたい🌻
今日はサイボウズに初出社してきました。
きれいで広々していた！
ほとんどの社員がリモートワークで、わざわざ出社させてしまってむしろ申し訳ない感じなのでは・・？ってくらいだったよ
ウェルカムランチでは人見知りを最大限発揮しました😅
早く慣れたいのう
帰り際に、(仕組みをよく理解していなくて)ビルのセキュリティゲートを通れなくて、半泣きになっているところを通りかかった先輩社員さんが
「最終的には力づくで脱出できるから大丈夫！」
って元気づけてくれてワロタ。経験者かな？
通り方を教えてもらって出られました。
「これ出られなくなっちゃったらどうしよう」
と、ガチめに泣きそうだったので良かったです！</description>
    </item>
    
    <item>
      <title>やりたいこと欲しいもの</title>
      <link>https://hugo.suwa3.me/post/2020-06-29-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8%E6%AC%B2%E3%81%97%E3%81%84%E3%82%82%E3%81%AE/</link>
      <pubDate>Mon, 29 Jun 2020 13:00:21 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-29-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8%E6%AC%B2%E3%81%97%E3%81%84%E3%82%82%E3%81%AE/</guid>
      <description>KubernetesやっておきたいことList
cronjob
https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#creating-a-cron-jobhttps://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#creating-a-cron-job kustomize
https://qiita.com/os1ma/items/076a57b25e74e54476ba
環境ごとにportを変えてみたり、namespaceを変えてみたりしてみる Secrets
https://kubernetes.io/docs/concepts/configuration/secret/ ConfigMaps
https://kubernetes.io/docs/concepts/configuration/configmap/ 新しいスマホ欲しくて
面白そうなものを見つけたの。
PINE64社製Linuxスマホ
https://store.pine64.org/?product=pinephone-community-edition-ubports-limited-edition-linux-smartphone
wiki.pine64.org
※PINE64社はLinux対応のPINEシリーズのコミュニティ運営・開発販売するスタートアップ企業
$149.99なら欲しい♡
GrovePi+をポチりました。
https://www.switch-science.com/catalog/2129/
RasPiのハンダ付けが不要になる！
モジュール入りのOSをインストールして対応パーツを組み合わせれば
プログラムのみで簡単に実装できるらしい。
https://www.dexterindustries.com/GrovePi/get-started-with-the-grovepi/
届くの楽しみだなぁ
楽しみいっぱいあって楽しい</description>
    </item>
    
    <item>
      <title>ごらく</title>
      <link>https://hugo.suwa3.me/post/2020-06-27-%E3%81%94%E3%82%89%E3%81%8F/</link>
      <pubDate>Sat, 27 Jun 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-27-%E3%81%94%E3%82%89%E3%81%8F/</guid>
      <description>TVを観ないし、最近は漫画も読まなければ
SNSもやらなくなったし、スマホで読むのは技術系の記事のみで
ゲームもやらないし娯楽が睡眠くらいだなと思った。
GWあたりに数時間どうぶつの森やったかも。
最近ワクワクしたのは、HHKBが届いたときと
EmacsにハマったときとRasPiのセットアップしていたときと
スマートウォッチの新作を見つけたときくらい。
ポケモンのパズルゲームをインストールしてみた。
ピカチュウに課金したら満足してしまった。とても癒やされた。
技術習得のために、沢山のことを犠牲にしているのかもしれないと思った。
自分でそれを選択しているけれども
たまに意識して寄り道もしたいなぁと思いました。
Wantedlyから、Wantedly経由でスカウトメッセージが届いて
オンラインで色々とお話が聞けたの。
わたしはまだまだ知らないことが山のようにあるし
井の中の蛙大海を知らずというか
もっと広い視野が欲しいなぁと思いました。
数週間後には、転職先で
自分の実力不足に打ちのめされていそうなので
今だけは不安と楽しみのあいだをフワフワしていたい。
今日は7時間くらいkubectlしていた。いっぱい触れた😊♡
毎朝、ラジオ体操ばりにKubernetes触りたいな。k8s体操💪
これからも「これもっと知っておきたいなぁ」って
自分の内側から湧いてくるエネルギーを上手につかって学んでいきたい。
このエネルギーを枯渇させないよう、無理せず健康第一でがんばろう。</description>
    </item>
    
    <item>
      <title>対人</title>
      <link>https://hugo.suwa3.me/post/2020-06-23-%E5%AF%BE%E4%BA%BA/</link>
      <pubDate>Tue, 23 Jun 2020 13:00:20 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-23-%E5%AF%BE%E4%BA%BA/</guid>
      <description>社内SNSみたいなところで
凄く上手にコミュニケーションをとっている先輩方を見て
次元の違うコミュ力の高さに
「退職してもこのチャンネルは見たい！！」
ってくらい勉強になる。
仕事に対して、十人いたら十通りの価値観があって
互いに違いがあっても、上手く伝えあって尊重しあっていると感じた。
すごいなぁ。
わたしは内向的な面が強く出てしまうと
人との積極的なコミュニケーションよりも
一人時間の充実を優先させてしまう傾向があるので
スタンドアローンになりがちだと感じる。
普段の言葉だけではなく、考え方の癖を自覚して
なるべく内面と矛盾のない言動ができたら良いのにと思う。
正直でいるのが一番ラクで良い。
人の、悪いと感じる面を注視してしまうと(悪口を言う自分は嫌なので)それを言葉に出さずとも、正直でいられないストレスはあると感じた。
良い悪いの価値判断をくだすのではなく、その人の傾向？として捉えたい
そもそも人のことをどうこう思えるほど、自分は出来た人間ではない😩</description>
    </item>
    
    <item>
      <title>宣言</title>
      <link>https://hugo.suwa3.me/post/2020-06-22-%E5%AE%A3%E8%A8%80/</link>
      <pubDate>Mon, 22 Jun 2020 13:00:14 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-22-%E5%AE%A3%E8%A8%80/</guid>
      <description>そろそろ転職先でつかう技術の予習や
新しい環境でバタバタしそうということで
Mastodonは、しばらく低浮上になる旨をトゥートしたら
色々な人が応援するよと声を掛けてくれて、有難いなぁと思いました。
しばらくは技術の習得や、健康面を意識して整えることに集中したい。
宣言することで後戻りできない状況をつくりだす。笑😃
先日、普段つかっているMastodonサーバーのサーバー管理者が東京に来ていたので
サッとスタバでお話してきたよ。
一時期knzk.meが爆速サーバーだった時期があって
その時の構成や、なぜそれが実現したのかの裏話的なものが聞けた🙌
あとはクライアントやLive配信アプリをPHPで書いていたの
それについても、内部について少し聞けたの嬉しかったです。
Wantedlyで、Wantedlyからスカウトメッセージが届いて
まずWantedlyもWantedlyを使っていることに驚いたのだけれど
自社サービスを自分たちでも使いこんでいく
という意味では、良いプロダクトをつくる上で大事なのだなと思いました。
「転職を意識していない状況でも、取り組みに興味があればオンラインで」
ということだった。
Kubernetes基盤における他社の技術や構成について興味があるし
身近なサービスの取り組みについて、オンラインで双方コミュニケーションできるのなら純粋に知りたいなぁと感じた。
転職は本当に考えるどころじゃないんだけど、転職を意識していない状況でも と書かれているし
興味のある技術についてオンラインで話を聞けるチャンスと考えたら、なかなかない機会だし質問してみたいこと沢山ある！
最近の作業BGMです。
https://www.youtube.com/watch?v=blYo4WheVgA
静かな感じが、作業を邪魔しなくて良い。</description>
    </item>
    
    <item>
      <title>やったこと/直近やりたいこと</title>
      <link>https://hugo.suwa3.me/post/2020-06-21-%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8-%E7%9B%B4%E8%BF%91%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8/</link>
      <pubDate>Sun, 21 Jun 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-21-%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8-%E7%9B%B4%E8%BF%91%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8/</guid>
      <description>Kibelaが気に入って個人アカウントを作ったのでメモ帳に使うよ。
さっそくKubernetesのリソース一覧を作成した。
あとでQiitaにも公開するかも。
身近な動きをコードに落とし込む習慣を身につけようと思った。
例えば.goのコーディングに自信がなくて.shなら出来そうな気がするのは
普段shell scriptを日常的に書いているからなんだなぁと思いました
GitHubActionsでデプロイの自動化、sshログインが出来るのであれば
パブクラ/オンプレ問わず出来そうなので
EC2かRasPiで試してみようと思いました。
オフラインでも開発できる環境を整備したいので
LocalStackについて調べて少しずつやります。
週末の個人開発するのに、WiFi難民するの疲れちゃったの。</description>
    </item>
    
    <item>
      <title>HHKB届いた</title>
      <link>https://hugo.suwa3.me/post/2020-06-18-hhkb%E5%B1%8A%E3%81%84%E3%81%9F/</link>
      <pubDate>Thu, 18 Jun 2020 13:00:50 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-18-hhkb%E5%B1%8A%E3%81%84%E3%81%9F/</guid>
      <description>日中は落ちていました。朝から
「こんなアプリあったら楽しそうね〜」
と、雑談していて
しばらく話していたら、相手は話しながらjsで実装していたらしく
わたしは1日100時間くらいコーディングでもしないとダメなのでは・・
何年コピペでプログラム書いているんだろう。
ザックリと仕様を伝えられて、その場で実装とか
いつまで経っても出来ないんだろうなあ
と、考えて落ちこんでいた。
そのタイミングでHHKBが届いたので
「こんなものに投資してもコードが書けるようにはならないのに」
などと、情けなさに泣いていたのですが
しばらくして落ち着いたので開封の儀を執り行いました。
これから長く相棒になるんだなぁと思ったらこみ上げるものがあったよ。
HappyにHackingしていきたいです。
理想と現実の乖離が大きいなぁと思う。
1年前の、Linuxを知らなかった頃の自分と比較したら別人なので
他人と比較せずに、自分の成長を見られるようになりたい。
キーボードのセットアップを済ませた。
十字キーが無いのは結構すぐ慣れたんだけど、無刻印なのでキーボードを見ると逆に分からなくなってしまう。
ホームポジションを絶対維持して、手癖だけで打鍵できるように意識するのが難しい。慣れたい。</description>
    </item>
    
    <item>
      <title>壊れかけのWindows</title>
      <link>https://hugo.suwa3.me/post/2020-06-17-%E5%A3%8A%E3%82%8C%E3%81%8B%E3%81%91%E3%81%AEwindows/</link>
      <pubDate>Wed, 17 Jun 2020 13:00:57 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-17-%E5%A3%8A%E3%82%8C%E3%81%8B%E3%81%91%E3%81%AEwindows/</guid>
      <description>お仕事わからないことが多すぎる〜〜
そもそも構成がよくわかっていない
リクエストがどう飛んでいるのか正確に把握できていないと感じる
そして何がどう分かっていないのか説明できない。
寝る前に少しThinkingTime設けよう。
こういうときのための脳内自動整理機能だよ。
頑張って考えて即寝ると、翌朝には何故か整理されて理解しやすくなる現象。
お仕事が難しいとワクワクしちゃうの
でも時限爆弾みたいなものだから
どのくらい時間掛かりそうなのか早めに把握して共有しないといけない。
その時間を見積もるためのザックリとしたタスク&amp;amp;スケジュール感と
そこに至るまでの根拠の整理を即刻終わらせよう。
Kubernetesのリソース一覧洗い出ししていて
公式見たらめちゃ多くて泣いた
https://kubernetes.io/docs/reference/kubectl/overview/#resource-types
書籍に書かれているリソースの倍くらい増えてない？😢
とりあえず手元に自分用リソース一覧表が欲しいので
ババっと一覧を作っちゃう。
家にある死にかけのWindows7に
Linux Mintをインストールするべく起動したら
何故かTV機能が稼働して、再起動かけてもTVしかつかなかったのだけれど
起動時にPress F12と出たから、サッと押してみたら直りました。
あれは何だったんだろう・・
データが壊れる前に、画像などを個人用S3へ移行作業したよ。
大学時代にHTML5やXHTMLについて習ったのは覚えていて
非推奨タグをガンガン使って課題提出したら諭された記憶ある。
ただXMLの記憶がなくて、これ最近の流行りなのかなぁって思っていたら
思いの外むかしからあるっぽい。忘れているだけの可能性😥</description>
    </item>
    
    <item>
      <title>HHKB難民</title>
      <link>https://hugo.suwa3.me/post/2020-06-16-hhkb%E9%9B%A3%E6%B0%91/</link>
      <pubDate>Tue, 16 Jun 2020 12:00:39 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-16-hhkb%E9%9B%A3%E6%B0%91/</guid>
      <description>今日は六本木の作業カフェで粛々とお仕事していたのですが
帰り際に鏡を見てすっぴんであることに気づきました。
意気揚々と出掛けたにも関わらず化粧し忘れるとかエッそんな事あるの？？
志村〜！顔、顔！
お昼はGitの内部についてふむふむしていました。
身近な技術の深掘り面白い。
Gitのつくりかた
YAMADAに寄ってHHKB白Type-S日本語配列のキーボードを取り扱っているか確認したら、私の欲しい型番のみ取り扱いがなかったです。取り寄せも不可。
「取り扱いがないとかあるんだ・・」
と、驚きました。
そして、自宅最寄りのノジマに寄ってHHKBあるか確認したら
そもそもPFUとの取引がなく、HHKBは取り扱っていないとのことだった。
これはヨドバシ最強説では？
MacがJISなので合わせた方が良いかなぁと思ったけれども
Mac(JIS) × HHKB(US)の人曰く相性の悪さなどは感じないとの事なので
USでも良いという結論に至りました。
結局、PFUダイレクトからUS配列のやつを購入した。
https://happyhackingkb.com/jp/products/hybrid_types/
届くの楽しみ😊
Infra Study Meetup #3「SREのこれまでとこれから」
今日のMeetupイベントも時間的にリアルタイム視聴は難しかったので
youtubeのオンデマンドを倍速で聴きました。
速すぎると頭に入ってこない時もあるので、速度を選べるのyoutube良いところだと思う。
安全工学という分野を知った。工学部だと学びそう。
トレードオフをモデルに落とし込んで定量分析可能にするの
口で言うのは簡単でも、実践が難しいやつだなぁと思った。
実感として「できた」と意識できたことあっただろうか。
どうしても視野狭くなりがち。
本筋関係ないけれど、定性分析と対比の意味でつかわない単体での定量分析という単語、単純に分析とかで良いのではと思ってしまう(細かい)
O&amp;rsquo;Reillyの入門Kubernetes読んでリソースを書き出す作業していました。
Pod Label Annotation Service ReplicaSet DaemonSet Job ConfigMap Secret Deployment 明日は優先順位を付けながらまとめる作業する。
これ、付録にあったんかい！
シングルノードは、3日溶かしてクラスター構築ツールとの相性が宜しくないことが判明したので😢
マスターノードとワーカーノード用にもう一台Pi4を買ったら再挑戦する。</description>
    </item>
    
    <item>
      <title>欲しいもの</title>
      <link>https://hugo.suwa3.me/post/2020-06-15-%E6%AC%B2%E3%81%97%E3%81%84%E3%82%82%E3%81%AE/</link>
      <pubDate>Mon, 15 Jun 2020 13:00:45 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-15-%E6%AC%B2%E3%81%97%E3%81%84%E3%82%82%E3%81%AE/</guid>
      <description>最近欲しいものが増えたのでまとめた
https://www.amazon.co.jp/dp/B008GXUDBO/?coliid=I2LBHBJYBT7Q04&amp;amp;colid=3RMUTOFHEMU9G&amp;amp;psc=0&amp;amp;ref_=lv_ov_lig_dp_it_im
かな文字が無刻印のJIS配列
Type-Sの白がほしいの。
3万円近くするので踏ん切りがつかないまま時が流れている。
メーカーの在庫が切れている状態なので、ヨドバシの店舗に在庫取り寄せられるか確認する。
https://www.amazon.co.jp/HUAWEI-%E3%83%95%E3%83%AD%E3%82%B9%E3%83%86%E3%82%A3%E3%83%BC%E3%83%9B%E3%83%AF%E3%82%A4%E3%83%88-%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A6%E3%82%A9%E3%83%83%E3%83%81-%E9%95%B7%E6%99%82%E9%96%93%E3%83%90%E3%83%83%E3%83%86%E3%83%AA%E3%83%BC-%E9%9F%B3%E6%A5%BD%E4%BF%9D%E5%AD%98%E3%83%BB%E5%86%8D%E7%94%9F%E3%80%90%E6%97%A5%E6%9C%AC%E6%AD%A3%E8%A6%8F%E4%BB%A3%E7%90%86%E5%BA%97%E5%93%81%E3%80%91/dp/B086R4MQTQ/ref=sr_1_1?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;amp;dchild=1&amp;amp;keywords=%E3%83%95%E3%82%A1%E3%83%BC%E3%82%A6%E3%82%A7%E3%82%A4+gt2+42+%E3%83%9B%E3%83%AF%E3%82%A4%E3%83%88&amp;amp;qid=1592225658&amp;amp;sr=8-1
いま愛用しているHUAWEIスマートウォッチGTの
充電器感度が落ちてきたので新作のGT2ほしい。
Bluetoothでの通話や音楽再生はそこまでだから42mmで良さそう。
睡眠モニタリング機能は使っているので、新機能のストレスチェックやってみたい。
https://store.pine64.org/?product=pinetab-10-1-linux-tablet-with-detached-backlit-keyboard
7月に発売のUbuntu入りタブレットだよ。
1万円だし、サブ機ほしかったので買いたい。</description>
    </item>
    
    <item>
      <title>反省会</title>
      <link>https://hugo.suwa3.me/post/2020-06-13-%E5%8F%8D%E7%9C%81%E4%BC%9A/</link>
      <pubDate>Sat, 13 Jun 2020 13:00:38 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-13-%E5%8F%8D%E7%9C%81%E4%BC%9A/</guid>
      <description>そもそもKubernetesをもっと触りたい
最近ずっとGoかemacs lispを触るかしている
わからないことが多すぎる
根幹の部分で理解が浅いのかなぁ
理解が浅いんだろうな
危機感も弱い。もう少し焦ろう
平日は1時間、休日は1日に2~3時間の学習量だけれども
その倍は時間を確保したいし、できれば集中して効率よく行いたい。
「興味あるのは分かるけれど、今じゃないよね」
って作業はやらないことにする。
Emacsのカスタマイズは封印だよ🙅
GitHubに草を生やして良いのは、Kubernetesの設定やyaml絡みのみです！</description>
    </item>
    
    <item>
      <title>粛々</title>
      <link>https://hugo.suwa3.me/post/2020-06-12-2927/</link>
      <pubDate>Fri, 12 Jun 2020 13:00:50 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-12-2927/</guid>
      <description>Kubernetesのコードリーディングをする上で知っておくと良さそうなこと
これKubernetesのキャッチアップに良さそうと思いました。
- Goの基礎知識と
- VSCodeやGolandなどGoのコードを読む際に宣言にジャンプできるようなエディタ
くらいがあると良いと思います
宣言にジャンプできるようなEmacsに設定する必要がある。
わたしはspacemacsを使っているので
Go layer を入れることにしました。
Goの開発環境、未だによく分からん&amp;hellip;
同僚に教わった方法を読み返しながら整備してみるぞい
わたしは何も分からん〜〜〜ってメンタルの日なので
ひたすらインプットに努めます😢</description>
    </item>
    
    <item>
      <title>お昼休み</title>
      <link>https://hugo.suwa3.me/post/2020-06-11-%E3%81%8A%E6%98%BC%E4%BC%91%E3%81%BF/</link>
      <pubDate>Thu, 11 Jun 2020 13:00:40 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-11-%E3%81%8A%E6%98%BC%E4%BC%91%E3%81%BF/</guid>
      <description>今日のお昼休みは https://teratail.com/ TERATAILというサービスを使ってみました。
技術の質問サイトです。
DjangoGirlsでコーチングしていたこともあり
Pythonやpip周りの環境構築についてなら回答しやすいかなぁということで
回答してみたのですが
対処法をポンと投げたところ、問題は解消されたようで
その上で質問者から
「どうしてですか？」
みたいに理由を問われて
え！？どうしてですか？？
それは内部処理も含めて正確に回答しないと
まさかりを投げつけられるのはわたしなんだけど
しかもググれば出てくるぞ・・
ヒントだけ出して後は調べるコツだけ伝授しよう。
って、後半は自分で調べるよう促したら低評価つけられたんだけど意味分からん！
自助努力しや💢
って感じだったので、たぶんもうやらないです。
あとは Common Lisp 入門 を眺めていました。
Emacs Lispのほうが環境構築がラクなので、Common Lispは後でやろうという結論に至りました。
あまり無駄に時間を使いたくないので、ザッと読むくらいにしたい。
夕方頃から突如Dockerの神様が降りてきて
Dockerの作業が秒で片付きました。
神様すごい！
モチベが神頼みなのマジでどうにかしたい。</description>
    </item>
    
    <item>
      <title>技術習得</title>
      <link>https://hugo.suwa3.me/post/2020-06-10-%E6%8A%80%E8%A1%93%E7%BF%92%E5%BE%97/</link>
      <pubDate>Wed, 10 Jun 2020 13:00:18 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-10-%E6%8A%80%E8%A1%93%E7%BF%92%E5%BE%97/</guid>
      <description>お仕事していると、お仕事おおおおおって感じなんですが
構築にしろ調査にしろ、基本的に技術以外のこと
(例えば何を求められているか、そもそもの目的などを聞き込むなど)
に、時間をかなり割くので
プライベートで技術習得するのが素早く出来るのって
そういうのすっ飛ばして技術習得のみに集中できるからなんだなぁ
と、思いました。
新しい技術を学ぶのは、やっぱりプライベートでガッチリやりたい派desu
「これやったことないし良く分かんないんだよなぁ」
って日常茶飯事だけれども
そういった『良く分かんない』をガンガン潰していきたい。
どうやってテクノロジーを追いかけていますか？
「ジュニアソフトウェア開発者として応募したときにCI/CD、クラウド、Dockerだとか沢山のことを要求されていっぱいいっぱいです」
という質問者に対しての回答で
1. 使い方を知っていて、最小限の_調査で済むテクノロジー（例：「CI/CDパイプラインのセットアップの仕方を知っている」）_
2. 企業のインフラで使われていることを知っているテクノロジー（例：「Dockerをいつ、何故使うかは知っている。だけどDockerfileは書いたことがない」）
3. 聞いたことはあるけど何者なのか見当がつかないテクノロジー（例：「Kubernetesというのは聞いたことがあるけど、何のために使うのか見当がつかない」）
3つのリストを作成して
一日に一時間でも良いから、(3)の項目を(2)に移すように
とのことだった。
常に更新し続ける技術に対する恐怖心を取り除くには、良い回答だなぁと思った。
ただ器用貧乏の頭でっかちにならないためにも、一点突破でも良いから(1)にあたる技術を磨き続けたい。</description>
    </item>
    
    <item>
      <title>コンプレックス</title>
      <link>https://hugo.suwa3.me/post/2020-06-08-%E3%82%B3%E3%83%B3%E3%83%97%E3%83%AC%E3%83%83%E3%82%AF%E3%82%B9/</link>
      <pubDate>Mon, 08 Jun 2020 13:06:08 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-08-%E3%82%B3%E3%83%B3%E3%83%97%E3%83%AC%E3%83%83%E3%82%AF%E3%82%B9/</guid>
      <description>https://www.youtube.com/watch?v=o3whOgZwjkI
最近の作業BGMはロードオブメジャーだよ。
emacsをひたすらカスタマイズしているときのワクワク感と
終わったあとの「emacs lispを見ていただけでは・・」って虚無感がすごいな。
本当はk8s触ったり技術のキャッチアップしたりしたいのに
現実逃避先としてのemacsが優秀すぎる。
絶妙に達成感あるし、開発環境が整うと妙に罪悪感もないし。
楽しいから良いのかな。
自身のコンプレックスを強く感じる。
エンジニアとして就職したかったのに、出来なかった8年間が
思いの外、強いコンプレックスとして自分の中にあるなぁと思う。
上手に付き合っていきたいし、むしろ原動力というか
学習意欲につながるエネルギーとして使いたい。
高校を辞めて、辞めた翌年には家を出て自分で高校に入り直して
「大学に行くと思っていなかったから、学費は用意していない」
と言われて(弟は特に問題なく進学した)、自分の進路は自分で決めたかったので
そのまま働きながら、スカラシップで入学できる大学に進学して
コンピューターについて学んだの。
何故、学んできたことを仕事に出来ないのか
地方に仕事はないのか
上京を反対されるのであれば、東京に住む人と結婚すれば良いのでは？
とも思ったし、思いついたら実際に行動した。
地域格差や、女性ゆえの反対・反発とか
そういったものを恨むつもりはなかったけれど
「気づいたらエンジニアとして働いていた」
という人に対して
強いコンプレックスを感じていると思ったの。
「感じていた」
かもしれない。
いまは以前ほど強く思わないかも。
ただ、流石に書類選考で50社落ちて
10社以上面接して、エンジニアになることを諦めかけていたときは
そのコンプレックスが一番強かったと思う。
エンジニアになれた達成感を味わう余裕もなくて
むしろそこからがスタートだと思ったし
漠然とした怖さというか、不安のほうが大きかった。
常に技術に対する恐怖心との戦いだなぁと思う。
このコンプレックス、うまく使いたいの。
こういう気持ち忘れないようにしたい。
正しい方向に使えれば、これまで感じていたコンプレックスも報われると思う。
正しい方向：Kubernetesをしっかり学んで仕事にいかす
間違った方向：Emacsをしっかりカスタマイズして自己満足に浸る
20代後半から30代って、一番頑張れるというか
頑張り方もわかってきて、体力もあって
踏ん張りどころだなぁと感じるの。
だからこそ、終わったことや
どうしようも出来ないことを
うじうじと悩んでいたくないなぁと思いました。
前を向いていたいです。</description>
    </item>
    
    <item>
      <title>マーカーっぽい感じ</title>
      <link>https://hugo.suwa3.me/post/2020-06-07-%E3%83%9E%E3%83%BC%E3%82%AB%E3%83%BC%E3%81%A3%E3%81%BD%E3%81%84%E6%84%9F%E3%81%98/</link>
      <pubDate>Sun, 07 Jun 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-07-%E3%83%9E%E3%83%BC%E3%82%AB%E3%83%BC%E3%81%A3%E3%81%BD%E3%81%84%E6%84%9F%E3%81%98/</guid>
      <description>k8sのリファレンスを読んだり
Goを書いたりしていました。
Themeをカスタマイズして可愛くなったemacsです。
マーカーっぽい感じになった。</description>
    </item>
    
    <item>
      <title>全力で休む</title>
      <link>https://hugo.suwa3.me/post/2020-06-05-%E5%85%A8%E5%8A%9B%E3%81%A7%E4%BC%91%E3%82%80/</link>
      <pubDate>Fri, 05 Jun 2020 13:00:50 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-05-%E5%85%A8%E5%8A%9B%E3%81%A7%E4%BC%91%E3%82%80/</guid>
      <description>昨夜から今日のお昼まで全力でゴロゴロしていた。
学生時代、大学にあったPCには
誰かがカスタマイズしたemacsが既に入っていて
Themeの配色とかクリーム色ベースで可愛かったの。
午後はemacsのカスタマイズをしていた。
Theme変更方法についてはQiita書いた。
spacemacsのThemeを変更する - Qiita
次はオリジナルThemeの作成方法と、カレンダーの装飾方法についても書きたい。需要が謎いというか、主に個人的なメモに近いけれども・・
emacs、時間が一瞬で無限に溶けるから気をつけないといけない。
本当はKubernetesのリソース片っ端から試すマラソンするつもりだったのだけれども、明日やります。
Lispへの関心が急上昇しているので
今しかない！と、思い
『計算機プログラムの構造と解釈(第二版)』をポチりました。
https://www.amazon.co.jp/%E8%A8%88%E7%AE%97%E6%A9%9F%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AE%E6%A7%8B%E9%80%A0%E3%81%A8%E8%A7%A3%E9%87%88-%E3%82%B8%E3%82%A7%E3%83%A9%E3%83%AB%E3%83%89%E3%83%BB%E3%82%B8%E3%82%A7%E3%82%A4-%E3%82%B5%E3%82%B9%E3%83%9E%E3%83%B3/dp/489471163X</description>
    </item>
    
    <item>
      <title>Go質問会</title>
      <link>https://hugo.suwa3.me/post/2020-06-03-go%E8%B3%AA%E5%95%8F%E4%BC%9A/</link>
      <pubDate>Wed, 03 Jun 2020 13:00:46 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-03-go%E8%B3%AA%E5%95%8F%E4%BC%9A/</guid>
      <description>Go質問会の動画みました
https://www.youtube.com/watch?v=vfrLbGVtvbo&amp;amp;feature=youtu.be
ゴルーチンを学ぶのに良い題材 (1:39:30~)
「勉強しなくては良いのでは」
「ライブラリを作って(その中にゴルーチンをつかって)使えばいい」
「作っているときの僕が賢ければ、使うときの僕は賢くなくていい」
というの
結局つかっているのでは？という、なかなかの謎理論だった。笑
メルカリ内でのアーキテクチャ流派とユースケース (1:30:00~)
- メルカリ社内でもDDDガチ勢、DDDゆる勢、フラット派閥など分かれている
- マイクロサービス化して複雑さが分割されている状態で、そこまでレイヤーを意識する必要があるのか
とはいえ👇
- チーム開発であれば、レイヤー構造のほうがやりやすい面もある
(確かに複数人で役割分担して作り上げていくのであればそうだよねえ)
正直、マイクロサービス化してサービスごとチームを組んで作り上げていくと
チーム単位での価値観が確立されていくのかなぁと感じたよ。
サービスの目的、使われ方、規模、開発者の人数によっても
最適解とされる開発手法は違ってくるのだろうし
そもそも話の出発点が『設計論』という括りで語るのではなくて
つくるサービスありきの設計論なのだなぁと思いました。
(例えば、何の料理をつくるのかという前提共有もなしに
料理論について語るのはあまり意味がないのでは？ってやつです)
オンライン勉強会
「時間の都合つかなそうだし、オンデマンドを後で聴けばいいか〜」
ってなると絶対に聴かないので
当日中に時間つくって2倍速で聴きながら、気になった部分だけアウトプットしてまとめることにしました。
今回はまあまあ成功・・？
前半LTの、技術的に突っ込んだ内容まではキチンと聴き込めなかったかも😢
メルカリの勉強会というか、発表を初めて聴いたかも。
会社によって雰囲気が全然違うのが面白いなぁと思う。
最近は、寝る前にLLVMをつかった言語自作の記事を読みながら子守唄(？)代わりにして、眠くなったら寝る感じなのだけれども (読んでいるうちに意味が分からなくなり寝る)
今日からはコレ！
http://studybyyourself.com/seminar/sql/course/?lang=ja
スマホからだと、絶妙に読みづらくて読み込み重いのがジワジワ効いて眠くなりそうです。
QiitaマイブームしていたらEmacsタグの週間ユーザーランキングにランクインしました🙌わーい
布教活動がんばるぞい</description>
    </item>
    
    <item>
      <title>象になる夢</title>
      <link>https://hugo.suwa3.me/post/2020-06-02-%E8%B1%A1%E3%81%AB%E3%81%AA%E3%82%8B%E5%A4%A2/</link>
      <pubDate>Tue, 02 Jun 2020 13:00:09 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-02-%E8%B1%A1%E3%81%AB%E3%81%AA%E3%82%8B%E5%A4%A2/</guid>
      <description>今日は象になる夢をみたよ
emacs、テキストエディタとしての包容力の凄さに
大人の魅力を感じて恋に落ちました。
どうして急に・・と思ったけれども
惚れた理由探すなんて野暮かなと思いました。
恋の病だね。
今まで単なるエディタの一つとして使っていたのに
Lispを見るたび括弧がキモいと思っていたのに
emacsのことを考えると胸がドキドキするの。
emacsのことばかり考えて外出したら
財布とスマホを忘れたので取りに戻りました。
長く多くの人に愛されているのには、何かしら理由があるのだろうと思って
使わないと文句も言えないので、エディタとして使い始めたemacsだったけれども
多機能なエディタだなぁくらいに思っていたら
その多機能さが、実は一つの理念のもとに成り立っていて
長く積み上がった歴史のなかで、多くの人の価値観が混沌としている様に
エディタを超えた世界観をもった何かだなあと思ったよ。
よくvimと引き合いにだされるけれど
思想が違いすぎるし
VSCodeとAtomを比較するならまだしも
vimとemacsでは重なる部分がそもそも少ないなぁと感じた。
昔は違ったのかな。エディタの種類がそもそも少なかった頃の名残なのかも。
Lispを書いたのでQiitaに上げました。
最近Qiitaマイブーム
バッファの移動を上下左右自由に行う</description>
    </item>
    
    <item>
      <title>Warning</title>
      <link>https://hugo.suwa3.me/post/2020-06-01-php-extras-generate-eldoc/</link>
      <pubDate>Mon, 01 Jun 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-06-01-php-extras-generate-eldoc/</guid>
      <description>Emacsでphpの環境を整えていたら依存packageでWarningがウザくて2年前のissueがcloseしていなかった話です。
今日はEmacsにphp-mode をインストールしていたら
Warning (emacs): PHP function descriptions not loaded. Try M-x php-extras-generate-eldoc 👆このWarningが出続けて仕方ないので
「依存packageなのかな？」
と、いうことで php-extras-generate-eldoc もインストールしたの。
でも、調べてみたら2年前に「noisyだ！」ってissueが飛ばされていて、未だにcloseしていなかった。(状況が若干違うし、今回よりも酷かったぽいけれど)
これ普通に警告うるさいもんな・・と思いました。
警告が一度出てyesでもすれば、それ以降は不要だと思う。
spacemacs - PHP function descriptions not loaded. Try M-x php-extras-generate-eldoc - Emacs Stack Exchange
I set the following in my spacemacs config:
dotspacemacs-excluded-packages &amp;#39;( php-extras ) 👆これでWarning非表示にはできるらしい。
対処療法って感じ。
ちなみにGitHubで詳細はこちらに書かれています。
https://github.com/arnested/php-extras/blob/develop/php-extras-gen-eldoc.el#L46-L50
お昼休みは、Go勉強会の課題をやっていました。
「gRPCわからんなー」
と思って調べて
HTTP/2の利点がふんわりわかった (gRPCは分からん)
あと気になったのはGo製静的サイトジェネレーター
HUGO です。触ってみよう。
LLVMも興味あったので少し調べました。
大学院生のためのLLVM | POSTD
以前、学生時代に言語自作の課題が出されて
最近思い出して言語の自作について調べていたら
思っていたよりも沼で泣きながら撤退したのだけれども
LLVMを使えば、ある程度環境が整った状態から作れるのでは・・
と、少し希望の光が見えたよ。勉強がてらやってみたいなぁ。</description>
    </item>
    
    <item>
      <title>週末</title>
      <link>https://hugo.suwa3.me/post/2020-05-31-lets-encrypt_%E7%92%B0%E5%A2%83/</link>
      <pubDate>Sun, 31 May 2020 13:00:13 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-31-lets-encrypt_%E7%92%B0%E5%A2%83/</guid>
      <description>wordpress移行タスク - [ ] GoでMarkdown形式出力プログラム書く
- [ ] フロントはReact製静的ファイルジェネレータ検討
- [ ] 記事は全てgit管理に移行
- [ ] JQueryで改造している部分はGitHubActionsに移行
移行タスクのGoでMarkdown形式出力プログラム書く ために
WordPressのデータ構造を把握して
必要なデータを選定する作業しました。
WordPressデータ構造 土曜日はひたすらWordPressのデータ構造とにらめっっこしていました。
データベース構造 - WordPress Codex 日本語版
ふだんクエリを直接叩いてCLIで確認することが多くて
あまりクライアントを使ったことがなかったので
Sequel Proでポチポチ見てみるのをやりました。
ついでにQiitaも書いた。
Sequel Pro リモートDBへのSSH接続 - Qiita
どのテーブルの、どのカラムが必要かなぁだとか
関連性などを見て控えておく作業です。
マルコフ連鎖でblog自動生成や
データ分析いれて解析するネタに使えそうなので
データ自体はGitHubのPrivateRepositoryに保管しておきたい。
あとはGoでMySQLに接続する方法を、調べて書いてふむふむしました。
日曜日は悪夢を3連続でみて朝からメンタルがやられたため
日中はソファで横になって天井を見ながら泣いていました。
夕方頃から、トランポリンしていたら元気が戻ってきました。
トランポリン以外何もせずに日曜日が終わりそうで
不安で、居ても立っても居られなくなったので
夜から作業をしました。
Let&amp;rsquo;s Encrypt_環境 ここのblogの証明書が切れて
ずっと
Error: couldn&amp;#39;t get currently installed version for /opt/eff.org/certbot/venv/bin/letsencrypt: Traceback (most recent call last): File &amp;#34;/opt/eff.org/certbot/venv/bin/letsencrypt&amp;#34;, line 7, in &amp;lt;module&amp;gt; from certbot.</description>
    </item>
    
    <item>
      <title>爆発</title>
      <link>https://hugo.suwa3.me/post/2020-05-28-%E7%88%86%E7%99%BA/</link>
      <pubDate>Thu, 28 May 2020 13:00:21 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-28-%E7%88%86%E7%99%BA/</guid>
      <description>今日は爆発していました。
芸術は爆発だけれど
わたしも今日は何かが爆発して
Qiita記事がたくさん生まれました。
Django GirlsチュートリアルでつくったものでDockerfile作成 - Qiita
以前、Djangoでblogを作成して
それをDocker上で動かしたかったので、Docker化した記事です。
簡易的なOS自作 - Qiita
簡単なOSを自作したときの記事です。
勉強になったので、費用対効果が大きく良かったと思う。
セルフ盗聴 - Qiita
暗号化していないWifi環境下でhttpリクエストを送って
フォームの中身を覗き見しました。
Emacs内部でshellを複数起動する - Qiita
初のEmacs記事👏
以前「Emacsユーザーはただのカッコつけ」と上司に言われて(たぶん悪気なく)
隠れEmacsユーザーしていましたが、今後はカスタマイズした内容を
少しずつアウトプットしていこうかなぁと思いました。
eksctl でクラスター作成して Fargate 利用し ALB Ingress Controller デプロイまで - Qiita
長編大作過ぎて、日の目を見ずに終わるかもしれないと思っていました。
ある勉強会で、登壇者の方と話した際に
「Fargateを使ったEKSの記事は、かなり需要があるし是非書いて欲しい」
と言葉を掛けて頂いて、その言葉を動力に書ききった感じです。
今日はQiitaの神様が降臨したの。
楽しかったです。
最近おもうのが
「こんなの絶対わからない」
って内容でも、がんばって根気よく食いついて
上から一つ一つ調べていって
寝て起きてまた考えると、昨日より少し理解できているの。
寝るだけで、次の日に
「なんか昨日より分かるぞ」
ってなるの、人間ってすごいなぁと思う。
脳内自動整理機能の存在、忘れがちなんだけど
たまに思い出しては、睡眠って不思議だな~~
って思います。</description>
    </item>
    
    <item>
      <title>体調とk8sとデータ移行</title>
      <link>https://hugo.suwa3.me/post/2020-05-27-%E4%BD%93%E8%AA%BF%E3%81%A8k8s%E3%81%A8%E3%83%87%E3%83%BC%E3%82%BF%E7%A7%BB%E8%A1%8C/</link>
      <pubDate>Wed, 27 May 2020 13:00:31 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-27-%E4%BD%93%E8%AA%BF%E3%81%A8k8s%E3%81%A8%E3%83%87%E3%83%BC%E3%82%BF%E7%A7%BB%E8%A1%8C/</guid>
      <description>体調不良 日中はダルかったので横になって過ごして
午後には熱も出てきたので、ひたすら寝るに徹しました。
夜には寝過ぎ(？)で頭痛がしてきたので頓服薬を飲んだよ。
なんかメンタル弱っているのかなぁと思ったら
後半から本気の体調不良で笑った(笑えない)。フィジカルとメンタルの連動だなぁ。
疲れていると、どちらも低空飛行になる。
結構、疲れに鈍感で気づかないうちに無理をしていることが多い気がする。
気づいたら受け身をとりつつ、早めに転んでサッと立ち上がれるようになりたいなと思いました。
特に平日転ぶのは出来る限り避けたい。。
ひたすら眠り続けたらビックリするぐらい元気になったので
明日から頑張るぞい💪
Kubernetes Meetup Tokyo 夜にオンラインイベントの視聴をしました。
https://www.youtube.com/watch?v=AJhd7P4IPSQ&amp;amp;feature=youtu.be
以下、感想というか雑なメモです。
入門！ClusterAPI 〜k8sクラスターもk8s APIで管理したい ClusterAPIはkubeadmとは別レイヤー
k8sでk8sをマネジメントするイメージ
EKSなどは内部で何が動いているか分からりづらいけれど
ClusterAPIであれば中身が分かりやすいので勉強にはなりそう
ペパボ k8s on OpenStack
Helmfile: Superchage your deployment pipeline helmを使ったことがないのであまりしっくりこない
localのkubeでも使えるからちょっと触ってみる
kustomizeも触る
WordPressデータ移行 ここのWordPressのデータを引っ越そうと思っていて
blogデータはEC2上のMySQLに格納されているので
データの整形は結構自由にできる前提で
サーバーサイドはGo,フロントはReact,データはMySQL格納
Goの練習がてらblogをつくる
フロントはReactを検討中
記事データは整形してMySQLに移行
→大変だけど自由度は高い GoはMarkdown形式で出力用,静的サイト,データはgit管理
Goの練習がてらMarkdown形式で出力するプログラムを書く
フロントはReact製静的ファイルジェネレータなどを検討中
記事は全てgit管理に移行
→管理が1よりかラク、自由度はまあまあ wordpress.com(WPのホスティングサービス)を利用する
→経験あるのでラク、自由度は低い できれば1が勉強になるし良いよなぁって感じです。
結構、JQueryなどで改造している部分もあるので
出来ればホスティングサービスは避けたい。
あれは課金しないとJS使えないので。。
懸念点は画像データの移行です。
画像データ別にそこまで重要でもないかもだけれど。
一応調べるけれど、捨ててもOKな方向で考えています。
女友達が
「suwaさんに肯定されると『あ、こう考えても良いんだ』と思えるから、わたしは弱い」
と話していて、わたしはただ会話の場で(これ以上は言及しないほうが無難だな)というボーダーライン以上について話をしないというだけで
内心「一般的には、正しくないかもしれない事を考えている」という自覚がある以上
Publicな場で、深く内心をさらさない私のほうがずっと臆病なんだけどなぁと思いました。
彼女の場合は、その正しさの基準に自信がないことに弱さを感じているのだろうけれど
自信がない状態で外に出せることが、わたしにとっては強さだなぁと思う。
彼女は美しいものを見つけて、それを言葉で表現するのがとても秀でていると感じる。
発する言葉自体が好きです。ひたむきに内面と向き合っている姿勢を尊敬する。</description>
    </item>
    
    <item>
      <title>不安定</title>
      <link>https://hugo.suwa3.me/post/2020-05-26-%E4%B8%8D%E5%AE%89%E5%AE%9A/</link>
      <pubDate>Tue, 26 May 2020 04:00:01 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-26-%E4%B8%8D%E5%AE%89%E5%AE%9A/</guid>
      <description>最近はささいなことに動揺して泣いてしまう。
不安定さが酷くて
アップダウンが激しい気がする。
理由が分からないのがツラい
理由らしい理由はあるけれど、後付けの理由な気もする
たぶん何があろうと動揺はするんだろうなぁと思う。
本当なら、今日も仕事を休んで横になっていた方が良かったんだろうなと反省している。
明日もこんな感じなら、無理せず休む。
特に午前中から昼頃にかけては普通に体を起こしているだけでダルい。</description>
    </item>
    
    <item>
      <title>なぜMastodonなのか</title>
      <link>https://hugo.suwa3.me/post/2020-05-25-%E3%81%AA%E3%81%9Cmastodon%E3%81%AA%E3%81%AE%E3%81%8B/</link>
      <pubDate>Mon, 25 May 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-25-%E3%81%AA%E3%81%9Cmastodon%E3%81%AA%E3%81%AE%E3%81%8B/</guid>
      <description>mstdn.jp終了のお知らせ 公式アカウントから「jp終了のお知らせ」(ガチ)が発表されました。
https://mstdn.jp/@mstdn_jp/104227467367414869
適切な対応ができないため
となっておりますが、雑な個人の予想では運営側に金銭的なメリットがなさ過ぎたのではないかなぁと・・
Mastodonのサーバー運営、収益化しづらいので。
「jp閉鎖だってね、Twitterに戻るの？」
と聞かれたので、声を大にして言いたいのだけれど
MastodonとTwitterは全く別物です！
そもそもjpは数あるMastodonサーバーの一つであって
jpの閉鎖は事件だけれども、Mastodon自体がなくなることは無いです。
Mastodonは分散型という構造の特徴ゆえ
Twitterのようにトゥート(ツイート)が炎上しづらくて
PublicよりもPrivate寄りな
他人行儀な外ヅラの会話ではなく、本音に近いウェットな会話を
発言ひとつひとつをカスタマイズ可能な公開範囲で投稿することができるの。
TwitterはTwitter社が決めたただ一つのルールに縛られているけれども
Mastodonはサーバー管理者がルールを決めて運用していて
ユーザーは、自分の好きなサーバーを選ぶことができる。
「こんなことを発言したら炎上(引かれて)しまうかも」
だとかを考えて
予防線を張る必要が無いのは
Mastodonの居心地の良さだなぁと思います。
MastodonとTwitterが別物なのは
構造単体の差異だけではなく、構造の差異ゆえの情報伝播の違いが
全体の雰囲気に影響しているためだと思う。
don.suwa3.meの再稼働 過去あったニコフレのように、後継が爆誕するか
委譲先が見つかるなどすれば存続の可能性もあるけれども
どちらにせよ方向性が決まるまでの間はjp難民が色々なサーバーに分散しそう。
他鯖の負担軽減のために、微力ながら自鯖を避難用に再稼働しました。
新基盤への移行中だったので
取り急ぎ、旧基盤Dockerでの稼働だよ。
就業後にガッと勢いでやりました。
最近ずっとApache × MySQL on CentOSの環境を触ることが多くて
Nginx × PostgreSQL on Ubuntuの環境は久しぶりだったので
コマンド思い出しつつだったけれども、最初の頃に比べたら慣れたなぁって感想です。(むしろ慣れなきゃマズイ・・)
WordPressとMastodonサーバー (新旧2台)
EC2を3台稼働していて、さすがに欲張り過ぎなので
WordPressの引っ越しと、Mastodon新基盤への移行が急務になりました。
わたしはのんびり過ぎなので、お尻に火がついて丁度良いかも・・
楽しみながら取り組みたいです🙌
がんばるぞい💪
作業ログ **旧基盤でやったこと
**- EC2の再起動
- アクセスログのCheck
- Route53の設定
- 証明書の発行
- メンテナンスモードからの切り替え (Nginxの再起動)
- Sidekiqの監視
- ディスク容量の確認
$ df -H</description>
    </item>
    
    <item>
      <title>練習</title>
      <link>https://hugo.suwa3.me/post/2020-05-24-%E7%B7%B4%E7%BF%92/</link>
      <pubDate>Sun, 24 May 2020 13:00:55 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-24-%E7%B7%B4%E7%BF%92/</guid>
      <description>今日はGoを書く練習していました。
まずはEmacsにgo-modeをインストールした。
EchoでWebサーバーを起動させたら
入力フォームを作成して、リクエストパラメータの取得をさせてみたよ。
なんかよくわからないところは音読しました。
Echo独自ルール的なところが分かりづらいのかなぁ。
GitHubに草を生やせたので満足です。
後はセッションデータストアを作るために
認証機構についてふむふむした。
セッションの作成/保存/読み出し/削除をできるようにする。
コツコツジリジリとでも、毎日前進するのが大事なので
この調子で続けていきたいです。</description>
    </item>
    
    <item>
      <title>個人開発</title>
      <link>https://hugo.suwa3.me/post/2020-05-23-2814/</link>
      <pubDate>Sat, 23 May 2020 13:00:43 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-23-2814/</guid>
      <description>病院へ行ったり、数カ月ぶりに美容院へ行ったりしました。
美容院の雑談でセキュリティの話をしたけれども
何でこんなつまらん話をしてしまったのか
もっと一般ウケする話しなきゃと少し落ち込みました。
夕方から作業したの。
昨夜と今朝はまあまあメンタルが落ちていたのに
集中して作業したら時間が一瞬で過ぎた上に
気分も良くなったの、人体の不思議だなぁって気持ちです。
雑音が少ない休日のほうが10倍捗るし
作業が捗ると精神的にかなりプラスに働くことが分かった。
Webサービスの構築と運用が昨年のテーマで
今年のテーマは『ハッカソン慣れする』だったのだけれど
ハッカソンはしばらく参加が難しそうなので
テーマを『個人開発』に変更しようと思いました。
もうあと半年だけれども・・・
Goで何かWebアプリケーションを開発してみたい
分散型SNSを自分でつくってみるのが面白そう
まずはログイン画面作成からスタートだなぁ
ミニブログをつくったら
Goで書かれたTwitter cloneなどのソースを読んでみる
マストドンのDBはPostgreSQLだけれども
わたしはMySQLでつくりたいので、スキーマを見てみる
同じクライアントを使えるようにしたいので
Goでマストドン cloneを書いてみる感じになりそう
これから少しづつ進めていけたらなと思います。</description>
    </item>
    
    <item>
      <title>ざわつき</title>
      <link>https://hugo.suwa3.me/post/2020-05-21-%E3%81%96%E3%82%8F%E3%81%A4%E3%81%8D/</link>
      <pubDate>Thu, 21 May 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-21-%E3%81%96%E3%82%8F%E3%81%A4%E3%81%8D/</guid>
      <description>もうずっと心がざわついていてしんどかったです。
最近ざわつくこと多いな？
お仕事もなかなか進められなくて、夜になって心が落ちつくのを待つ感じだった。
もっと周りにヘルプを出したほうが良いのか
しかし心がしんどい以外に何がなんなのか分からないし
集中できそうと思ったタイミングで邪魔が入ったり
やることは分かっているのに手が動かなかったり
そんな時もあって頭がまとまらないなぁって感じなので
やっぱり粛々と向き合うしかない気もする。
オフィス通勤できるようになったらマシになるのだろうか。
外に出られなくて気が狂いそう。
休日は勉強会に行って、知識をまとめて整理して
もしくは資料を準備して発表して
その後はカフェに寄って実際に手を動かして記事にして・・
という一連のルーチンができないのツラい。
外に出られないのがストレス過ぎて頭がやられそう~~
ベランダで本気ダッシュしていたら足の裏をやけどしたの。
こんなにも引きこもるのが向かない性格だと思っていなかったので驚いている。</description>
    </item>
    
    <item>
      <title>ラズパイとElasticsearchなど</title>
      <link>https://hugo.suwa3.me/post/2020-05-18-%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4%E3%81%A8elasticsearch%E3%81%AA%E3%81%A9/</link>
      <pubDate>Mon, 18 May 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-18-%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4%E3%81%A8elasticsearch%E3%81%AA%E3%81%A9/</guid>
      <description>ラズパイがひたすら起動画面なので
シングルユーザーモードに切り替えてログインしてみようと思います。
Macbook Airに
- Raspbian入りSDをマシンに認識させてcmdline.txt を編集
- 起動オプションの末尾に init=/bin/sh を加える
- 編集前のファイルはバックアップとる
- RasPiに挿入してシングルユーザーモードで起動
-rwxrwxrwx 1 suwa staff 179 4 8 13:29 cmdline.txt 権限は足りているはずなのにRead Onlyなの。
SDカードのROCKは壊してあるから制限かからないはずだし
sudo vi で編集画面を開いたんだけどなあ。
本当は/var/logを確認したかったのだけれども。
｢休みの日もめっちゃ勉強してますよね｣
って言われた。
やっているように見せかけて
実際の稼働時間は長くないし質もそこまで高くないという・・
日中なかなか仕事が捗らないから
その代わり、夜に作業するのだけれども
そうすると、いままで新規の技術習得に充てていた時間がごっそりなくなるの。
早くオフィス勤務か、最寄りのカフェなどで作業したい。
自宅だと集中するの難しいなぁ。
お仕事は、作業ログに
「わからん」「意味不」「全体的に何言ってるか分かんないです」
と書きながらセットアップする作業しました
明日調べる〜〜〜
Docker上でElasticsearchを検証するの満足したら
Goで書いたAPIサーバーと連携させたい。
ElasticsearchのAPI仕様からGoのコードを自動生成するジェネレーター見つけた。参考にできるかな？
https://github.com/olivere/elastic/tree/generate-api/generator
鯖缶工場というDiscordサーバーに参加しました。
分散SNSの構築とサーバー管理について、サポートを目的としたコミュニティです。
ずっとdocker-compose上でMastodonの本番運用をしていたのだけれども
EC2インスタンス上にリプレイスして、動作確認は済んでいて
あとはメディアストレージ(S3)の設定、というところまで進んだので
そろそろ再稼働させたいし、開発コミュニティにどんどん参加していこうと思ったの。
Dockerを使っての構築や、PostgreSQLやMastodonのバージョン縛りでの構築。
バージョン追従など、色々と経験させてもらったので
今後はコミュニティに参加しながらサポート側も経験できたら良いなぁという気持ちです。
Mastodon内でもElasticsearch機能は実装されているので
慣れてきたら触ってみたいなぁ。</description>
    </item>
    
    <item>
      <title>反省</title>
      <link>https://hugo.suwa3.me/post/2020-05-16-%E5%8F%8D%E7%9C%81/</link>
      <pubDate>Sat, 16 May 2020 04:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-16-%E5%8F%8D%E7%9C%81/</guid>
      <description>不正ログインの踏み台にされた時間帯は分かっているので
手持ちサーバーひとつひとつログインして
timezone見つつaccess_logからgrepする作業したよ
やらかし集〜シャレにならないシリーズ〜
だよ😢
人に話すと
「まあ、あることだよ。狙われたら防ぎようがないし」
と、みんな言ってくれるのだけれども
『狙われたら防ぎようがない(から、仕方ない)』
というのは
セキュリティをできる限りの範囲でも万全にしている人が言えるセリフであって
WordPressのバージョンを上げるのをサボっていたし
(今は最新にした)
ラズパイはPortの変更やユーザーの作成はしたけれども
パスワード認証のままだったし
アクセスログの監視なども怠っていて心当たりが有り過ぎるので
反省しています。。
あとは無線LANのセキュリティ設定の見直しをする。
可能性をひとつひとつ整理して潰していきます。
ログだとかの証拠になりそうなものは消されていそうだけれども
せめて責任を果たす意味で、今週末はその作業にあてます。
しんどい
ラズパイ4を起動させたら、ひたすらkubeletのログを吐き出し続けているし
とにかく熱い。
ヒートシンクの上にカイコの文鎮を乗せていたけれど
あまりにも熱いのでファン回した。
セキュリティやバージョンの管理だとか考えると
自分で面倒を見ることができるサーバーの数は、クラウドオンプレ含めて
2つが限度かなぁ。乗せるサービスにもよるけれども。
継続した稼働が必要ないのであれば
その都度落とすのが正解かもしれない。
基本的に検証はDockerで行って
サーバーの稼働は、やむを得ない事情があるときだけにしよう。</description>
    </item>
    
    <item>
      <title>今日のしんどかったことList</title>
      <link>https://hugo.suwa3.me/post/2020-05-15-%E4%BB%8A%E6%97%A5%E3%81%AE%E3%81%97%E3%82%93%E3%81%A9%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8list/</link>
      <pubDate>Fri, 15 May 2020 10:00:33 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-15-%E4%BB%8A%E6%97%A5%E3%81%AE%E3%81%97%E3%82%93%E3%81%A9%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8list/</guid>
      <description>今日のしんどかったことList
ホスティングしているblogのDBがすぐ接続エラー起こす ラズパイが不正ログインの踏み台にされた疑惑が浮上 1日ずっとテンションがおかしくて落ち着かない 上司が社内SNSに空気嫁とか書く 寝起きから普通に土曜日だと思いこんでいてMTGすっぽかしてしまった
なんだか今日ずっとテンションがおかしくて心がざわついていたの
些細なことにﾋﾟｭｰｲとなる謎センシティブマンだった
謎センシティブマン、全然センシティブじゃなさそう
反省することが多すぎて心が受け止めきれないdeath
昨夜は、このblogのデータが飛ぶのでは・・
って気持ちに押しつぶされそうになりながら復旧作業した
そもそもデータが飛んだら泣くような内容を自分でホスティングするの
ただのドMでは？？
ログ可視化したいしアラート設定して監視したいし
なんなら機械学習でパターン分析したい
むしろ、飛んだら泣くくらいのデータの方が本気でやるからこのまま頑張ろう
DB接続エラーするって話したら
メモリでしょ？って一言で片付けられた〜
全つらみの80%くらいを他人にぶん投げたい気持ちで生きています
メモリ確認して、原因究明する😢
昨日はこっそりお夜食たべたの
たこ焼きとカップヌードルです。
これ食べたら翌日寝ぼけて寝坊したから、もう二度とお夜食しない。</description>
    </item>
    
    <item>
      <title>Error establishing a database connection</title>
      <link>https://hugo.suwa3.me/post/2020-05-14-error-establishing-a-database-connection/</link>
      <pubDate>Thu, 14 May 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-14-error-establishing-a-database-connection/</guid>
      <description>コマンド一覧
$ ssh wp $ sudo su - $ tar cvJf wp.suwa3.me-backup-mysql-20200515.tar.xz /var/lib/mysql $ mv /root/wp.suwa3.me-backup-mysql-20200515.tar.xz /home/ec2-user/ $ chown ec2-user /home/ec2-user/wp.suwa3.me-backup-mysql-20200515.tar.xz # ローカルへ移動 $ scp wp:/home/ec2-user/wp.suwa3.me-backup-mysql-20200515.tar.xz ~/tmp/ # wpサーバーへ移動 $ service mysqld restart blog 開こうとしたらこれです(ゲンナリ)
なんか前にもあったぞ。。
これ前にもあって、対処方法と原因究明した作業ログを blog にまとめたのに
DB の接続エラーのときは、その情報を見れなくない・・？ってなりました。
自分でホスティングしているシステムがエラーで動かなくなった場合、仕事の予行演習だと思って取り組むがモットーなので、対処方法を作業ログとして残します！
(だいたい再起動すれば動くことが多いですが)基本的にDB再起動は最終手段で、データの保全を最優先して情報収集に努めます。
環境 Amazon Linux LAMP構成 WordPress ■ MySQL の接続エラー対処 $ ps -ef | grep mysql ec2-user 14969 14947 0 12:07 pts/1 00:00:00 grep --color=auto mysql ない
# tail -n 100 /var/log/mysqld.</description>
    </item>
    
    <item>
      <title>証明書_cryptographyいれる作業ログ</title>
      <link>https://hugo.suwa3.me/post/2020-05-13-%E8%A8%BC%E6%98%8E%E6%9B%B8_cryptography%E3%81%84%E3%82%8C%E3%82%8B%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0/</link>
      <pubDate>Wed, 13 May 2020 13:00:56 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-13-%E8%A8%BC%E6%98%8E%E6%9B%B8_cryptography%E3%81%84%E3%82%8C%E3%82%8B%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0/</guid>
      <description># cat /etc/cron.d/certbot-renew 0 0 11 * * certbot-auto renew # date Wed May 13 14:01:27 UTC 2020 cd /var/log/ # grep &amp;#39;renew&amp;#39; cron May 10 14:07:01 ip-172-31-32-207 crond[2663]: (*system*) RELOAD (/etc/cron.d/certbot-renew) May 10 14:07:01 ip-172-31-32-207 crond[2663]: (CRON) bad username (/etc/cron.d/certbot-renew) ＿人人人人人人人人＿
＞　bad username ＜
￣Y^Y^Y^Y^Y^Y^Y^Y^￣
書き換えた
# cat /etc/cron.d/certbot-renew 0 0 14 * * root certbot-auto renew そもそもcertbot-auto はいってる・・？
# certbot-auto --help Error: couldn&amp;#39;t get currently installed version for /opt/eff.</description>
    </item>
    
    <item>
      <title>memo</title>
      <link>https://hugo.suwa3.me/post/2020-05-12-memo/</link>
      <pubDate>Tue, 12 May 2020 13:00:33 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-12-memo/</guid>
      <description>ブラウザでabc とerrorメッセージが表示されたら
ソースのある場所から
grep &#39;abc&#39; -R . で、その文字列を誰が出しているのか探す。
証明書cronが効いていなかった〜〜
Timezoneの確認をして明日また試す。</description>
    </item>
    
    <item>
      <title>覚醒</title>
      <link>https://hugo.suwa3.me/post/2020-05-11-%E8%A6%9A%E9%86%92/</link>
      <pubDate>Mon, 11 May 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-11-%E8%A6%9A%E9%86%92/</guid>
      <description>午前中ぜんぜん頭が働かない人間なのだけれども
頑張らねばって気だけ張っていたら
夕方頃にはもう限界を迎えたので、開き直って休んで
夜に覚醒した。おしごと進めた。
最近、夜になると調子いいの。
なんだか夜遅くに作業するの罪悪感なのだけれども
夕方には休憩して、夜に作業するほうが集中できる
夜行性したい
つくったの
キャタピーすき
細かな作業すき〜
ドットと緑の組み合わせがツボだなぁ</description>
    </item>
    
    <item>
      <title>今日やること</title>
      <link>https://hugo.suwa3.me/post/2020-05-10-%E4%BB%8A%E6%97%A5%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8/</link>
      <pubDate>Sun, 10 May 2020 13:00:32 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-10-%E4%BB%8A%E6%97%A5%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8/</guid>
      <description>今日といっても、あと2時間くらいしかない。
Let&amp;rsquo;s Encryptからメールがきて
ここの証明書が30日に切れるから、自動で更新するようにしておきましょうね。
とのこと。
2ヶ月おきに更新するように設定したのだけれども
1ヶ月おき更新に設定し直します。
証明書crontab 遺言
Amazon Linux AMIでLet’s Encryptの証明書設定 – Even a rabbit can understand
下記のように書きなおしました！
# cat /etc/cron.d/certbot-renew 0 0 11 * * certbot-auto renew お天気 たまに元サイトのサーバーが安定しなくて表示されないんだよねえ・・
気象系のAPIからデータ取得して、こっちで整形したほうが安定しそう。
https://openweathermap.org/api
具体的にはこうしたい。
AWSで閉じるなら
必要なデータをLambdaで取得して
(日付,曜日,東京の天気,東京の最高気温,東京の最低気温)
JSONをS3にアップロード
そのJSONを可視化するフロントエンドを書く。
GCPに移行することを考えると
cronでPython実行させてApache挟んで都度取得したものを表示させる、かなあ。
勉強になるのはLambdaとS3の組み合わせなんだけど
GCPに移行したいしなぁ。
両方やってみようかな。</description>
    </item>
    
    <item>
      <title>作業メモ</title>
      <link>https://hugo.suwa3.me/post/2020-05-09-%E4%BD%9C%E6%A5%AD%E3%83%A1%E3%83%A2/</link>
      <pubDate>Sat, 09 May 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-09-%E4%BD%9C%E6%A5%AD%E3%83%A1%E3%83%A2/</guid>
      <description>Elasticsearch Dockerで起動
Getting started with Elasticsearch | Elasticsearch Reference [7.3] | Elastic
初めてのElasticsearch with Docker - Qiita ローカルk8sクラスターに組み込む MySQL ログ解析
【オンライン】ログ分析勉強会 - YouTube
↑実際に触る、検証環境Dockerでたてる。 GCP LAMP WP引っ越し どんすわ(SNS) S3(wasabi)の設定 データ分析&amp;amp;ログ解析の可視化 CSS Neumorphismデザインやりたい 今日はElasticsearch with Dockerをやりました。
深夜に急にやる気がわいてきて着手したので
ちょっと中途半端なところまでしか進んでいませんが
コンテナ稼働させて色々みてみるのはやった。
Dockerfileとdocker-compose.yml書いて
起動させてcurlでGETしたら
$ curl -X GET &amp;#34;localhost:9200/_cat/health?v&amp;amp;pretty&amp;#34; curl: (52) Empty reply from server ってなったの、nginxコンテナでリバースプロキシ噛ませる必要あるんか？？
と思ったら、Elasticsearchの起動に時間がかかっているだけでした。
少し時間をおいて再度試したらできた。
明日つづきやりたいです。
あと無線ルーターを購入して設定済ませたので
ラズパイのOS焼き直し＆セットアップしたいです。
これはサッとやれそうなのでさっさとやる。
作業環境の写真を撮ったので載せるよ。
左にあるのはカイコの文鎮です。お気に入り。</description>
    </item>
    
    <item>
      <title>良い感じ</title>
      <link>https://hugo.suwa3.me/post/2020-05-07-%E8%89%AF%E3%81%84%E6%84%9F%E3%81%98/</link>
      <pubDate>Thu, 07 May 2020 09:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-07-%E8%89%AF%E3%81%84%E6%84%9F%E3%81%98/</guid>
      <description>目の調子、良い感じです。
今日からアクセル全開でいきたい。
Docker上に検証環境を構築して
Elasticsearchを実際に触ってみる MySQLのログ解析してチューニングしてみる コンテナでサッと検証環境を構築することに慣れたい。
学びたいことを絞って軽やかに学んでいく。
GCPにさわる 単語を押さえつつ知識習得。
例えばAWSであればS3などのサービス名は、ある程度把握しているけれども
GCPについては何も知らないので、あくまで触りつつ最低限身につけるイメージ。
上記3つについては今週末に済ませる。
Dockerの構築手順から、学ぶ観点等を随時記事にまとめる。
来週以降は
Elasticsearchをローカルk8sクラスターに組み込む ホスティングしているSNSの世話 (S3の設定) ↑データ分析&amp;amp;ログ解析の可視化 GWに何もできなかったし、ゲームにも飽きてしまったので集中できそう。
は〜〜〜やりたいこと100個くらいある気がする。
ひとつひとつ潰して、塵を積もらせるよ。
わーいアクセル💪</description>
    </item>
    
    <item>
      <title>最終日</title>
      <link>https://hugo.suwa3.me/post/2020-05-06-%E6%9C%80%E7%B5%82%E6%97%A5/</link>
      <pubDate>Wed, 06 May 2020 06:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-05-06-%E6%9C%80%E7%B5%82%E6%97%A5/</guid>
      <description>GW最終日です。
文字サイズを125％表示にしながらblogを書いているけれど
少し視界が霞む感じ。これでもかなり改善された。
結局、GWは目の不調でほぼ寝たきりだったので
最後に悪あがきをするか、明日の仕事に備えて眠るかで迷って
無理せず休むことにしました。
勉強は平日の夜にもできるもんね。
本調子ではないときに無理して続けるものでもないだろうし。
今日はポッドキャストを聴いてみようと思います。
Tech系情報を得るならおさえておきたい日本語Podcast11番組まとめ
TechFeedなんかで収集した記事を
読み上げ機能を使って流し聴きするのも試したけれども
合成音声に慣れるまでは聞きとるの大変そう。</description>
    </item>
    
    <item>
      <title>どうぶつの森</title>
      <link>https://hugo.suwa3.me/post/2020-04-21-%E3%81%A9%E3%81%86%E3%81%B6%E3%81%A4%E3%81%AE%E6%A3%AE/</link>
      <pubDate>Tue, 21 Apr 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-21-%E3%81%A9%E3%81%86%E3%81%B6%E3%81%A4%E3%81%AE%E6%A3%AE/</guid>
      <description>ついに無人島へ移住してしまった。
ゲームをしながら
「一人で黙々とやりたいことをやりたいのに、知らんタヌキがやたら絡んでくる・・・」
と、序盤は苦しかったけれども途中から慣れました。
ゲームの中ですら一人になりたいの、結構末期症状かもしれない。
一人時間が確保されていないとしんどい。
もう少し頑張れば、タヌキや他住民と関わることなく生活が送れそうなので楽しみ。
住む場所の理想は『椿姫』に出てくるマルグリットが駆け落ちした、湖畔に建つアルマンの別荘がイメージとして近いの。地名を調べたら「ブージヴァル」とのことだった。一人でひっそり暮らしたい。
タヌキの巣のそばは、きちんと街並みをつくりたい。
島の奥の方に街との対比で森をつくって、その中にある小さな湖のそばに家を建てたい。
子どもの頃から湖畔に住むイメージはあって、理想のすみかだった。
湿った暗い森の中に湖があり、そばには二階建ての小さな家が佇んでいて
ボートや庭はなく、湖のほとりに椅子があるの。
なにか小説のなかから生まれたイメージなのだろうけれど
10代の頃には確固たるイメージとしてあったなぁ。
「頭上に見えない空間があって、そこはわたしが一人になりたいときに逃げ込める部屋である」
という自分の中だけの設定があったけれども、それが変化してその湖畔になったように思う。</description>
    </item>
    
    <item>
      <title>emacs</title>
      <link>https://hugo.suwa3.me/post/2020-04-17-emacs/</link>
      <pubDate>Fri, 17 Apr 2020 13:00:06 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-17-emacs/</guid>
      <description>とりあえず動画みてみる
https://github.com/nashamri/spacemacs-theme
ここ参考にテーマのカスタマイズするの😊
ファイル操作しかできないエディタから脱却する</description>
    </item>
    
    <item>
      <title>PHP</title>
      <link>https://hugo.suwa3.me/post/2020-04-15-php/</link>
      <pubDate>Wed, 15 Apr 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-15-php/</guid>
      <description>とりあえずインフラの目線でざっくりと理想のことは考えられるけれど
じゃあ具体的にどう詰めていくかの段階になったら
現状のソースコードを読めなければ、現状を理解できなければ話にならないなと思ったので
PHPを学ぶことに決めました。
今夜は基礎をざっくりやって
明日はPHPで簡易的なWebアプリケーションを自作＆SQLの知識をつけたら
実際のソースコードに触れるために、まずはローカルにてブランチを切って独立したDocker環境を構築して、ローカルのDBに繋ぐよう設定する。
1. local (docker-compose) にmysqlを準備する
2. local (docker-compose) のmysql にテスト用のDBを作成する
3. 開発用DBのdumpをlocal (docker-compose) のmysql に入れる
4. localのアプリケーションをlocal (docker-compose) のmysqlにつなげる
5. 開発する
実際に業務でやりとりされている内容を追いつつ、Docker上でソースをガンガンいじってみようと思いました。</description>
    </item>
    
    <item>
      <title>環境</title>
      <link>https://hugo.suwa3.me/post/2020-04-13-%E7%92%B0%E5%A2%83/</link>
      <pubDate>Mon, 13 Apr 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-13-%E7%92%B0%E5%A2%83/</guid>
      <description>いまの作業場所です。
いい感じでしょ😃
モニターを一つ潰してホワイトボードを置いた。
type-CのHDMI変換コネクタを買ってMacBookとモニターを接続出来るようにしたし
ラズパイはリモート接続設定してモニター不要になったので
だいぶ環境が整ってきたの。
PATH_メモ $ cat .envrc export GO111MODULE=on export GOPATH=$(pwd) export PATH=$GOPATH/bin ↑これだとうまくいかず
↓これだと成功した
export PATH=$GOPATH/bin:$PATH source .encrc 1.環境変数PATHに設定されている文字列 /Users/suwa3/mysource/bin:/bin:/sbin:/usr/bin を取得する
2. 取得した文字列を区切り文字 ; で分割してリストにする
/Users/suwa3/mysource/bin /bin /sbin /usr/bin 3. 分割して得たリストに指定されているディレクトリから実行可能なファイルを探す
4. あったら実行する、無ければエラーする
終了コード_メモ 終了コードが0なら正常終了、0以外なら異常終了
というルールがある。
このルールがPOSIXにあるルールなのか、暗黙の了解なのかは調べないとわからない。
こちらは正常終了
$ ls /tmp/ com.apple.launchd.2u2r2J7cOA com.apple.launchd.4jyRCGR8DP powerlog com.apple.launchd.3S4jl2UxzI com.google.Keystone $ echo $? 0 こちらは異常終了（/no-directoryというディレクトリは存在しない）
$ ls /no-directory ls: /no-directory: No such file or directory $ echo $? 1 echo $?</description>
    </item>
    
    <item>
      <title>距離</title>
      <link>https://hugo.suwa3.me/post/2020-04-12-%E8%B7%9D%E9%9B%A2/</link>
      <pubDate>Sun, 12 Apr 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-12-%E8%B7%9D%E9%9B%A2/</guid>
      <description>前回のblogはBGMを指定してみたけれども
結構エモさが増すなぁと感じたので、今後もたまに取り入れたい。
小説に挿絵はあるけれども
挿し曲ってあまりないよねえ。
以前読んだ小説には、物語の中でジャズやロックを流していて
それはタクシー内で流れるラジオだったり、部屋にあるレコードだったりして
そのメロディが暗喩的に心情描写をしているような表現がつかわれていた。
距離感だとか、甘えだとか
少し近づきすぎたのかもしれないなぁと考えていたの。
気をつけないといけない。
新年度になって
「わたしは、もうインフラエンジニアではなくなってしまうのかなぁ」
なんて考えていた。
でも正直、業務じゃないプライベートは自鯖で好き放題できていて
先が見えない不安はありつつも、それはずっとじゃないだろうし
受け入れていきたいと思いました。</description>
    </item>
    
    <item>
      <title>整理</title>
      <link>https://hugo.suwa3.me/post/2020-04-07-%E6%95%B4%E7%90%86/</link>
      <pubDate>Tue, 07 Apr 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-07-%E6%95%B4%E7%90%86/</guid>
      <description>今日は朝からだるくて
夕方以降、頭痛薬で少し回復したので
Emacs Lispのカスタマイズしながら泣きました。
「わかった！」の達成感を得る瞬間が少なすぎてつらい。
あとEmacsに腹が立ったら殴る用のEmacsクッションが欲しい。
その後はGoでcatコマンドのmycat.goを作成して
なんでこれでcatできるのか分からなくて泣きました。
そもそも関数が何なのか納得できなくて
もう何百回と勉強しているはずなのに未だに分からないの。
何が分からないのか謎だったのだけれども
メモリのうえで関数がどう動いて、変数もまた別メモリで定義されて
上書きされるということや、使いまわしている部分のことなど
ふんわりとだけれど、低レイヤー層での動きを把握したら
腹落ちして「関数」という単語が出てくるたびに
「わからんのだけど&amp;hellip;」って不安な気持ちにならなくなった。
強く感じたのが、インフラでの動きは
そういった低いレベルでの仕組みが解説されていることが多くて
プログラミングにおいては、あまりそういった解説を見かけなくて
アセンブリを書いたり読んだりしたときに
「わかりやすいな」
と感じたのは、そういったシンプルさだったのだなぁと思った。
単純に慣れの問題の気もする。
たぶん得意な人は、こういったモヤモヤをうまく脳内でカバーして
軽やかに学べるのだろうなぁと思った。
ラズパイ_メモ wifiの設定でつまづいたのでメモ
ifconfig wlan0 up SIOCSIFFLAGS: Operation not possible due to RF-kill とerror
rfkillコマンドでwifiのロックを解除
rfkill unblock wifi onできているかの確認
sudo rfkill list 参照
Linux Mint で無線LANが無効から戻らない | | 1Q77
そのあとは公式の設定通りで行けました。
WiFi設定(コマンドライン) － Raspberry Pi公式ドキュメントを日本語訳
次は
- ヒートシンクの取り付けと
- セキュリティ周りの強化
かなぁ。
k8sの構築をサッとやりたい。</description>
    </item>
    
    <item>
      <title>ラズパイ_メモ</title>
      <link>https://hugo.suwa3.me/post/2020-04-05-%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4_%E3%83%A1%E3%83%A2/</link>
      <pubDate>Sun, 05 Apr 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-05-%E3%83%A9%E3%82%BA%E3%83%91%E3%82%A4_%E3%83%A1%E3%83%A2/</guid>
      <description>OSをインストール
Download Raspbian for Raspberry Pi
OSのインストール(Mac) － Raspberry Pi公式ドキュメントを日本語訳
ログイン初期設定は
id: pi pass: raspberry まずはネットワークに繋げられるようにWifiの設定から
WiFi設定(コマンドライン) － Raspberry Pi公式ドキュメントを日本語訳
JISキーボードなので対応させる
RaspberryPiのキーボード入力の日本語化 - Qiita
セキュリティ周りの整備は必須
ラズパイでやらなければいけない４つのセキュリティ対策！ - Qiita</description>
    </item>
    
    <item>
      <title>数学について</title>
      <link>https://hugo.suwa3.me/post/2020-04-02-%E6%95%B0%E5%AD%A6%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Thu, 02 Apr 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-04-02-%E6%95%B0%E5%AD%A6%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>最近 Tour of Go をやっていて、とても数学寄りだなぁと感じたの。
例えば
https://go-tour-jp.appspot.com/basics/14
ここの g := 0.867 + 0.5i // complex128 こういったところにしても
複素数そこで出すんか、と思った。
Webではあまり意識しないけれども、確かにプログラミングというくくりの中では
数学の色は強くなるので、Go言語がWebに限らず汎用的に使われているということなのかなぁ。
プログラミングの学習をしていると
ついつい
「これ数式であらわして数の動きを追うとどうなるんだろう」
と、興味がそっちに行ってしまい戻ってこれなくなるときがある。
気をつける。
高校数学、塾で教えてはいたけれども
授業の前後でカリキュラム範囲の予習復習は必須だったし
進めば進むほど、求められる前提知識も増えて
ピラミッド型の知識体系だなと強く感じる。
そういう意味では、学ぶ順序として
高校数学を参考にするのは正しいが、範囲が広くて大変だなぁと思う。
Webの知識を深めるために必要なトピックスごと、学ぶ順序を意識した数学教材があれば効率的なのにと感じた。
ただ、個人的な意見として
数学の醍醐味は、その概念を通して自然現象を観察できるというところにあると思っていて
宇宙だとか原子だとか、対象の大小を問わない壮大さがロマンだと感じるの。
コンピューターは所詮、人工物なので
数学であらわすことができるのは当然というか
ロマンを感じないなぁと思う。
コンピューターの良さは、自然現象のひとつである電気信号を
人間がすこぶる工夫して自在に操っているところだと思う。
純粋にすごいなぁと思う。
宇宙を学ぶのって受動的だけれども、コンピューターを操るのは能動的だと感じる。
自然現象を管理して制御している、征服欲に近いかも。
だからOSの自作が、シンプルで楽しいんだと思うなぁ。</description>
    </item>
    
    <item>
      <title>Goやったよ！(やってない)</title>
      <link>https://hugo.suwa3.me/post/2020-03-31-go%E3%82%84%E3%81%A3%E3%81%9F%E3%82%88%E3%82%84%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%84/</link>
      <pubDate>Tue, 31 Mar 2020 13:00:14 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-31-go%E3%82%84%E3%81%A3%E3%81%9F%E3%82%88%E3%82%84%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%84/</guid>
      <description>brewでそれぞれインストール
$ brew install goenv $ brew install direnv goenvはバージョン管理なのでpyenvのようなもの
direnvは環境変数の管理ツールで、移動がトリガーになるらしい。
ローカル開発用ってかんじかな。
vi ~/.bash_profile export PATH=&amp;#34;$HOME/.goenv/bin:$PATH&amp;#34; eval &amp;#34;$(goenv init -)&amp;#34; バージョン指定してインストール
$ goenv install 1.11.1 $ goenv global 1.11.1 環境変数の編集
$ direnv edit . direnv: $EDITOR not found. ふむ。vimいれよう
$ export EDITOR=vim $ direnv edit . export GO111MODULE=on export GOPATH=$(pwd) export PATH=$PATH:$GOPATH/bin $ go mod init . 適当にソースをフォークしてgit cloneしてみるよ。
$ mkdir -p src/github.com/Ishizuka427 $ cd src/github.com/Ishizuka427 $ git clone ソース GoLand触ってみました！</description>
    </item>
    
    <item>
      <title>TODO整理</title>
      <link>https://hugo.suwa3.me/post/2020-03-30-todo%E6%95%B4%E7%90%86/</link>
      <pubDate>Mon, 30 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-30-todo%E6%95%B4%E7%90%86/</guid>
      <description>最近、気もそぞろで勉強に身が入っていないなぁと感じるので
TODO整理をして気分を上げていました。
マラソンなので肩の力を抜いてボチボチがんばる。
気合い入れてブースト入れていこう。
明日で3月が終わってしまう！
明後日は4月だからドトールのチャージ日だよ。
ネットでチャージする。
TODO整理していたら、いくつかは既に完了していたので
チェック入れておきました。
主に来月プライベートでやる内容。
データベースの構造
- 書籍2冊分 blogに感想まとめる データ分析、可視化
- トゥート関連の分析可視化
- ログデータの可視化 k8s on ラズパイ (シングルノードクラスタで検証)
- ラズパイのセットアップ
- kubeadmでクラスター作成 GCP
- LAMP構築
- WordPressインストール＆引っ越し Pythonの基礎固め </description>
    </item>
    
    <item>
      <title>整理</title>
      <link>https://hugo.suwa3.me/post/2020-03-28-2652/</link>
      <pubDate>Sat, 28 Mar 2020 13:00:32 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-28-2652/</guid>
      <description>今日はなんかだるだるしていたのでゴロゴロしていました。
メンタルは安定してきました。
国が不安定で、仕事も方向が定まらず不安定で、わたしも不安定で
未だかつて無いほどの心理的な不安定さを発揮したよ。
あと貧血気味なので鉄分摂取しました。
発言力がないのは単純に実力不足なので
黙って腕を磨きます。
より大きな母体をもとに分析している最新の情報は
海外の分析結果を参考にするのが説得力のあるものを手に入れられるなぁ
と、いうことで
英語サイトも検索結果に表示されるように設定して
日本語で調べたい内容を書き出したあとに
それを翻訳機にかけてから検索するの。
検索結果に、上からズラッと英語のサイトが並ぶので
それを片っ端からGoogle翻訳かけつつ読んでいます。
画像検索でも、丁寧に図解された情報が見つけられて良い。
最近のマイブームだよ。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hugo.suwa3.me/post/2020-03-27-2649/</link>
      <pubDate>Fri, 27 Mar 2020 13:00:18 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-27-2649/</guid>
      <description>思考が堂々めぐりをしている。
家系的に、そういった思考の癖があって
『思考が同じところを巡って外にでられない』
と感じたら、すぐにその輪を壊すように。
と言われた。
亡くなった祖父は寡黙な人で
母も、思うことを外に出せずしまい込む。
本当ならば、不安だとか
困っていることや、つらいことだとか
少しずつ周りに助けてほしいと伝えるべきなのに
なぜかうまく言語化できず抱え込む。
「答えがでない」という答えが出ると
それをわざわざひと目につくところに出したところで
見る人の気分を害するだけだと感じてしまう。
自分の責任なんだろうなぁ。あまり気にせず出せるようになりたい。
ただ本でも読んで暮らしたい。</description>
    </item>
    
    <item>
      <title>アイディア</title>
      <link>https://hugo.suwa3.me/post/2020-03-23-%E3%82%A2%E3%82%A4%E3%83%87%E3%82%A3%E3%82%A2/</link>
      <pubDate>Mon, 23 Mar 2020 13:00:46 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-23-%E3%82%A2%E3%82%A4%E3%83%87%E3%82%A3%E3%82%A2/</guid>
      <description>練習がてら、思いついたアプリケーションの実装をしていく。
アイディア出すの楽しい〜〜
入浴中にポンポン思いつくので、面白そうで現実的なものを
忘れずに残しておこうと思いました。
時間を元にした成長度グラフ化ツール
1. その日の勉強時間を入力 (n時間)
2. 普段に比べて集中、成長できたかを主観で評価
①全然できなかった (n×0.8)
②できなかった (n×0.9)
③いつも通りできた (n×1)
④いつもよりできた (n×1.1)
⑤無双した (n×1.2)
3. 使ったツールを記録
GitHub、Python、AWSなど
目的: 勉強のモチベーション維持
↑10日連続で続いたら褒めちぎる機能付き。
継続できる人間は本気で尊敬するので、年単位で続けられる人がいたら
どういった思考パターンで生きているのか個人的にインタビューしたいくらいです。</description>
    </item>
    
    <item>
      <title>作業ログ</title>
      <link>https://hugo.suwa3.me/post/2020-03-22-%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0-2/</link>
      <pubDate>Sun, 22 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-22-%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0-2/</guid>
      <description>3/22 TODO
✅どんすわdiskfull対処
✅↑Redisの設定
🔳↑S3画像を表示させる ✅メンテナンスページに2048移植 ✅vim編集 🔳WordPress記事のQiita化 -&amp;gt; Git管理 どんすわdiskfull問題 diskfullのためswapファイルを削除 0 =&amp;gt; 200 =&amp;gt; 400と変更
メモリ枯渇したためRedisの設定を変更する 参照: Redisのmaxmemoryについて | 技術情報ブログ | マネージドホスティングのディーネット
まずはマシン全体のメモリ容量を確認
# free -th total used free shared buff/cache available Mem: 983M 779M 63M 60M 140M 34M Swap: 399M 399M 40K Total: 1.4G 1.2G 64M メインメモリは1GBでした。
maxmemory の値は200MBとします。
さっそく編集します。
# cd /etc/ # vim redis.conf maxmemory 200mb Redisサーバーを再起動します。
# systemctl restart redis-server ついでにsidekiqのCPUQuotaも5%にしました。
デーモンをリロードしてくださいとのこと。
# service mastodon-sidekiq start Warning: The unit file, source configuration file or drop-ins of mastodon-sidekiq.</description>
    </item>
    
    <item>
      <title>Amazon Linux AMIにPython3系をインストール</title>
      <link>https://hugo.suwa3.me/post/2020-03-20-amazon-linux-ami%E3%81%ABpython3%E7%B3%BB%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Fri, 20 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-20-amazon-linux-ami%E3%81%ABpython3%E7%B3%BB%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>https://wp.suwa3.me/2019/12/28/pixela%e3%81%a8%e3%81%84%e3%81%86%e8%8d%89api%e3%82%b5%e3%83%bc%e3%83%93%e3%82%b9%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%a6%e3%80%81wordpress%e3%81%aepv%e6%95%b0%e3%82%92github%e9%a2%a8%e3%81%ab-2/
Pixela × GA cronの中身が置いてあるGitHubリポジトリです。
こちらのcronがうまく実行できていなかったので
まずは手動で実行してみて
何のerrorが出るかを確認して対処しました。
日付を指定して実行 日付を指定して実行するには
コメントのように書き直します。
参照: datetime &amp;mdash; 基本的な日付型および時間型 — Python 3.8.2 ドキュメント
def main(): analytics = initialize_analyticsreporting() yesterday = date.today() - datetime.timedelta(days=1) # yesterday = datetime.date(2020, 2, 24) # 日付を指定して実行する場合 response = get_report(analytics, yesterday) 手動実行してerrorの確認 サーバーにログイン後
登録されているcron一覧を表示します。
# crontab -l 0 2 * * * cd /opt/wp-pixela &amp;amp;&amp;amp; python3 google_analytics_access.py 試しに手で実行してみました。
# cd /opt/wp-pixela &amp;amp;&amp;amp; python3 google_analytics_access.py -bash: python3: command not found errorの原因 python3が無いっぽい。</description>
    </item>
    
    <item>
      <title>雑記</title>
      <link>https://hugo.suwa3.me/post/2020-03-19-%E9%9B%91%E8%A8%98-2/</link>
      <pubDate>Thu, 19 Mar 2020 13:00:32 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-19-%E9%9B%91%E8%A8%98-2/</guid>
      <description>浅く広くの人間関係は苦手だし、かといって深く狭くの人間関係構築も上手くできない。
誰かを味方につけるだとか、器用に立ち回ることもできずに、苦しくなって離脱してしまう。
要領よく、うまくやれる人が羨ましい。賢いのだなぁ。
もう、だいぶしんどくなってしまってから気づいたので、自業自得だなぁと思う。
現実逃避の方法が変わっただけで、相変わらず人との関わりは辛い。何故こんなコミュニケーションにすり減るのか。ハードルが高すぎる。</description>
    </item>
    
    <item>
      <title>ポエム以外禁止</title>
      <link>https://hugo.suwa3.me/post/2020-03-18-%E3%83%9D%E3%82%A8%E3%83%A0%E4%BB%A5%E5%A4%96%E7%A6%81%E6%AD%A2/</link>
      <pubDate>Wed, 18 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-18-%E3%83%9D%E3%82%A8%E3%83%A0%E4%BB%A5%E5%A4%96%E7%A6%81%E6%AD%A2/</guid>
      <description>今日の午前中は心が死んでいたし、午後は心がうんこでした。
心の安寧のためにも、新しく鯖立てでもしようと思いました。
インスタンス構築でストレス解消だよ。
まずはドメイン取得です。
Poetryで取って、とってもエモいインスタンスとして運用します。
ポエム以外禁止。
しばらく運用したら分析入れて
マルコフ連鎖Bot実装して、ポエムを自動で大量生産する予定です。
あとは自然言語処理を入れて、それに合った画像を自動でさしこむシステムを入れよう。
ポジネガ性別判定だよ。
「今日の午前中は心が死んでいたし、午後は心がうんこでした」
これはわたしのポエムですが
ポエムの才能がないので、頑張りたいです。</description>
    </item>
    
    <item>
      <title>脳内</title>
      <link>https://hugo.suwa3.me/post/2020-03-16-%E8%84%B3%E5%86%85/</link>
      <pubDate>Mon, 16 Mar 2020 01:00:23 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-16-%E8%84%B3%E5%86%85/</guid>
      <description>データベースがわからな過ぎて心が落ち着かなかったので
脳内の自分自身に相談する形で、メンタルの安定化を試みました。
その会話ログを文章に起こして眠ったのだけれども
翌朝、改めて読んでみたら結構ホラーだったので載せます。
私1｢データベースが分からないという気持ちだったけれども、よく考えたらWebサーバーも分からないし、アプリケーションもよく分からない。内部の構造を何も理解していない。そもそもLinuxすらよく分かっていないかも｣
私2｢そっかぁ、分からない気持ちでいっぱいなんだね｣
私1｢例えばログを見る方法が分かっても、それを読み解くためには内部構造をある程度わかっていて、当たりをつける必要があると思うのに、何も分からないから推測も出来ない。運良く答えに辿り着けたとしても、何故辿り着けたのかすら理解せずに場当たり的な対処で終わってしまう｣
私2｢なるほど。ログを見ても『分からない』という気持ちが先立ってしまって不安なのかもねぇ｣
私1｢分かっていないということに気づいたことで、余計に不安が大きくなっていると感じる｣
私2｢そっかぁ。不安を小さくするためにはどうしたら良いだろう｣
私1｢どうするべきなのかは分からないけれども、恐らく内部構造を把握しながら多くのログを見ることに慣れた方が良いのだと思う。何か不具合が起きているときのログを大事にするべきだと思う｣
私2｢そうだね。内部構造の把握は、これからコツコツと能動的に学べたら良いね。不具合が起きたときこそ冷静になることを忘れずに、その時の自分にできることをやってみよう｣
私1｢わかった｣</description>
    </item>
    
    <item>
      <title>まともに起動</title>
      <link>https://hugo.suwa3.me/post/2020-03-14-%E3%81%BE%E3%81%A8%E3%82%82%E3%81%AB%E8%B5%B7%E5%8B%95/</link>
      <pubDate>Sat, 14 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-14-%E3%81%BE%E3%81%A8%E3%82%82%E3%81%AB%E8%B5%B7%E5%8B%95/</guid>
      <description>ようやく、まともにマストドンを起動して動かすことができたので
作業ログをここに残します。
感動を通り越して若干うんざりです😢
経緯 EC2上にdocker-compose で SNS の運用をしていましたが、CPU使用率が100％のまま下がらない状態が続いているため EC2 のローカルへ移行することにしました。 まずは CPU をなんとかする。
条件 データは死守する 移行対象は docker-compose on EC2 (まともに ssh ログインできない) アプリケーションのバージョン追従はしていない。 t2.micro 縛り(可能な限り) 今後のTODO 現状の設定ファイルは Docker 用のためEC2用に全部書き直し 最終的に DB のバージョンを変更する必要あり 懸念点 dump データが途中から明らかに容量が小さい。データ壊れている疑惑あり。 など、諸々の問題を抱えながらも一つ一つ潰して、構築を済ませることができました！とても勉強になりました。
以下、CPU をなんとかした作業ログです。
swapの設定 まず、swapの設定をしました。
以前やったことがあったので その時のblog を参考に、そのままコピペでいけました。
Docker上の不要なファイルをローカルに移動 ubuntu ユーザーの ~/ 直下に dump を移動 ファイルの権限変える chmod scp -i ~/.ssh/**.pem *****@3.***.6.***:/home/ubuntu/dump-latest.sql.gz /Users/a_ishizuka/tmp/ ■ CPUQuota の設定 CPU の張り付きを防ぐために、CPUQuota の設定をして CPU 使用率の制限を行いました。
コントロールグループの変更 Red Hat Enterprise Linux 7 | Red Hat Customer Portal</description>
    </item>
    
    <item>
      <title>GitHubの管理</title>
      <link>https://hugo.suwa3.me/post/2020-03-10-github%E3%81%AE%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 10 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-10-github%E3%81%AE%E7%AE%A1%E7%90%86/</guid>
      <description>GitHubの管理が雑すぎる。
個人用アカウント(リポジトリ)の話です。
特にいま運用しているSNSに関しては、設定ファイルやcronなど
とりあえず適当にpushされているだけで、いつのものかわからないものもある。
そもそも直近のバージョン追従できていないので
本番で使っていたDocker絡みの情報を残しておいても
今後バージョン上がるごとに検証が必要になってしまうからキツイのだけれども。
いったん脱Dockerしたので、プレーンな状態でチューニングを一通り済ませたら
k8s化させるにあたってもう一度コンテナ化は必須なんやろな。
念の為どこかに使っていたDocker絡みの情報は残しておくけれども
せいぜい参考程度にしかならない。仕方ない。
そして、マストドンの開発コミュニティ衰退に伴って
参考にできるソースが減りつつあるので
自分の実力を磨かねばと思います！
最近はアニア動物シリーズにハマっているの。
作業中はアニマルプラネットをBGMで流すのが好きで
フィギュアを眺めていると心がぴょんぴょんするので
小動物などから、少しずつ集めたいです。
職場のデスクにいるレッサーパンダ</description>
    </item>
    
    <item>
      <title>論理DB/Redisの掃除</title>
      <link>https://hugo.suwa3.me/post/2020-03-08-%E8%AB%96%E7%90%86db%E3%81%AE%E6%8E%83%E9%99%A4/</link>
      <pubDate>Sun, 08 Mar 2020 13:00:58 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-08-%E8%AB%96%E7%90%86db%E3%81%AE%E6%8E%83%E9%99%A4/</guid>
      <description>いったん論理DBを削除しようとしたら
postgres=# DROP DATABASE mastodon_production; ERROR: database &amp;#34;mastodon_production&amp;#34; is being accessed by other users DETAIL: There is 1 other session using the database. 何かアクセスしていますとのこと
バックグラウンドで動いているサービスを止めていきます。
# service mastodon-web stop # service mastodon-sidekiq stop # service mastodon-streaming stop DROP DATABASE します。
# su - postgres $ psql postgres postgres=# DROP DATABASE mastodon_production; DROP DATABASE 消えているか確認
postgres=# \l
新しく作ります。
$ psql postgres=# CREATE DATABASE mastodon_production ENCODING &amp;#39;UTF-8&amp;#39;; CREATE DATABASE mastodonユーザーでDB名を指定して入る
$ psql mastodon_production</description>
    </item>
    
    <item>
      <title>Amazon Linux AMIにGitの最新バージョンをインストール</title>
      <link>https://hugo.suwa3.me/post/2020-03-07-amazon-linux-ami%E3%81%ABgit%E3%81%AE%E6%9C%80%E6%96%B0%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Sat, 07 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-07-amazon-linux-ami%E3%81%ABgit%E3%81%AE%E6%9C%80%E6%96%B0%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>WordPressのサーバーにgit cloneしてこようと思ったら躓いたので、備忘録です。
__| __|_ ) _| ( / Amazon Linux AMI ___|\___|___| https://aws.amazon.com/amazon-linux-ami/2018.03-release-notes/ 普段yumでインストールするので
今回もCentOSを前提にして調べました。
$ yum -y install https://centos7.iuscommunity.org/ius-release.rpm Error: Package: ius-release-2-1.el7.ius.noarch (/ius-release) $ yum -y install https://centos6.iuscommunity.org/ius-release.rpm Complete! $ yum -y install git2u Error: Package: git216-perl-Git-2.16.6-2.el6.ius.noarch (ius) なるほど、CentOS 6っぽいけれども
インストールしようとするとコケる。
Gitの公式リファレンスで
ソースからgitをインストールする方法を確認します。
Git - Gitのインストール
Git のバイナリをコンパイルしてインストールするために必要な
依存ライブラリをインストール
$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel perl-devel zlib-devel git-2.24.1.tar.gz
$ wget https://github.com/git/git/archive/v2.24.1.tar.gz ダウンロードが終わったら、コンパイルしてインストールします。
$ tar -zxf v2.24.1.tar.gz $ cd git-2.</description>
    </item>
    
    <item>
      <title>Python復習</title>
      <link>https://hugo.suwa3.me/post/2020-03-06-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Fri, 06 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-06-%E5%BE%A9%E7%BF%92/</guid>
      <description>今日は大事大事な基礎って部分をやったと思うので備忘録です。
このblogの続き作業です。
https://wp.suwa3.me/2020/03/04/%e3%80%8c%e3%81%93%e3%82%8c%e3%81%8c%e7%84%a1%e3%81%84%e3%81%a8%e5%8b%95%e3%81%8b%e3%81%aa%e3%81%84%e3%80%8d%e7%b3%bb/
from datetime import date してきて、date関数を使えるようにしたら
自分のほしい形式になるように整形して
出力されるものが文字列なのか数値なのかを考えて代入する。
datetime &amp;mdash; 基本的な日付型および時間型 — Python 3.8.2 ドキュメント
from datetime import date (略) def get_report(analytics, date_): (略) return analytics.reports().batchGet( body={ &amp;#39;reportRequests&amp;#39;: [ { &amp;#39;viewId&amp;#39;: VIEW_ID, &amp;#39;dateRanges&amp;#39;: [{&amp;#39;startDate&amp;#39;: date_.strftime(&amp;#34;%Y-%m-%d&amp;#34;), &amp;#39;endDate&amp;#39;: date_.strftime(&amp;#34;%Y-%m-%d&amp;#34;)}], &amp;#39;metrics&amp;#39;: [{&amp;#39;expression&amp;#39;: &amp;#39;ga:sessions&amp;#39;}], &amp;#39;dimensions&amp;#39;: [{&amp;#39;name&amp;#39;: &amp;#39;ga:country&amp;#39;}] }] } ).execute() (略) def main(): analytics = initialize_analyticsreporting() yesterday = date(2020, 3, 9) - datetime.timedelta(days=1) response = get_report(analytics, yesterday) data = { &amp;#34;date&amp;#34;: yesterday.strftime(&amp;#34;%Y%m%d&amp;#34;), &amp;#34;quantity&amp;#34;: response[&amp;#34;reports&amp;#34;][0][&amp;#34;data&amp;#34;][&amp;#34;totals&amp;#34;][0][&amp;#34;values&amp;#34;][0], } 使う関数は、その都度公式リファレンスで使い方の詳細を確認する。</description>
    </item>
    
    <item>
      <title>組織づくりについて</title>
      <link>https://hugo.suwa3.me/post/2020-03-05-%E7%B5%84%E7%B9%94%E3%81%A5%E3%81%8F%E3%82%8A%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Thu, 05 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-05-%E7%B5%84%E7%B9%94%E3%81%A5%E3%81%8F%E3%82%8A%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>先日おもしろい記事を見つけたので
スタートアップの組織設計図の5類型と、その失敗率 | Coral Capital
記事自体はつい最近のもので新しいのだけれども
1994年のインターネット勃興期から2002年までの8年間をかけてシリコンバレーのハイテクスタートアップ企業200社を追跡調査した興味深いレポート
とあるように、データ自体は少し古めです。
国も時代も違うけれども、参考になるなぁと感じた。
組織をつくるという視点で語る記事は多くあれど
ほとんどが自身の会社での経験談であったり、雰囲気で語られていたりするものが多い中
実在した200社を、8年間追いかけたうえで得られた
具体的なデータを元にして分析しているという点で価値を感じた。
内容をざっくり話すと
組織設計の型を大きく5つに分けていて
現実にはほとんどの企業が5つの類型のどれかに相当していて、上記の各軸の選択肢は互いに独立して選ぶようなものではないらしいということです。
とのことです。
で、その5つが(以下、記事から引用)
**スター型：**トップ人材だけを雇い、最高の待遇を用意する。彼らが仕事を遂行するのに必要なリソースと自由裁量を与える **エンジニア型：**われわれは真剣で、熱量はきわめて高い。大組織におけるゲリラ的プロジェクト遂行のメンタリティーをもつ **コミットメント型：**もし会社を辞めることがあるとしても、それは引退するとき。そんな会社をつくりたかった **官僚型：**ジョブ・ディスクリプションやプロジェクト文書があるなど、文書化を徹底し、厳格なプロジェクト・マネジメントの方法論を採用する **独裁型：**給料だすから、仕事しろ スタートアップで失敗(組織崩壊で消滅)する確率が高いのは独裁型。
逆に、失敗しないのはコミットメント型が一番高く二番手でスター型とのこと。
(このあたりの数字を可視化したものが元記事にあって、感覚的にもわかりやすいなと感じた。)
コミットメント型において、働いている人たちは
その企業のカルチャーやチームが好き 帰属意識を感じている人が多い 採用のときにもカルチャーフィットを重視している とのこと。企業のファンになっている感じだねぇ。
ただ上場するなどして、ある程度組織化してくると
この仕組みは通用しなくなるらしく
スター型の方が成長におけるパフォーマンスは高いらしい。
人が増えて軌道に乗ってさえしまえば、各々の帰属意識の優先度は下がるのだなぁ。人間の組織って感じがする。
また、スター型の課題として
必然的に離職率が高くなる エンジニア以外の職種の人たちが不公平を感じて辞めていく の2点が挙げられている。
組織づくりは軽視できないのだなと感じたし、タイミングを間違えると影響範囲が大きいとも感じた。
実情にあわせた仕組みと制度づくりが必要なのだなぁ。</description>
    </item>
    
    <item>
      <title>「これが無いと動かない」系</title>
      <link>https://hugo.suwa3.me/post/2020-03-04-%E3%81%93%E3%82%8C%E3%81%8C%E7%84%A1%E3%81%84%E3%81%A8%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84%E7%B3%BB/</link>
      <pubDate>Wed, 04 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-04-%E3%81%93%E3%82%8C%E3%81%8C%E7%84%A1%E3%81%84%E3%81%A8%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84%E7%B3%BB/</guid>
      <description>今日は少しだけ.pyを触ったので備忘録です。
GitHub
https://github.com/Ishizuka427/wp-pixela
経緯 サイドバーにあるGitHubの草風PV表示ですが
PixelaというAPIで提供されているサービスと、Google Analytics APIを連携させているの。そこの連携部分をPythonで書いています。
諸々の方法などは下記の記事にまとめてあるので、気になった方は読んでください。
https://wp.suwa3.me/2019/12/28/pixela%e3%81%a8%e3%81%84%e3%81%86%e8%8d%89api%e3%82%b5%e3%83%bc%e3%83%93%e3%82%b9%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%a6%e3%80%81wordpress%e3%81%aepv%e6%95%b0%e3%82%92github%e9%a2%a8%e3%81%ab-2/
EC2上でSNS運用していて、そこのインスタンスでcron実行させていたのだけれども
サーバーの引っ越しなどしていたらcronの存在をすっかり忘れていて、草を生やし忘れていたの。
**そもそも1日1回のジョブならLambdaで良いのでは？
**って感じなので、移行作業をしようと思って
その準備として
「とりあえずローカルで実行させてみよう」
と、作業したら依存パッケージ絡みで躓いたので書き記します。
＿人人人人人人人人人人人人人人人人人＿
＞　今回Lambdaの話は出てきません　＜
￣Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y￣
PypI Pythonのサードパーティパッケージ
https://pypi.org/
$ pip install &amp;lt;パッケージ名&amp;gt; でインストールできます。
環境変数を.envにまとめて.pyに読み込ませて実行させていたのですが
その際に使うモジュールを検索していて
dotenv かなぁ。と思ってインストールしたら違いました。
$ pip install dotenv すると、長いerrorを吐かれます。
py-dotenv や dotenv-python などもそれっぽいですが、実はひっかけです。
最終Releaseが 3年前 とかです。
正解は python-dotenv です！
**こんなんわかるか！
**って気持ちになったので、そのモチベーションだけでblogを書きました。
dotenv , python などでググれば出てくるといえば出てくるので
ググり方がカスなだけでしたが、ここに備忘録として残します。
こういった「これが無いと動かない」系は、GitHubのREADME.mdに忘れずに書いておこうと思いました。</description>
    </item>
    
    <item>
      <title>やりたいこと3月</title>
      <link>https://hugo.suwa3.me/post/2020-03-03-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A83%E6%9C%88/</link>
      <pubDate>Tue, 03 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-03-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A83%E6%9C%88/</guid>
      <description>お雛祭りなので、ひなあられを食べました。
夜は少し気持ちが落ちていたけれども、持ち直しました。
今月は勉強会への参加がゼロになりそうなので
自宅で粛々と研鑽に励みます。
やりたいことたくさんある😊たのしみ
3月中にやりたいことListです。</description>
    </item>
    
    <item>
      <title>Amazon Linux AMIでLet&#39;s Encryptの証明書設定</title>
      <link>https://hugo.suwa3.me/post/2020-03-01-amazon-linux-ami%E3%81%A7lets-encrypt%E3%81%AE%E8%A8%BC%E6%98%8E%E6%9B%B8%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Sun, 01 Mar 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-03-01-amazon-linux-ami%E3%81%A7lets-encrypt%E3%81%AE%E8%A8%BC%E6%98%8E%E6%9B%B8%E8%A8%AD%E5%AE%9A/</guid>
      <description>ここ (WordPress) のblogの証明書が切れていたので発行しました。
$ certbot-auto certonly -bash: certbot-auto: コマンドが見つかりません 無いなぁ
$ certbot --help -bash: certbot: コマンドが見つかりません パス通し忘れてそのままっぽい。
$ cat /etc/*release* NAME=&amp;#34;Amazon Linux AMI&amp;#34; VERSION=&amp;#34;2018.03&amp;#34; ID=&amp;#34;amzn&amp;#34; ID_LIKE=&amp;#34;rhel fedora&amp;#34; VERSION_ID=&amp;#34;2018.03&amp;#34; なるほど
AWS EC2のAmazon LinuxでLet&amp;rsquo;s Encryptのサーバ証明書を取得する - Qiita
Let&amp;rsquo;s Encryptのサーバ証明書の導入ツール certbot は、AWS EC2のAmazon Linuxには、正式には対応していないため、導入の記録として経過をこの記事に残す。
ぴえん😢
とりあえずwgetして実行してみる
$ wget https://dl.eff.org/certbot-auto $ sudo ./certbot-auto --debug 入ったか確認
$ pwd /home/ec2-user $ ls certbot-auto homeにあると間違えて消しそうなので
certbot-autoは /usr/bin の下に移動します。
$ sudo mv ~/certbot-auto /usr/bin/ コマンド実行されるか確認
$ certbot-auto --help Requesting to rerun /usr/bin/certbot-auto with root privileges… ちなみにコマンドであるcertbot-autoで</description>
    </item>
    
    <item>
      <title>カラス撮って人間関係で食べてミッドサマー</title>
      <link>https://hugo.suwa3.me/post/2020-02-29-%E3%82%AB%E3%83%A9%E3%82%B9%E6%92%AE%E3%81%A3%E3%81%A6%E4%BA%BA%E9%96%93%E9%96%A2%E4%BF%82%E3%81%A7%E9%A3%9F%E3%81%B9%E3%81%A6%E3%83%9F%E3%83%83%E3%83%89%E3%82%B5%E3%83%9E%E3%83%BC/</link>
      <pubDate>Sat, 29 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-29-%E3%82%AB%E3%83%A9%E3%82%B9%E6%92%AE%E3%81%A3%E3%81%A6%E4%BA%BA%E9%96%93%E9%96%A2%E4%BF%82%E3%81%A7%E9%A3%9F%E3%81%B9%E3%81%A6%E3%83%9F%E3%83%83%E3%83%89%E3%82%B5%E3%83%9E%E3%83%BC/</guid>
      <description>今日撮ったカラス
足でパンをおさえながら啄いていた。
ミッドサマーを観ようと映画館に行ったら満席だったので
仕方なく人間関係で時間を潰しました。
ロコモコだよ。美味しかった。
PARCOに寄って、ポケセンとNintendoショップも覗いた。
ミッドサマーは、theスプラッター系でした。
観た直後は
「マストドン民が好きそうな映画だなぁ」
なんて思ったけれども
いま考えると、ある意味とても糞映画だったなといった感じ。(褒めてる)
普通の映画に飽きてきて
たまにはゲテモノにも触れたい人向けなのかなぁと思いました。
悪趣味ではあると思うけれども
個人的には好きかもしれない。
不気味で自身が不安定になるのを楽しみながら観ることができるのは
物理的ではないジェットコースターのようで面白いなぁと思った。</description>
    </item>
    
    <item>
      <title>非ネイティブ</title>
      <link>https://hugo.suwa3.me/post/2020-02-25-%E9%9D%9E%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96/</link>
      <pubDate>Tue, 25 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-25-%E9%9D%9E%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96/</guid>
      <description>AWSの権限周りについて
error文で検索して出てきたGitHubのissueにて
延々と議論している海外勢のやりとりを追いながら
英語ネイティブ勢ですら苦戦しているのに
非ネイティブであるだけで情報の量＆質ともに敵わないし
並々ならぬ努力が必要なのではと気が遠くなってきた😃
以前つかっていたマイナーSNSが
急に、海外でプチバズりして
一年ほど英語のTLで過ごした時期があったの。
日本語で何か書いても、何も反応を貰えないので
(悲しい..😢)
頑張って英語のつぶやきを読んだし
英語でつぶやいていたのだけれども
「母国語ではない言葉で考えを述べることは難しい」
みたいな愚痴を英語でつぶやいたら、スペイン人と中国人が
「めっちゃわかる」
と同意してくれたのが嬉しかったし
意外と英語非ネイティブの人は
見えていないだけで居るのだなぁと思った。
未翻訳のドキュメントや公式のblogなど読んでいると
「海外の技術には到底ついていけないのでは」
と思ってしまうけれども
腐らず、地道に頑張ろうと思います。</description>
    </item>
    
    <item>
      <title>Chromeの推しプラグイン</title>
      <link>https://hugo.suwa3.me/post/2020-02-24-chrome%E3%81%AE%E6%8E%A8%E3%81%97%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</link>
      <pubDate>Mon, 24 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-24-chrome%E3%81%AE%E6%8E%A8%E3%81%97%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</guid>
      <description>今日はChromeの推しプラグインをひたすら紹介したいと思います。
grt memo という、シンプルなメモ機能なのですが
このメモ機能を使わない日はない
と、言い切れるレベルで愛用しています。
基本的な使い方 使い方はかんたんで
プラグイン追加後に「メ」をクリックします。
そうするとメモ欄が表示されます。
緑の「＋」をクリックすると白紙のメモ欄を一つ増やすことができ
赤の「−」は削除することができます。
推しポイント① URLボタンで、現在のタブのURL挿入できる
Markdownテキストなどで[URLのページタイトル](そのURL) などと作成するさいに、この機能を使えば一発でページタイトルとURLがゲットできるので、かなり重宝します。
推しポイント② HTMLなどの要素をそぎ落とせる
例えば、ブラウザ上の文章をコピーして
あるメモアプリにペーストしたところ
以下のように、要素を引き継いでしまう場合がありますが
grt memo では純粋に文字のみ貼り付けられます。
推しポイント③ Chromeにログインさえできればメモ内容を再現可能
例えばPCの引っ越しをしたなど、普段と違う環境でも
Chromeにログインさえできればメモ内容は保持されて、再現することができます。
※「データを保証する物ではありませんので、重要なデータ・文章は別で利用してください」との、注意書きは有ります。
以上、推しポイントでした。
最後に、例として
わたし自身の具体的な使い方を紹介したいと思います。
一歩踏み込んだ、オススメの使い方😃 目次を作成してみる
しばらくメモ機能を使ってくると、だんだん
「この内容は、よく見返すなぁ」
だとか
「この内容は更新頻度が高い」
などと、自分自身の傾向が見えてきます。
そして、どんどんメモの数が増えてくるため
「よく見返すもの」
「内容の追加など、更新頻度の高いもの」
を、それぞれジャンルごと整理しながら目次を作成します。
最後に一時的メモ欄も追加しておくと便利です。
例えば、個人的名言集は
LTやちょっとしたときに使えそうな名言(迷言)集を書き溜めておく場所です。
広義のネタ帳です。
このように、工夫次第でとても便利に使うことができる拡張機能ですので
是非、試しに入れてみてください。
そして新たなTipsを発明した場合には是非教えて下さい。</description>
    </item>
    
    <item>
      <title>主にPostgreSQL作業ログ</title>
      <link>https://hugo.suwa3.me/post/2020-02-23-%E4%B8%BB%E3%81%ABpostgresql%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0/</link>
      <pubDate>Sun, 23 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-23-%E4%B8%BB%E3%81%ABpostgresql%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0/</guid>
      <description>全てのサービスの現在のステータスを確認する
$ service --status-all Linux service関連　基本コマンドメモ
$ service postgresql status $ service postgresql restart PostgreSQLを読み込まないので.env.productionの
DB_HOST=にループバックアドレスを指定
下記は.env.production一部抜粋 (最終的に空欄でOKだった)
# psql -U mastodon mastodon_production -h 127.0.0.1 psql: could not connect to server: Connection refused Is the server running on host &amp;#34;127.0.0.1&amp;#34; and accepting TCP/IP connections on port 5432? 【問題1】そもそもローカルから疎通が取れない
【問題2】初期デフォルトのDBにpg_dumpしたものが、まだ残っている
二度目にpg_dumpしてきたやつについては下記のようにやり直す。
論理DBを消す (初期化) 論理DBを作成 マイグレーション (テーブルやカラムを作成) リストア PostgreSQLの初期化
$ service postgresql initdb ↑Ubuntuはできなかった。そういう仕様らしい。
ところが、Ubuntu の PostgreSQL パッケージをインストールしても、initdb が見つかりません (実際には別の場所にインストールしているのですが、これは後述します)
Ubuntu で PostgreSQL を使ってみよう(続編) | Let&amp;rsquo;s Postgres</description>
    </item>
    
    <item>
      <title>作業ログ</title>
      <link>https://hugo.suwa3.me/post/2020-02-22-%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0/</link>
      <pubDate>Sat, 22 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-22-%E4%BD%9C%E6%A5%AD%E3%83%AD%E3%82%B0/</guid>
      <description>今日から素直で可愛げのある駆け出しのインフラエンジニアになる。
なので、sshログイン後きちんとscreenでセッションを保存してから作業を始める。
https://qiita.com/hnishi/items/3190f2901f88e2594a5f
$ screen まず前回やった作業の記憶を呼び覚ますために
ユーザーを切り替えてhistory見つつ何をするか思い出す。
$ sudo su - $ sudo su mastodon $ cd /home/mastodon/live/ アセットコンパイルからだった。
$ RAILS_ENV=production bundle exec rails assets:precompile yarn install v1.21.1 [1/6] Validating package.json… [2/6] Resolving packages… [3/6] Fetching packages… CPUが張り付きました。
メモリ使用量を見ようにも
$ free コマンドが打てない。
無料枠で何とかしたいので
t2.microで出来るだけやってみる😢
OSSで詰んだらソースを読むタイムだよ。
ファイルやディレクトリ総当りをしながら
それっぽいものを探す作業です。jsに発狂してきたら水を飲んで落ち着こう。
https://github.com/tootsuite/mastodon/blob/master/config/webpack/configuration.js
↑最後の方にoutputという単語を見つけた。
逆算してpublic_output_path =&amp;gt; webpacker.ymlの行方を追います。
public配下のpacksっぽいことが判明した。
打開策としてDocker内の
/opt/mastodon/public/packs
をボリュームマウントしてホストに移動させて
そのまま圧縮してEC2に送る作戦でいきます。
**ローカルで作業
**イメージをDockerHubで見つけてきたのでpull
$ docker pull tootsuite/mastodon:v2.9.3 $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE tootsuite/mastodon v2.</description>
    </item>
    
    <item>
      <title>社内発表</title>
      <link>https://hugo.suwa3.me/post/2020-02-21-%E7%A4%BE%E5%86%85%E7%99%BA%E8%A1%A8/</link>
      <pubDate>Fri, 21 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-21-%E7%A4%BE%E5%86%85%E7%99%BA%E8%A1%A8/</guid>
      <description>社内の勉強会で発表しました。
主にコンテナ技術についてです。
その際の質疑応答内容をまとめてみました。
Q1.
Macでもk8sを使えるが、AWSのマネジメントサービスをつかうのか
A1. ホストマシンでは、サービス量によっては大変重くなるためあくまで検証用だと考えている。
本番で運用する場合はオンプレやクラウドなどを用いて、その上で開発を行いB/Gデプロイなどでリリースやアプデを行うと考えています。
Q.2
ECSとEKSの比較表を見ると、EKSの良さが何も無いように見えるのですが…
A.2
どのようなサービス設計にしていくかで一概にどちらが良いかとは言えませんが、例えばマイクロサービス化されているものであればk8s(EKS)で構築するのが管理面で一元化できるというメリットがあります。また、可搬性という点でもEKSの方があります。
Q3.
ローリングアップデートのさいにDBとの整合性が合わない場合はどう対処するのか
A3. 課題として検証を行います。
Q4. ローリングアップデートはリソースを食うため、現実的ではないのでは
A4. 課題として検証を行います。
k8sの場合はpodだけが入れ替わるからリソースはそこまで必要にならないはずだけれども
それも動作を確認するという意味で今後検証する。
アプリケーションサイドからの質問が多く、関心をもって頂けているのが有り難いなと思った。</description>
    </item>
    
    <item>
      <title>やりたいこと😢</title>
      <link>https://hugo.suwa3.me/post/2020-02-20-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8/</link>
      <pubDate>Thu, 20 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-20-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8/</guid>
      <description>やりたいことが山ほどある😢
でも忙しくて亀の歩み😢
blogすら書けていなかったので一気に書いている。
はよ終わらせたい。
もっと低レイヤーなこともやりたい。
本当はLTを含む発表や、ハッカソンなどもガンガン攻めたいのだけれども
このご時世なので、落ち着いてからかなぁ。</description>
    </item>
    
    <item>
      <title>EKSのこと</title>
      <link>https://hugo.suwa3.me/post/2020-02-19-eks%E3%81%AE%E3%81%93%E3%81%A8/</link>
      <pubDate>Wed, 19 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-19-eks%E3%81%AE%E3%81%93%E3%81%A8/</guid>
      <description>EKSにおいて定義、仮説、検証を繰り返している。
専門用語が多い。
Kubernates 用語と EKS 用語が混ざる。
→ 言葉の定義が曖昧だと後々痛い目にあうので、手を抜けない。
AWS 公式リファレンスは概要のみ
OSS であればソースを読むことで予測できる部分があるけれど、マネジメントサービスは内部で何がどう動いているのかが分かりづらい。
特にロールポリシーのアタッチなど、権限の種類などについては JSON を読み解きながら、仮説をたてて実際に検証することで内部構造を把握する必要がある。
【疑問】 Fergate における Pod 実行ロールについての考え方
■ Fergate を使わずにサービスロールの設定をする場合 Amazon EKS Service Policy Amazon EKS Cluster Policy 上記2つをアタッチした。
■ Fergate を利用する場合 Amazon EKS Fargate Pod Execution Role Policy 上記をアタッチする必要があるという認識であっているのか。
■ eksctl create コマンドを使用する場合 eksctl create コマンドで --fargate オプションをつけることで、上記の IAM ロールの代わりを自動で設定してくれる..らしい挙動。
（IAM のロールを確認したら、コマンド実行したタイミングで「 Amazon EKS For Fargate Service Role Policy」が生成されていた）
ECS も Fergate を利用することで IAM ロール自動設定されていた記憶ある。 =&amp;gt; ロール周りのポリシーについて JSON など確認する。</description>
    </item>
    
    <item>
      <title>テック系イベント、カンファレンスなど</title>
      <link>https://hugo.suwa3.me/post/2020-02-17-%E3%83%86%E3%83%83%E3%82%AF%E7%B3%BB%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9%E3%81%AA%E3%81%A9/</link>
      <pubDate>Mon, 17 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-17-%E3%83%86%E3%83%83%E3%82%AF%E7%B3%BB%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9%E3%81%AA%E3%81%A9/</guid>
      <description>コロナ怖いの気持ちだよ。
キャンセルできるものは早めにキャンセルすることにしました。
コロナウイルスに関する国内テックカンファレンスの開催状況 2020 年版
技術書典は中止の理由として
- 不要不急な外出を控えるように、という呼びかけが国からあった
- IT系企業のイベント自粛(Yahooは大規模な会合やイベントへの参加や、主催を原則禁止にするらしい)
以上の2点を挙げていて
集団感染発覚での信用失うリスクを考えた上での判断なのだろうけれども
こういった未知の感染症が国内でもジワジワと流行り出すの
経験がないからどう自己判断したら良いのか迷うなと感じた。
自衛できるのなら自衛するのと
なるべく冷静に、情報の取捨選択をする。
状況がわからない時は様子を見つつ安全方向に倒す。
ただでさえ不安なときに
2次ソース、ましてやソース元もわからない情報が溢れていると目眩がする。
精神衛生上よろしくないためシャットアウト。
リモートが続き体力の衰えを感じるので
筋トレを開始しました🙋
続けられると良いなぁ。</description>
    </item>
    
    <item>
      <title>構築覚書</title>
      <link>https://hugo.suwa3.me/post/2020-02-16-%E6%A7%8B%E7%AF%89%E8%A6%9A%E6%9B%B8/</link>
      <pubDate>Sun, 16 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-16-%E6%A7%8B%E7%AF%89%E8%A6%9A%E6%9B%B8/</guid>
      <description>Mastodon構築の構築をしていました。
Dockerが不調でDocker内のデータをpg_dumpできない Docker上のDBデータはローカルEC2にマウント cron(ローカル)で回していたpg_dumpは容量が途中から明らかに少なくて怪しいし怖い ローカルにPostgreSQLをバージョン指定で入れて、受け皿を用意 【今日学んだこと】
古い状態で数ヶ月放置するだけでバージョン違いなど移行作業に苦しむので、なるべく最新の状態を維持する。(セキュリティ面でも)
【最終的に詰まったところ】
railsのassets:precompileを実行したらCPUが張り付いてsshログインできない
↓
ボトルネックはアセットコンパイル
【次週】
ホストマシンでコンパイルしたものをscp転送する
スムーズにいけば数時間で終わるということが分かった。
ただ、今回はサーバースペックに縛り有りな上に
OSSやDBのバージョン縛り有りの状況だったので結構苦しんだ感じ。</description>
    </item>
    
    <item>
      <title>Lambdaハンズオン</title>
      <link>https://hugo.suwa3.me/post/2020-02-13-lambda%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</link>
      <pubDate>Thu, 13 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-13-lambda%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</guid>
      <description>JAWS-UG 初心者支部#23 次回のハンズオン勉強会向けのチューター向け予習会
Lambdaのハンズオンに参加しました🙋
来週開催されるハンズオンにチューターとして参加するので
その予習会です！
ハンズオンの内容としてはLambdaやAPI Gateway、その他AWSサービス(翻訳機能など)を連携させていく内容です。
音声をリアルタイムで文字に起こす Amazon Transcribe というサービスや、 boto3などAWSサービスをPythonから操作できるライブラリなどを使って
下記のような流れのシステムを構築しました。
『英語音声ファイルをS3にアップ』
↓
『それをトリガーにしてLambdaが起動』
『Lambda関数(Python)でtranslate_textを使い翻訳』
↓
『Amazon Transcribeで文字に起こす』
↓
『文字起こししたものをS3に保存』
AWS内のリソースを使うのであれば
IAMロールの設定で組み合わせがどんどん広がるし便利で素晴らしいなぁと感じました
これだからAWSやみつきになる😃
Lambdaのハンズオンで、登壇者の方がたまたまFargateを題材にしたLTをやっていたので
帰り際に色々とお話を聞けた。
検証環境を初めて構築する際のコツや、情報収集などについて意見/アドバイスを頂けたの嬉しかったです。
しかも、Pleromaなどマストドン周辺絡みのコミッターの方で
マストドンの鯖缶だったり、出身者というだけでも
同郷のような親近感がわく身としては、お話できてとても嬉しかったの。
インフラ寄りの勉強会に参加すると、結構な確率でEKSやFargateを業務で触っている参加者がいて
経験談など聞ける副産物が嬉しいのと同時に、本番環境でのコンテナ化が進んでいるなぁと感じる。</description>
    </item>
    
    <item>
      <title>AnsibleJPディベロッパー部</title>
      <link>https://hugo.suwa3.me/post/2020-02-12-2438/</link>
      <pubDate>Wed, 12 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-12-2438/</guid>
      <description>Ansiblejpディベロッパー部 2020.02 - connpass
Ansibleの勉強会に参加してきたよ🙋
とても勉強になったので、発表ひとつひとつにテンション上がりながらメモを取りました。
Ansiblejpディベロッパー部 2020.02　メモ
特に印象に残ったフレーズは
これからは変化を前提とした設計も行えるようにする
です。
まだまだインフラエンジニアとしては駆け出しで
正直
『今までのインフラエンジニアがしてきた仕事』
と、言われてもピンとこなくて
それと同じくらいAnsibleの良さもピンと来ていなかったのですが
今までの歴史的経緯などが分かりやすくまとめられていて
流れが理解しやすかったです。
人見知りなので、普段あまり懇親会には参加しないのですが
上司と行ったこともあって、懇親会に顔を出してみました。
愉快で楽しい仲間たち
といった感じで、とても気さくに話すことができました！
また機会があれば参加したいです😃</description>
    </item>
    
    <item>
      <title>LambdaとPythonでAPI GatewayをエンドポイントにしてSlackに何かを送る</title>
      <link>https://hugo.suwa3.me/post/2020-02-11-lambda%E3%81%A8python%E3%81%A7api-gateway%E3%82%92%E3%82%A8%E3%83%B3%E3%83%89%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%AB%E3%81%97%E3%81%A6slack%E3%81%AB%E4%BD%95%E3%81%8B%E3%82%92%E9%80%81%E3%82%8B/</link>
      <pubDate>Tue, 11 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-11-lambda%E3%81%A8python%E3%81%A7api-gateway%E3%82%92%E3%82%A8%E3%83%B3%E3%83%89%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%AB%E3%81%97%E3%81%A6slack%E3%81%AB%E4%BD%95%E3%81%8B%E3%82%92%E9%80%81%E3%82%8B/</guid>
      <description>経緯 今週の水曜日にJAWS-UG 初心者支部#23 次回のハンズオン勉強会向けのチューター向け予習会へ参加することになりました。
Lambdaは、花屋時代にローカル環境でテスト実行してみてQiitaに上げたきりだったので
その時の記事 =&amp;gt; Pythonでaws-sam-cliをローカル実行するまで
もうすこし踏み込んで
(実用性を意識しながらLambdaを触ってみたいなぁ)
と、思った＆予習も兼ねて
『API GatewayをエンドポイントにしてLambdaを起動しSlackに何かを流す』
というのをやってみました。
API Gatewayをエンドポイントにした実行を試したいと考えた理由として
外部から連携したい場合、HTTPリクエストを受けて発火させる場面が多くあるので
これから効率化を考える際に、よく使いそうな手法として要領を掴んで慣れておきたかったからです。
逆にAPI Gatewayを使わないパターンとして
AWS内のサービスを使うときは、わざわざエンドポイントを外に置かなくても
AWSのサービス同士はだいたいIAMロールを使えばAWS内でセキュアに連携できます。
流れ 流れとしては
SlackでIncoming Webhookの設定をしてWebhook URLを控えます。
Lambdaのコンソール上で関数を作成して
Webhook URLをその関数内で使用し、連携させます。
API Gatewayのコンソール上でLambda関数を紐付けて
エンドポイントをデプロイすると、発火用のURLが発行されます。
そのURLにアクセスする(HTTPリクエストが届く)と
それを合図にしてLambdaが起動して
SlackのBotが起動する、という仕組みです。
Slack
1. Incoming Webhookの設定
2. Webhook URLを控える Lambda
1. 関数の作成
2. 関数内にWebhook URLを仕込む API Gateway
1. Lambda関数の紐付け
2. エンドポイントをデプロイして発火用URLを控える (例えば)ブラウザなど
エンドポイントURLにアクセスしてみる Slack
Botが起動する Slack Incoming Webhookの設定 まずはSlackの設定です。
『Slackをカスタマイズ』を選択します。
左上の『MENU』から
『App 管理』を選択します。
『 Incoming Webhook』を検索し、アプリを『Slackに追加』します。</description>
    </item>
    
    <item>
      <title>クラウドについて雑話</title>
      <link>https://hugo.suwa3.me/post/2020-02-10-%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E9%9B%91%E8%A9%B1/</link>
      <pubDate>Mon, 10 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-10-%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E9%9B%91%E8%A9%B1/</guid>
      <description>k8sについて学んでいると
インフラ基盤を支えるOSSとして魅力を感じると同時に
ひとつのクラウドに依存してしまうと、それに癒着して
k8sの魅力のひとつである身軽さが損なわれるのでは
と考えてしまうの。
例えばキャンペーンサイトや成長段階のシステムなどは
初期投資などのコスト面を考えても、パブリッククラウドが適していると思えるし
反対に大規模で安定したシステムになればなるほど
クラウドの、スケーラビリティという面で恩恵は小さくなって、ひとつのベンダーに依存するという意味でリスクは大きくなると思える。
サービスの特性や、運用によって
『何も考えずに全てクラウドファースト』
ではなく
なぜクラウドを選ぶのか
オンプレミス上であってもOSSと組み合わせた稼働の方が、可搬性に優れたサービス構築ができるのではないか
など、そのサービスについて視野を広くインフラ設計できるようになりたい。
まだまだ技術的にも未熟なので、これからもっと学びたいことが沢山あるの。
パブリッククラウドのフルマネジメントサービスで便利になる一方で
独自仕様が増えて依存度の高まりを感じると
（使う側ではなく、作る側でいたい）
と思ってしまう。
巨人の肩に乗りつつ、巨人の中もわかる人になりたいです。
そして巨人に振り回されずに、なるべく根幹的で普遍的な技術力を身につけられるよう心掛けたい。
どちらにせよ趣味鯖で構築して運用する場合、いくらコンテナオーケストレーションツールが魅力的だからと
k8sクラスタを組んで多くの分散システムを構築運用するのは趣味レベルでなかなか現実的ではないと思ってしまう。
k3sでサービスの構築をやってみようかなぁ。
以前までは_トレンドだから_と理由で選んでいたものも
**何故ここまで普及したのか
その特性から、今後は方向性としてどういった運用方法を目指すべきか
**などを、捉えられるようになりたい。</description>
    </item>
    
    <item>
      <title>整理整理</title>
      <link>https://hugo.suwa3.me/post/2020-02-07-%E6%95%B4%E7%90%86%E6%95%B4%E7%90%86/</link>
      <pubDate>Fri, 07 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-07-%E6%95%B4%E7%90%86%E6%95%B4%E7%90%86/</guid>
      <description>もうTODOを整理する余裕もない。
しかしblogは書かないと。
まずやることを整理して
気持ちの整理をする。
don.suwa3.me
DjangoGirls
Lambda予習
社内技術発表
構築
時間の確保
PM
アイディア出し
レビュー
コーチ
botのエンドポイント
何か動かす
仕事でやる
毎日、紙にまとめようかな😃
書いていてわかったのは
仕事でやることと、プライベートでやることが
頭の中で混ざっていて
お互いに侵食しあっている印象をうける。
ノートを分けてみようかなぁ。
メルカリへのオリガミ売却価格は1株1円、事実上の経営破綻で社員9割リストラ
オリガミのニュースはとてもショックで
結構はやい段階でスマホ決済に着手していた印象があったので
「オリガミだなんて和風な名前でイマドキな事業をする企業だなぁ」
と感じていたの。
その後、ペイペイなどが台頭してきて
オリガミは完全に影が薄くなってきていたけれども
まさかこんな形で終わるとは思っていなかった。
ブルーオーシャンだと思っていた事業が、売却するタイミングを間違えると
従業員を守れずこういった終わり方を迎えるのだなと思った。
『ベンチャーと提携や出資の話をしながら情報を蓄積して、大きな企業側が事業内容を引き抜いた』
という話も聞いて
売却せずとも、情報や人材は引き抜かれる可能性があり
弱肉強食というか、アイディアを扱うスタートアップ商品の性質上
構造さえ知ってしまえば、あとは資本力がものを言うのかなぁと感じました。
AWSにおいて、インフラエンジニアとして技術力を磨くというよりは
結局は、技術力がなくてもユーザーとしてインフラエンジニアらしいことが出来るツールとなっていっている。
エンジニアとして生きていくうえで
できれば、使う側ではなく作る側でいたい。
Kubernetes on Slackに参加しました。
勉強会は高倍率で狭き門だし
開発コミュニティに食らいついていかなければいけないなと思う。
今までは見境なく手を出していたけれども
そろそろ専門性を意識した方向にシフトしていくの。
「Webエンジニアとは」
みたいなテーマ感で、興味あるもの全てやってみて
改めて自分の立場を俯瞰して見たいなぁ。</description>
    </item>
    
    <item>
      <title>構築_備忘録</title>
      <link>https://hugo.suwa3.me/post/2020-02-05-%E6%A7%8B%E7%AF%89_%E5%82%99%E5%BF%98%E9%8C%B2/</link>
      <pubDate>Wed, 05 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-05-%E6%A7%8B%E7%AF%89_%E5%82%99%E5%BF%98%E9%8C%B2/</guid>
      <description>NginxとRoute53の設定をしようと思って
EC2のコンソールを開いたら「破棄」の文字があったの。
記憶喪失になりがちなので、記憶トリガーを残した過去の自分に感謝した。
非常にわかりやすい。
破棄せよという強い意志を感じる。
EKS使う予定もないのに、eks用のAMIで構築して
中にk8sがいるわ必要なコンポーネントが無いわで構築途中で破棄する予定のやつです。
でも設定ファイルとかは使いまわしたいので、まだ削除していないの。
『設定ファイル保存したら破棄』などと書かないと忘れそう。
いま気づいたけれど東京リージョンのAZ-1aが落ちたら全滅の危機だね。
引越し先のサーバーは1cとかにしよう。</description>
    </item>
    
    <item>
      <title>【人生初】自宅でフルリモート</title>
      <link>https://hugo.suwa3.me/post/2020-02-04-%E4%BA%BA%E7%94%9F%E5%88%9D%E8%87%AA%E5%AE%85%E3%81%A7%E3%83%95%E3%83%AB%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88/</link>
      <pubDate>Tue, 04 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-04-%E4%BA%BA%E7%94%9F%E5%88%9D%E8%87%AA%E5%AE%85%E3%81%A7%E3%83%95%E3%83%AB%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88/</guid>
      <description>人生初フルリモートの自宅作業です。
率直＆正直に申し上げると、まったく集中できませんでした。
朝はカフェで作業したので、まだ大丈夫だったのだけれども
自宅で作業はできないことがわかりました。
仕事は嫌いじゃないしむしろ好きなのに、できない。
情けなくて泣けてしまう😢
自宅のソファに座ってしまうと、生活のこまごました事に意識を奪われてしまう。そういった邪魔ものを視界から排除して、監視役を雇うか強い心を手に入れる必要がある。
明日からどうしようかと考えた。
フルリモートは諦めてオフィスで作業する
↑最終手段。基本やだの姿勢。 朝夕のラッシュを避けてフレックス利用オフィス勤務
↑良いかも。朝夕のみ自宅で作業なら集中力大丈夫そう。 最寄りのカフェを利用
↑お金かかる。通勤に時間を奪われないのは利点。 無料コワーキングを利用
↑オフィス通勤と変わらん。却下。 さっきこれ貰った
明日はこれを使って1日カフェ作業しようと思う。
**気持ちの優先順位
**1. 満員電車に乗りたくない。
2. 通勤に時間を取られるの嫌だし、移動自体が面倒くさいけれど、定期が無駄になる且つカフェ代かかるのも嫌。天秤..
予想
来週にはカフェ作業にも飽きて
朝夕のラッシュを避けてフレックス利用オフィス勤務している。
しかし、せっかくフルリモートできる権利があるのだし、もう少し試行錯誤したい。
仕事ができている人たちは、自宅でどう集中力を保っているのか調べて実践してみよう。</description>
    </item>
    
    <item>
      <title>インフラエンジニア雑話</title>
      <link>https://hugo.suwa3.me/post/2020-02-02-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E9%9B%91%E8%A9%B1/</link>
      <pubDate>Sun, 02 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-02-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E9%9B%91%E8%A9%B1/</guid>
      <description>Mastodon構築後にやりたいこと Mastodonの構築、サーバーの引っ越しにかなり工数を取られている。
今はHackMDに構築の手順をまとめる作業をしている。
自分が何をしているのか迷子になりがち😢
構築をしたらやりたいことが沢山あるの。
- 実情に合わせたpostgreSQLチューニング
- NginxにLua組み込んでログ収集
- Lambdaをエンドポイントにしたbotを動かす
- トゥート内容のデータ分析
目白押しなので
安定稼働できるインスタンスを丁寧に構築したい。
趣味鯖でも何かやりたいと思ったときに、結果を数字で出す努力や工夫をしておくと、後々それを人前で発表する際に可視化しやすいなと感じた。
元々コンテンツとして目で見て分かるものなら良いけれども、インフラは目で見て分かることが少ないと感じる。
未経験からインフラエンジニア 目で見て分かりづらいといえば
｢未経験でITエンジニアになるのなら、インフラエンジニアがお勧め｣
と、書いている人がいた。
プログラミングは挫折しやすいから、とのこと。
未経験であれば
『インフラエンジニアはプログラマーよりもお勧め』
と、言えるのだろうか。
未経験の場合、就活の際にキモとなるのが
ポートフォリオ等の成果物だと思うのだけれども
インフラエンジニアはそれらをどう用意して 見せる ことが出来るかが難点だと思う。
ポートフォリオとして見せるものをGitHub上に置くとして
インフラ初学者にとってAWSとGitHubの組み合わせは、トークン(下手したら秘密鍵など)を全世界に公開してしまうリスクがあるため
少なくともAWSやGitHubに詳しいメンターが付いた方が良いくらいハードルの高さがあると感じる。
構築に関しては実際に構築したOSSのURLだけではなく、構築の手順を記事化したものもポートフォリオになりうるけれども
そういった知識がなければ闇雲に構築するのみになってしまう。
逆にGitHubにポートフォリオとして示しやすいものは
AnsibleやTerraformだと思うけれども
正直未経験者に無からそれを書けというのは結構キツいものがあると感じる。
プログラミングと比較してみて
上記に挙げたような成果物を用意することに対して
興味を保ち、続けることができるのであれば
そこで初めて
『インフラエンジニアがお勧め』
と、言えるなぁと思いました。
技術的なサイクル速度がプログラミングと比較したら小さいという点は、確かに少ない時間をやりくりして独学から転職することには向くかもしれない。
『 一つの言語を、実務で使いものになるレベルまで学ぶのに1000時間はかかる』
というのを読んで、特に技術サイクルの速い分野では独学の厳しさを感じた。
認定Kubernetes管理者（CKA） 先日、CKAという資格があることを知ったの。
学ぶ内容として下記が挙げられていて
Kubernetesクラスターを管理する方法 Kubernetesクラスターを設計する方法 Kubernetesクラスターをゼロから構築する方法 Kubernetes Clusterをエンドツーエンドでテストする方法 Kubernetesクラスターのトラブルシューティング方法 Kubernetesクラスターを保護する方法 Kubernetesクラスターでストレージを構成する方法 Kubernetesクラスターでネットワークを構成する方法 一度これらについて調べて、k8sを学ぶときの指標にしたいなぁと思った。
技術自体が複雑で難解だと感じる。
いろいろな記事を漁っても、なかなか具体的な解説が少なくて抽象的な解説に終始しているし
公式リファレンスには一通り目を通したけれども、概念や設定方法についてはわかっても
設計運用の指標や、トラブルシューティングのような実運用に沿った情報量が少なく不安がつきまとう。
アンテナを張り巡らせたい。</description>
    </item>
    
    <item>
      <title>いにしえの</title>
      <link>https://hugo.suwa3.me/post/2020-02-01-%E3%81%84%E3%81%AB%E3%81%97%E3%81%88%E3%81%AE/</link>
      <pubDate>Sat, 01 Feb 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-02-01-%E3%81%84%E3%81%AB%E3%81%97%E3%81%88%E3%81%AE/</guid>
      <description>NginxとHTMLの簡易コンテナDockerfileを書いて
試行用に使っていたのだけれども
&amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;marquee bgcolor=&amp;#34;#808000&amp;#34; width=&amp;#34;30%&amp;#34; direction=&amp;#34;right&amp;#34; scrolldelay=&amp;#34;50&amp;#34; truespeed&amp;gt; &amp;lt;font size=&amp;#34;3&amp;#34; color=&amp;#34;#FFA500&amp;#34;&amp;gt; &amp;lt;b&amp;gt; TEST &amp;lt;/b&amp;gt; &amp;lt;/font&amp;gt; &amp;lt;/marquee&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; そのときに書いたHTMLのmarqueeタグについて
「なにこのタグ！？」
と突っ込まれて、時代を感じました。
ちなみに、このHTMLを埋め込むとこうなります。
TEST
懐かしい動き(笑)
15年前、まだわたしが中学生の頃は
HTMLひとつのファイル内にCSS的な動きをするものも埋め込むことで
読み込むファイル数を減らし、表示速度に気を配りつつ
imageのみ別ファイルで、容量を落として使っていたの。
当時はモバイルサイトが主流で
パケ放題などもなく、パケット代は従量課金制が多かったので
いかに
「パケット代を節約して表示させることが出来るか」
に、心血を注いでいた。
おそらく(アマチュア界で)CSSで装飾することが当たり前になってきたのは
2010年頃にCSSの大きな改定があってからで
その頃からわたし自身も
「こういったHTMLワンファイル運用は非推奨なんだな」
と、気を配るようになった記憶がある。
当時書いていたコードが、今では古代文字かのごとく
「なにこのタグ！？」
と言われてしまうのだな..
と、少し寂しくなりました。</description>
    </item>
    
    <item>
      <title>Docker &amp; k8s ハンズオン</title>
      <link>https://hugo.suwa3.me/post/2020-01-31-docker-k8s-%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</link>
      <pubDate>Fri, 31 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-31-docker-k8s-%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</guid>
      <description>DockerとKubernetesの女性限定ハンズオンに行ってきました。
コンテナ技術系のハンズオンや勉強会などは有料なことが多いなか
こちらは無料で技術や知識のある方々に教わることができて良かったです。
資料も丁寧に作り込まれているなぁと感じました。
初心者向けDocker/Kubernetesハンズオン[女性限定] - connpass
タツノコハイツさんのGitHub上に資料が上がっていて
tatsunoko-heights/docker-kubernetes-handson
この資料をもくもくと進めつつ
わからないところなどを自由に質問する形式でした。
Dockerは今まで
docker-compose.ymlを書く シンプルに動くDockerfileを書く イメージをbuildする イメージをもとに必要な機能をdocker execしつつ実装していく というフローで作成していくことが多くて
今回のハンズオンのように、シンプルなUbuntuをrunさせて
初っ端から、そのコンテナ内に入りプログラムを動作させて
それらをイメージとして固めると行った手順での作業は初めてだったの。
色々な方法があるのだろうけれども
普段自分が見ているDockerを、別の角度から見ることができた気分です。
後半はk8sの概要解説とハンズオンでした。
k8sに関しては、個人的に知りたいことがあったので
コーチ役の方に質問たくさんできたのが嬉しかったです。
むしろせっかく聞ける人がいるのだから
聞かないと損だな！根性で聞きまくりました😃
初歩的な質問にも、親切丁寧に答えて頂けて良かったです。
deployment.ymlの自動修復機能が
k8sのsystem系にも適用されていると思い込んでいたのと
あとは以前、デプロイしたk8sダッシュボードの処理に困っていたの。
諸々の困りごとや不安が解消されたので助かりました。
正直まだまだ分からないと感じることが山ほどあって
調べたり手を動かしたり、こういった勉強会に参加しつつ
少しずつ地盤を安定させて
「わからない怖さ」
から脱却したいなぁと感じます。
個人的に感動したのが
$ docker run lukaszlach/merry-christmas で、出たこれ。
かわいい🐳</description>
    </item>
    
    <item>
      <title>読書欲</title>
      <link>https://hugo.suwa3.me/post/2020-01-29-%E8%AA%AD%E6%9B%B8%E6%AC%B2/</link>
      <pubDate>Wed, 29 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-29-%E8%AA%AD%E6%9B%B8%E6%AC%B2/</guid>
      <description>謎の読書欲です。
知識吸収したくて仕方ない時期的な。
読みたい小説List
銀河ヒッチハイク・ガイド エンダーのゲーム 戦争は女の顔をしていない 2020 ITエンジニア本 大賞
上記サイトより引用
川合秀実の『作って理解するOS』がランクインしている。
書店で探してみようかなぁ。
来月末2/29(土)~3/1(日)の技術書典。
https://techbookfest.org/
行ってみたい。
29日にAWS認定資格試験なので、サッと寄る感じかな。</description>
    </item>
    
    <item>
      <title>マストドン構築3日目</title>
      <link>https://hugo.suwa3.me/post/2020-01-28-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%893%E6%97%A5%E7%9B%AE/</link>
      <pubDate>Tue, 28 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-28-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%893%E6%97%A5%E7%9B%AE/</guid>
      <description>Mastodonの構築をしていました。
マストドン構築3日目 on AWS
今日学んだこと
serviceコマンドでNginxのconfigtest や status のチェックが出来る
$ service nginx configtest $ service nginx status ● nginx.service - A high performance web server and a reverse proxy server Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled) Active: active (running) (Result: exit-code) since Tue 2020-01-28 05:16:57 CET; 31min ago (略) nginxコマンドで設定が生きているかのテストが出来る
$ nginx -t あとは今まで通り/var/log/nginx の下で、access.logとerror.logの確認です。</description>
    </item>
    
    <item>
      <title>お昼はイタリアン</title>
      <link>https://hugo.suwa3.me/post/2020-01-22-%E3%81%8A%E6%98%BC%E3%81%AF%E3%82%A4%E3%82%BF%E3%83%AA%E3%82%A2%E3%83%B3/</link>
      <pubDate>Wed, 22 Jan 2020 12:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-22-%E3%81%8A%E6%98%BC%E3%81%AF%E3%82%A4%E3%82%BF%E3%83%AA%E3%82%A2%E3%83%B3/</guid>
      <description>嬉しいこともあったよ。
スタッフとして参加させて頂いている開発コミュニティで
アイディアを出したら、それが採用されて
あるプロジェクトを運用することになったのだけれども
『プロジェクトを何か一から作る』
というのが未経験なので、プロジェクトを作る方法からググりました。
まずは目的を明確にする必要があるらしい
ということが分かったので
誰に向けたサービスなのかなど考えました。
そのあとは
発生する作業の洗い出し かかる時間の予測(ざっくりとスケジュール感の共有) 担当者を決める 同時進行で仲間集め＆役割の分担 ここまで調べつつ考えていて
「これは、そのままハッカソンでの作業なのでは！」
と、思いました。
プロマネ、なかなか普段できない経験なので
いろいろと先輩方からアドバイスを貰えて
場を提供して頂けるの、感謝です。
コツコツと出来る範囲で役に立てたら良いなぁと思いました。
まずは色々と参考になりそうな類似サービスを見てみて
考えたアイディアを、先輩方にレビューしてもらいつつ進めたいです。</description>
    </item>
    
    <item>
      <title>微風邪</title>
      <link>https://hugo.suwa3.me/post/2020-01-21-%E5%BE%AE%E9%A2%A8%E9%82%AA/</link>
      <pubDate>Tue, 21 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-21-%E5%BE%AE%E9%A2%A8%E9%82%AA/</guid>
      <description>なんだか微風邪です。
Django流石にもう少し勉強しなければ
と、感じたので
少しずつ気づいたことをまとめていきたいです。
Slackの自動化で色々と学べて嬉しかったので
インフラっぽいことやるために
マストドンの構築3日目に、早く取り掛かりたいです。
構築が完了して引っ越しが済んだら
botたくさん書いてDBのチューニング試したい。</description>
    </item>
    
    <item>
      <title>Slackの自動化</title>
      <link>https://hugo.suwa3.me/post/2020-01-20-slack%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96/</link>
      <pubDate>Mon, 20 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-20-slack%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96/</guid>
      <description>Slackの自動化はとりあえず最後までいきました。
PythonやXPathなど勉強になってよかったです。
クローラ作成に必須！XPATHの記法まとめ - Qiita
作ったものは隠すところを環境変数化してGitHubにupしました。
selenium-slack - github
あとはREADME.mdなどまとめたいです。
自動化で、手こずるなぁと感じたのが
CSSのidで指定できないときにXPathでの指定で、
まぁまぁややこしいなと感じた。
あとは直接入力なのか、クリック入力なのか
細かな差でコードがかなり変わるので
実際に手で操作方法を念入りに確認しながら進めるのが近道だなと感じました。
今回はデバッガーがとても役立った。
import pdb #pdbをインポート pdb.set_trace() #止めたい位置に挟む 本当にのんびりとした歩みだけれども
少しずつ出来ることが増えていくの嬉しい。</description>
    </item>
    
    <item>
      <title>Slack見落とし撲滅作戦 Python &#43; Selenium</title>
      <link>https://hugo.suwa3.me/post/2020-01-19-slack%E8%A6%8B%E8%90%BD%E3%81%A8%E3%81%97%E6%92%B2%E6%BB%85%E4%BD%9C%E6%88%A6-python-selenium/</link>
      <pubDate>Sun, 19 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-19-slack%E8%A6%8B%E8%90%BD%E3%81%A8%E3%81%97%E6%92%B2%E6%BB%85%E4%BD%9C%E6%88%A6-python-selenium/</guid>
      <description>Slackで、自分宛てにメンションされたものを見落としてしまい
どうしたものかと悩んでいた際に、同僚から
「Slack内の検索窓で『to:@&amp;lt;自分の名前&amp;gt;』って検索すれば、自分宛てのメンションを検索できますよ」
と、教えてもらい
「そんな機能あるのか！」
と、感動したと同時に
「しかしその検索する行為ですら、わたしは忘れてしまう人間なのだ！」
と、絶望したので
なんとか教えていただいた便利機能を有効的に使えないかと考えたのが
『Slack見落とし撲滅作戦』
です。
案① ブラウザ版Slack内の検索窓で｢to:@&amp;lt;自分の名前&amp;gt;｣と毎朝検索するのを習慣化する
案② たぶん習慣化できないのでPython + Seleniumで自動化する
とりあえず途中までやったので
備忘録です。
環境 MacOS Mojavi 10.14.6 Python3 pip 環境分離してseleniumをインストール selenium-slackディレクトリを作成します。
$ mkdir selenium-slack $ cd selenium-slack/ 仮想環境を作成します。
$ python3 -m venv myvenv 有効化します。
$ source myvenv/bin/activate seleniumをインストールします。
$ pip3 install selenium ChromeDriver のインストール ChromeDriverとは、Google Chromeを操作するために必要なドライバ（ソフト）です。 ブラウザごとに専用のドライバが用意されています。
バージョンを指定してChromeDriverをインストールします。
例えば、現在つかっているChromeのバージョンをチェックして
それに合わせたバージョンのChromeDriverをインストールします。
ChromeDriver - WebDriver for Chrome
例えば79であれば、こちらです。
ChromeDriverプログラムのパスを指定してあげます。
$ driver = webdriver.Chrome(executable_path=&amp;#39;./chromedriver&amp;#39;) 試しにサンプルを書いてみます。
$ vim sample.</description>
    </item>
    
    <item>
      <title>勉強会</title>
      <link>https://hugo.suwa3.me/post/2020-01-17-%E5%8B%89%E5%BC%B7%E4%BC%9A-2/</link>
      <pubDate>Fri, 17 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-17-%E5%8B%89%E5%BC%B7%E4%BC%9A-2/</guid>
      <description>参加申込をした勉強会です。
Ansiblejpディベロッパー部 2020.01 - connpass
Ansibleについてもっと学びたいので参加を申し込みました。
とても人気で、補欠枠なのでキャンセル待ちです😢
行けたら良いなあ。
第1回 自作CPUもくもく会 - connpass
自作OSもくもく会の方が主催している自作CPUもくもく会です。
CPUのことをより深く学びたいので参加します。
興味があるから、というのが大きいですが
CPUについてイメージがわかなくて、仕事をする上でも
「結局CPUって何なんだろう」
という気持ちになるので、少しでもモヤモヤが晴れたら良いなと思います。
PHP入門講座 - connpass
PHP、もう少し体系的に知りたいので参加を申し込みました。
これも補欠枠なので、キャンセル待ちです！
第28回 SQL Server 2019勉強会 - connpass
正直SQL serverよく知らないのですが、知人の紹介で
「Linuxユーザーのかたも参加していて、勉強になると思う！」
と、強く勧められたので試しに参加してみます。
データベースの勉強になれば良いなぁ。
「テクノロジーで未来の学びを考える」 2DAYS EdTech Hackathon
こちらは予定が合わず参加できないのですが
予定が合えば参加したかったハッカソンです。
自分の興味のあるお題で、自由にアイディアを出して開発出来るのが、楽しそうだと感じるので
今後も、良い感じのハッカソンが開催されていないか探していきます。</description>
    </item>
    
    <item>
      <title>マストドン構築 2日目</title>
      <link>https://hugo.suwa3.me/post/2020-01-16-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%89-2%E6%97%A5%E7%9B%AE/</link>
      <pubDate>Thu, 16 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-16-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%89-2%E6%97%A5%E7%9B%AE/</guid>
      <description>サッと終わらせるはずが
まさかのマストドン9.2.3はRubyバージョン2.6.1でしか動かないらしく
Rubyのバージョン指定して入れ直しをしていたら時間かかりました😢
設定ファイルの編集まで終わりました。
メールサーバーのパスワード間違えたので
あとで.env.production の編集します。
あとはCSS/JSのコンパイルで時間がかかりすぎて途中でコケてしまったので
assets:precompileから指定して再開しました。
まとめたQiita記事がこちらです。
マストドン構築2日目 on AWS
本当はメールサーバーの設定も詳細記述できれば良かったのですが
SESの申請から解説するのは流石にしんどかったので
mailgunの宣伝だけしました！</description>
    </item>
    
    <item>
      <title>DBの神様</title>
      <link>https://hugo.suwa3.me/post/2020-01-14-db%E3%81%AE%E7%A5%9E%E6%A7%98/</link>
      <pubDate>Tue, 14 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-14-db%E3%81%AE%E7%A5%9E%E6%A7%98/</guid>
      <description>DBの神様が降りてきたので
PostgreSQLの設定について、ひたすらふむふむしていました。
そして、こちらもWordPressではなく
Qiitaにフライングした。
PostgreSQLの設定内容 ~PGTuneを使ってみて~
調べていて参考になるなぁと思った記事がこちらなのだけれども
今すぐできるPostgreSQLチューニング
記事自体が古くて心配だったので、こちらも読みつつだったの。
PostgreSQL 9.6.5文書 第19章 サーバの設定
結構、根幹的な部分って変わらないのだなぁと思いました。
DBだから？
たまにオプションが一部変更になったり
新しく機能が追加されたりするくらい。
そこそこ古い記事でも、公式と行ったり来たりすることで
参考にすることができるの良いなと思いました。</description>
    </item>
    
    <item>
      <title>マストドン構築1日目</title>
      <link>https://hugo.suwa3.me/post/2020-01-13-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%891%E6%97%A5%E7%9B%AE/</link>
      <pubDate>Mon, 13 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-13-%E3%83%9E%E3%82%B9%E3%83%88%E3%83%89%E3%83%B3%E6%A7%8B%E7%AF%891%E6%97%A5%E7%9B%AE/</guid>
      <description>本当はWordPressに書くつもりだったんだけれども。
Qiitaにフライングしました。。
マストドン構築1日目 on AWS
Markdownで書き始めたらWordPressに書くの面倒くさくなってしまった。
構築をしていて、Ubuntu上にPostgreSQL-9.6のバージョンを指定して入れようとしたら失敗したの。
マストドンの構築ドキュメントをザッと読み直したけれども
特に何も書かれていなくて
そういった場合は、入れるもの(今回であればUbuntuではなくPostgreSQL)の公式リファレンスを調べるのが近道だと学びました。
だいたい素の状態に入れる内容であれば
「この場合はこうしてね」
といった注意事項が書かれているのだなぁと思った。
errorや予想外の事態に沢山遭遇して
「こういった場合はここに情報があるんだな」
といった経験値を沢山積みたい。
問題解決能力の高いエンジニアになりたいです。</description>
    </item>
    
    <item>
      <title>自作OSもくもく会</title>
      <link>https://hugo.suwa3.me/post/2020-01-12-%E8%87%AA%E4%BD%9Cos%E3%82%82%E3%81%8F%E3%82%82%E3%81%8F%E4%BC%9A/</link>
      <pubDate>Sun, 12 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-12-%E8%87%AA%E4%BD%9Cos%E3%82%82%E3%81%8F%E3%82%82%E3%81%8F%E4%BC%9A/</guid>
      <description>ついに行ってきました！
張り切りすぎて(？)前日にサイボウズさんのビルの目の前まで行って
下見を済ませたくらいだったので当日はとってもスムーズに行くことが出来ました😃
とりあえず
『macOS上で緑本をやってみました』
系の記事を探して、取り掛かろうかなぁ。なんて考えていましたが
Kindleで探したら
「30日でできる！OS自作入門」
の、6日目くらいまでは無料サンプルでいけそうだったので
6日目まで続いたら買おう😃
と、いうことでKindle版をDLして進めることにしました。
そしてmacOS上で自作するための開発環境も
GitHub上に上がっているのを見つけました！
『30日でできる！ OS自作入門』のmacOS開発環境構築
こちらの開発環境でOSを起動させてみました。
あと、結構参考になるお勧め記事がこちらです。
http://electricsheep.hatenadiary.jp/entry/2019/09/23/103235
また、手前味噌ですが
より簡易的なOSを自作したblogがこちらになります。
(内容的には緑本の2~3日目くらいまでだと思います)
https://wp.suwa3.me/2019/12/14/os%e8%87%aa%e4%bd%9c/
以下読書感想文なのですが
レジスタは機械語ににおける変数のようなもので、CPUにとってメモリは外部記憶装置にあたるが、CPUのコアに内蔵されている記憶回路はレジスタしかない。
OS自作入門
というのを読んで目から鱗でした。
以前、簡易的なOS自作をしたさいにまとめた自分のレジスタについての説明も読み返したけれども
「レジスタ: CPU内の記憶装置です。それぞれに役割があり〜」
と、書かれていて
「そうだけど..うーん」
となる感じ。
説明的には正しいけれども、腹の底からわかってはいないのでは？
と、過去の自分に突っ込みたくなるときあるあるって感じでした。
OS屋にとっては、ソースプログラムなんて、結局は機械語を得るための「手段」であって目的ではないのです。
OS自作入門
外側から見るか内側から見るかなのかなぁ。
プログラマは世の中の営みを抽象化してプログラミングというツールをつかい落とし込むけれども
OS屋はそこから低レイヤーになって、視点が一つ下の層に移動した感覚があるのかな？と、感じました。
自分が普段扱っているコンピューターについて向き合いながら
少しずつでも知ることができて嬉しいです。</description>
    </item>
    
    <item>
      <title>ポケモンと優先順位</title>
      <link>https://hugo.suwa3.me/post/2020-01-11-%E3%83%9D%E3%82%B1%E3%83%A2%E3%83%B3%E3%81%A8%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D/</link>
      <pubDate>Sat, 11 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-11-%E3%83%9D%E3%82%B1%E3%83%A2%E3%83%B3%E3%81%A8%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D/</guid>
      <description>ポケモン 久しぶりにポケセンへ行きました。
12日に日本橋で自作OSもくもく会に参加予定だったのですが
何を勘違いしたのか11日に新橋でやる気満々の状態で
「場所も日付も違った」
ということに気づいて衝撃でした。
衝撃でした。
新橋から日本橋に移動をして
サイボウズがあるビルの下見をしてから
ふと周囲を調べたらポケモンセンターが近くにあることがわかったので
寄り道をしました。
戦利品です。
久しぶりにポケモンに囲まれる幸福感や、ワクワク感を味わえて良かったです。
優先順位 その後は渋谷に移動して作業しました。
EC2にいるDcokerと無言の戦いを続けて
今後の構築や運用について具体的に計画を立ててTODO作成などしました。
年明けには
「やりたいことがほとんど無いなぁ」
といった状態だったのに、最近になって急増したので
整理しつつ優先順位などを明確にしたいです。
例えばなのですが
技術的なサイクルが速く、素早く学びたい・片付けたいものに関しては
関心の度合いに関わらず
わたしの中で優先度は「高い」になります。
具体的に
AWSのコンテナマネジメントサービスであるECSとEmacsを比較した場合に
3年後の時点でECSを使わない可能性と、Emacsを使わない可能性を考えて
ECSのほうが技術的なサイクルが速いと予測して、ECSの技術習得を優先します。
Emacsにおいては存在自体が比較的安定しているため、優先度は低いですが
継続してコツコツと関わっていきたいと考えます。
また、例外として
資格取得など期限があるものは優先度が高くなります。
優先度 高 AWS認定資格 2月 don.suwa3.me Dockerから降ろす Django API実装 優先度 中 オープニング作る ハッカソン 優先度 低 OS自作 ラズパイセットアップ wp.suwa3.me onラズパイ vimの設定 ターミナルの設定 Emacs環境整える OSの自作に関しては、教養のためだなぁと感じます。
ラズパイについても、もくもく会に参加して継続していきたいです。
せっかくプライベートでやるのなら
仕事ではできないような、完全なる趣味全開モードで楽しみたいです。</description>
    </item>
    
    <item>
      <title>Mastodon</title>
      <link>https://hugo.suwa3.me/post/2020-01-10-mastodon/</link>
      <pubDate>Fri, 10 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-10-mastodon/</guid>
      <description>現状について整理してまとめたいと思います。
Mastodonとは まず、タイトルにあるMastodonですが
ドイツのプログラマーであるオイゲン氏が開発した、オープンソースの分散型SNSです。
Twitterライクな使い心地で
カラム表示に慣れれば、使い勝手はTwitterとあまり変わりません。
主だった違いとしては
まずオープンソースのため、GitHub上でソースコードが公開されており
誰でも構築・運用することが可能です。
また分散型であるため、それぞれのインスタンスで連携することが出来ます。
元々わたしはMastodonのユーザー側で
今はなきknzk.meをはじめとして、ポケマス、ドン・ゴロツキやjp、板橋丼など
様々なインスタンスに登録して、趣味コミュニティへの参加や
デザイン、機能などの違いを楽しむのが好きでした。
Mastodonについて、雰囲気をよく表現しているなぁ
と、感じた文章を見つけたので引用します。
https://twitter.com/noellabo/status/1076263455324160000?s=20
愛着のあったインスタンス閉鎖をきっかけに
自立したインスタンス運営をしたいと感じて
自力での構築、運用に挑戦したのが始まりです。
現状での構成 / 今後について 現状での構成が以下になります。
Webサービス (SNS) 構成
- EC2
- Nginx
- Docker compose
- detabase (Postgres)
- KVS (Redis)
- job queue (Side kiq)
- Websocket api
- webapplication (Ruby on rails)
- S3
- SES
- Route53
半年間、Docker上で本番運用しましたが
頻繁に不安定な状態になるため
Dockerから降ろして運用することにしました。
流れとしてはEC2インスタンスでサーバーを用意して
一からMastodonを構築し
動くことが確認出来次第、DBのリストアを行います。
構築について、主に参考にするのはGitHubリポジトリとhttps://github.com/tootsuite/mastodon
公式ドキュメントです
https://docs.joinmastodon.org/admin/prerequisites/
数年前であれば、Mastodon構築方法の記事は結構充実していたのですが
現在は見つけることが難しく、またバージョンも3系に上がったため</description>
    </item>
    
    <item>
      <title>初気絶</title>
      <link>https://hugo.suwa3.me/post/2020-01-08-%E5%88%9D%E6%B0%97%E7%B5%B6/</link>
      <pubDate>Wed, 08 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-08-%E5%88%9D%E6%B0%97%E7%B5%B6/</guid>
      <description>午前中は頭痛でクテーとしていました。
午後には回復した。
帰宅して気絶していました。
年末年始は忘れていたけれども
平日が始まって、疲れていつの間にか寝てしまっていること多発することを思い出した。
起きてからREST APIについて調べつつ
Graph APIについても調べていました。
Djangoに実装するのが現実的な路線っぽいので、まずはテストコードでお試ししたいです。</description>
    </item>
    
    <item>
      <title>認定資格</title>
      <link>https://hugo.suwa3.me/post/2020-01-07-2235/</link>
      <pubDate>Tue, 07 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-07-2235/</guid>
      <description>AWS認定資格の勉強を開始しました。
試験は3週間後です。
ギリギリ感すごいけれども頑張ろう😃
7割くらいは勘でわかるので
目標は、その7割について
「何故なのか」
を、きちんと言語化できるようになるのと
残り3割について勘でも何でも正解を導き出せるようになることです。
お昼休みにAWS認定資格の本を読んでいて
「そうそうこの機能がすてきなの〜〜」
みたいな感じでテンション上がりながら勉強できた。
資格試験の勉強で楽しいと感じたの初めてかもしれない。
今まで資格って
「苦手克服のために勉強するモチベーションを高める」
みたいな理由で勉強することが多くて
結構苦痛を感じること多かったの。
苦手なのにモチベーションもクソもないわな。
帰宅してからは
ひたすらSwaggerについてドキュメントとGitHubのソース読んで
チュートリアルや紹介スライドを読み漁るタイムしました。
REST APIについてサンプルコードを探しつつ試したい。
APIサービス良いなぁ。SwaggerとLambdaで何かつくってみたい。
GAからPV数をJSON形式で出す.pyがあるのだから
せっかくならPV数でもっと遊べる簡易ツール系でも良いなぁ。
空前のAPIマイブーム</description>
    </item>
    
    <item>
      <title>ぐでぐで</title>
      <link>https://hugo.suwa3.me/post/2020-01-05-%E3%81%90%E3%81%A7%E3%81%90%E3%81%A7/</link>
      <pubDate>Sun, 05 Jan 2020 13:00:35 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-05-%E3%81%90%E3%81%A7%E3%81%90%E3%81%A7/</guid>
      <description>本日はぐでぐでしていました。
こういったぐでぐでに罪悪感を感じず徹底的に休みたい。
やりたいことが具体的に増えました。
週末にラズパイのセットアップを済ませて
Linuxとして使えるようにします。
sshログインできるようにする。
DjangoはRoute53でサブドメイン切って
Nginxの設定します。あとGunicornをWebサーバーとして間に噛ませます。
(ちなみに、どんすわはPumaで動いています)
どんすわは全く安定しなくてAWS課金増えている疑惑があるので
安定稼働のためにDockerから降ろします。
あとwp.suwa3.meはApacheの練習とLAMP環境の構築をしてみたくて
新規のEC2を一つたてたけれども
普通に無料枠超えて今月の支払いが$20超えしたので
ラズパイに引っ越そうと思っています。
これは素に近いLinuxの勉強をしたい目的です。
勉強のためならガンガン引っ越す🙋
最後に
HPを表示させたとき
CSSなどでオープニングを表示させたいなぁと考えていて
一度、手頃なものを探して動かし方を把握したら
自分好みの動きを模索して
CSS書けたら良いなぁって妄想です。やるぞ😃</description>
    </item>
    
    <item>
      <title>TODO</title>
      <link>https://hugo.suwa3.me/post/2020-01-03-todo/</link>
      <pubDate>Fri, 03 Jan 2020 13:00:19 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-03-todo/</guid>
      <description>TODO作成しました。
今日は色々とDjangoで機能実装して
Qiita記事をGitHubに突っ込んだり
Qiita記事に書きたいWordPressの記事選定をしたりしました。
あとはうさぎの絵を描きたいなあ。
雰囲気はそのままで、もっとアイコンっぽいの描きたい。</description>
    </item>
    
    <item>
      <title>新年</title>
      <link>https://hugo.suwa3.me/post/2020-01-01-%E6%96%B0%E5%B9%B4/</link>
      <pubDate>Wed, 01 Jan 2020 13:00:45 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2020-01-01-%E6%96%B0%E5%B9%B4/</guid>
      <description>新年の挨拶に行ってきました。
日中はいとこにDjangoの布教をしましたが
Java経験あるとのことなので
普通にJavaで攻めたら良いのでは..と思いました。
夕方はホテルに戻りお昼寝をして
夢の中でプログラミングしていたので
幸先の良い初夢でした。
そのままDjangoいじって修正箇所をgit pushです。
でも殆どがバージョンupによるerror潰しと
.gitignoreされる内容だったので
まあどんまいです。
明日以降どんどん機能実装して
ローカルで動作確認したいです。</description>
    </item>
    
    <item>
      <title>Pixelaでツールチップを表示させてみる</title>
      <link>https://hugo.suwa3.me/post/2019-12-29-pixela%E3%81%A7%E3%83%84%E3%83%BC%E3%83%AB%E3%83%81%E3%83%83%E3%83%97%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%81%A6%E3%81%BF%E3%82%8B/</link>
      <pubDate>Sun, 29 Dec 2019 09:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-29-pixela%E3%81%A7%E3%83%84%E3%83%BC%E3%83%AB%E3%83%81%E3%83%83%E3%83%97%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%9B%E3%81%A6%E3%81%BF%E3%82%8B/</guid>
      <description>https://twitter.com/a_know/status/1211083167249006592?s=20
開発者ご本人から反応頂けて
びっくり嬉しい恐縮
寝起きから手に汗かいたよ😃
Twitterすごいな..
ということで
さっそくツールチップ表示に挑戦してみました。
実はjQuery未経験で
「いつかやらなきゃなぁ」
と思っていたので、とても良い機会なので勉強してみました。
まずはhttps://jquery.com/を読む！なるほど〜
カスタムHTMLの中身を書きます。
div id でidを指定して
$(&#39;セレクタ&#39;).メソッド(引数); で読み込めるんだねぇ。
主な使い方は以下を参照にしました。
https://www.notitle-weblog.com/getting-started-jquery
&amp;lt;!-- jQuery本家CDN --&amp;gt; &amp;lt;script src=&amp;#34;https://code.jquery.com/jquery-3.3.1.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;!-- Pixela --&amp;gt; &amp;lt;div id=&amp;#34;svg-load-area&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.com/tippy.js@3/dist/tippy.all.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; document.addEventListener(&amp;#39;DOMContentLoaded&amp;#39;, function(){ $(&amp;#39;#svg-load-area&amp;#39;).load(&amp;#39;https://pixe.la/v1/users/suwa3/graphs/wp-graph?mode=short&amp;#39;, function(){ tippy(&amp;#39;.each-day&amp;#39;, { arrow: true }); }); }); &amp;lt;/script&amp;gt; &amp;lt;div style=&amp;#34;text-align:center;&amp;#34;&amp;gt;Powered by &amp;lt;a href=&amp;#34;https://pixe.la/&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;Pixela&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt; こんな感じで表示されるようになりました👏
やったね～</description>
    </item>
    
    <item>
      <title>Pixelaという草APIサービスを利用して、WordPressのPV数をGitHub風に草生やしてサイドバーに表示させたい(丁寧に)</title>
      <link>https://hugo.suwa3.me/post/2019-12-28-pixela%E3%81%A8%E3%81%84%E3%81%86%E8%8D%89api%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6wordpress%E3%81%AEpv%E6%95%B0%E3%82%92github%E9%A2%A8%E3%81%AB-2/</link>
      <pubDate>Sat, 28 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-28-pixela%E3%81%A8%E3%81%84%E3%81%86%E8%8D%89api%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6wordpress%E3%81%AEpv%E6%95%B0%E3%82%92github%E9%A2%A8%E3%81%AB-2/</guid>
      <description>https://wp.suwa3.me/2019/12/25/pixela%e3%81%a8%e3%81%84%e3%81%86%e8%8d%89api%e3%82%b5%e3%83%bc%e3%83%93%e3%82%b9%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%a6%e3%80%81wordpress%e3%81%aepv%e6%95%b0%e3%82%92github%e9%a2%a8%e3%81%ab/
こちらのblog内容の続きです。
準備内容だとか箇条書きな感じになっているので
もう少し丁寧に書きます。
まず、GitHub風に草を生やすことができるPixela
超かわいい！！と、見た瞬間一目惚れして
ぜひこれでblogのPV数をサイドバーなどに表示させたいと思いました。
(スマホの場合は下にスクロールしてもらうと記事＆検索窓の下に表示されます)
順序としては以下のとおりです。
PixelaでユーザーとIDを作成してグラフを表示させてみる PV数を調べるため、対象blogにGoogleAnalyticsを導入する GoogleAnalytics APIを利用してjsonファイルをDLする PythonでjsonファイルからPixelaの求める出力ができるように整形する ディレクトリをサーバーなどに置いてcron実行させる htmlにで埋め込む PixelaでユーザーとIDを作成してグラフを表示させてみる https://pixe.la/
こちらのサービスですが
基本的にすべてWeb APIで構成されるサービスになるため
ユーザーやIDの登録など、設定もAPIで行います。
初めはユーザー登録からAPIで設定することにハードルの高さを感じたのですが
使ううちに、無駄がなくて洗練されているなぁと感じるようになりました。
以下の
a-know には自分の希望ユーザー名
thisissecret にはパスワードを入力します。
$ curl -X POST https://pixe.la/v1/users -d &amp;#39;{&amp;#34;token&amp;#34;:&amp;#34;thisissecret&amp;#34;, &amp;#34;username&amp;#34;:&amp;#34;a-know&amp;#34;, &amp;#34;agreeTermsOfService&amp;#34;:&amp;#34;yes&amp;#34;, &amp;#34;notMinor&amp;#34;:&amp;#34;yes&amp;#34;}&amp;#39; 成功すると以下が表示されます。
{&amp;#34;message&amp;#34;:&amp;#34;Success.&amp;#34;,&amp;#34;isSuccess&amp;#34;:true} test-graph には希望するID(URLに使われます)
graph-name には希望する名前
commit には希望する単位(kgやｍなどでもOK)
int は、今回はPV数ということで整数を扱うのでそのままです。
shibafu には色を入力します。
green,red,blue,yellow,purple,blackから選べます。
$ curl -X POST https://pixe.la/v1/users/a-know/graphs -H &amp;#39;X-USER-TOKEN:thisissecret&amp;#39; -d &amp;#39;{&amp;#34;id&amp;#34;:&amp;#34;test-graph&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;graph-name&amp;#34;,&amp;#34;unit&amp;#34;:&amp;#34;commit&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;int&amp;#34;,&amp;#34;color&amp;#34;:&amp;#34;shibafu&amp;#34;}&amp;#39; 成功すると以下が表示されます。
{&amp;#34;message&amp;#34;:&amp;#34;Success.&amp;#34;,&amp;#34;isSuccess&amp;#34;:true} ブラウザで以下にアクセスします。
a-know にはユーザー名 test-graph にはIDを指定してください。
https://pixe.la/v1/users/a-know/graphs/test-graph
(ユーザー名にsuwa3/IDにtest-graphを指定した例)</description>
    </item>
    
    <item>
      <title>ひたすらAPI</title>
      <link>https://hugo.suwa3.me/post/2019-12-27-%E3%81%B2%E3%81%9F%E3%81%99%E3%82%89api/</link>
      <pubDate>Fri, 27 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-27-%E3%81%B2%E3%81%9F%E3%81%99%E3%82%89api/</guid>
      <description>ひたすらAPI叩くためにPython泣きながら書いていましたぁ。
jsonモジュールを覚えました。
使いこなしたい。
それ以前に、Pythonを基礎から叩き直したいので
Python強化週間やります。色々ダメすぎてむり〜〜〜〜
ひたすらPythonについて考え続ければ
夢の中でもPythonやってくれるかなぁ。
夢のなかでもプログラミングしてくれたら
実質勉強時間を倍以上確保できるねぇ。
がんばれ深夜のわたし😃
実際に「なんもわからん」状態で寝て
起きると何故か「わかったかも」状態になっていること多々あるので
脳内自動整理機能、侮れない。
ただひたすら楽しいの気持ちでやっていて
ガチ泣きしながらプログラミングしたり構築したりするときもあるけれども
なんだかんだ早く次のやりたいことが目白押しなので
あー切り替えよ次のやろ
って感じでやっている。
年末なので、1年間の振り返りをしつつ
来年の目標を明文化してまとめたいと思います。</description>
    </item>
    
    <item>
      <title>Pixelaという草APIサービスを利用して、WordPressのPV数をGitHub風に草生やしてサイドバーに表示させたい</title>
      <link>https://hugo.suwa3.me/post/2019-12-25-pixela%E3%81%A8%E3%81%84%E3%81%86%E8%8D%89api%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6wordpress%E3%81%AEpv%E6%95%B0%E3%82%92github%E9%A2%A8%E3%81%AB/</link>
      <pubDate>Wed, 25 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-25-pixela%E3%81%A8%E3%81%84%E3%81%86%E8%8D%89api%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6wordpress%E3%81%AEpv%E6%95%B0%E3%82%92github%E9%A2%A8%E3%81%AB/</guid>
      <description>タイトルのとおりです。
https://pixe.la/
準備 「うさぎでもわかる」にGoogle Analytics導入 Google AnalyticsにAPIでアクセスできるように設定
- Analytics Reporting APIの有効化と設定
(参照) https://tan-taka.com/diver-demo/powered/6725
- 認証に利用するjsonファイルのDL
- Google AnalyticsにAPIユーザーを追加
(参照) https://note.com/virtual_surfer/n/na161952a6d32 Google AnalyticsのデータをAPIで取得する
- GoogleのAPIにアクセスするためのライブラリをインストール
- Pythonでプログラムを書く
GoogleAnalytics
google_analytics_access.py 作業ログ # 仮想環境 $python3 -m venv myenv $source myenv/bin/activate # .pyを作成して中身を編集＆.jsonを移動 $vim google_analytics_access.py $mv ~/Downloads/wordpress-pixela-a7b704b80f96.json ~/Ishizuka427/wp-pixela/ # 依存パッケージをインストール $ pip install --upgrade google-api-python-client $ pip install --upgrade oauth2client こんな感じ
(myenv) codmon-mbp:wp-pixela a_ishizuka$ ls google_analytics_access.py myenv wordpress-pixela-a7b704b80f96.json なんとか準備おわったので
これからがんばります~
API泣きそう</description>
    </item>
    
    <item>
      <title>モノ ジ トリ テトラ ペンタ ヘキサミノパズル</title>
      <link>https://hugo.suwa3.me/post/2019-12-24-%E3%83%A2%E3%83%8E-%E3%82%B8-%E3%83%88%E3%83%AA-%E3%83%86%E3%83%88%E3%83%A9-%E3%83%9A%E3%83%B3%E3%82%BF-%E3%83%98%E3%82%AD%E3%82%B5%E3%83%9F%E3%83%8E%E3%83%91%E3%82%BA%E3%83%AB/</link>
      <pubDate>Tue, 24 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-24-%E3%83%A2%E3%83%8E-%E3%82%B8-%E3%83%88%E3%83%AA-%E3%83%86%E3%83%88%E3%83%A9-%E3%83%9A%E3%83%B3%E3%82%BF-%E3%83%98%E3%82%AD%E3%82%B5%E3%83%9F%E3%83%8E%E3%83%91%E3%82%BA%E3%83%AB/</guid>
      <description>今日も今日とてアホな遊びをしていました。
名付けて、
「モノ ジ トリ テトラ ペンタ ヘキサミノパズル」（長い）
絶妙な難易度でそこそこハマる。
Lua以外の言語でもテトリス書いてみたいなぁ。
コードに対する苦手意識をなくすために
年末年始は頑張ろうと思いました。
shell script: きちんと書けるようにする。 Python: Djangoの中でもう少し書く。 Lua: せっかくなので組み込み言語としてNginxのログ取得などやってみたい。 アセンブリ: OS自作もくもく会、年明けに参加することになったので少し書くことになりそう。でも、これはお楽しみ程度で良いかなぁ。 冬はあまり生花を飾らないのだけれども
クリスマスなので飾ってみました🎄</description>
    </item>
    
    <item>
      <title>ペンタミノ</title>
      <link>https://hugo.suwa3.me/post/2019-12-23-%E3%83%9A%E3%83%B3%E3%82%BF%E3%83%9F%E3%83%8E/</link>
      <pubDate>Mon, 23 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-23-%E3%83%9A%E3%83%B3%E3%82%BF%E3%83%9F%E3%83%8E/</guid>
      <description>朝ふっと思いついて
テトロミノに「コ」を混ぜてみようと
スマホでGitHubを開いてソースコードポチポチいじり
PRだしておいたの。
意外と簡単に形の追加はできるのだ。
そして出来上がったのがこれです。
テトリスの語源であるテトロミノって、
もともとテトラ(4)からきているの
「コ」は5ブロックつかっているので
これではペンタミノになってしまうなぁと気づいたけれども
それはそれでペンタミノパズルとして
新しいルールで改造しても面白そうだし
Blueqatの量子コンピューターシミュレーターで
ペンタミノパズルの敷き詰め最適化問題をやってみたら
テトロミノの結果との差を見るの、面白そうだなぁと思いました。
また週末にでもやってみます。</description>
    </item>
    
    <item>
      <title>termtris</title>
      <link>https://hugo.suwa3.me/post/2019-12-22-2045/</link>
      <pubDate>Sun, 22 Dec 2019 13:00:35 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-22-2045/</guid>
      <description>https://github.com/Ishizuka427/termtris
Forkという技を身に着けた！
Lua製のテトリスを取っ掛かりに
Luaについて少し学んでみようと思いました。
コードに対して苦手意識が強いと感じる。
Djangoだとかのフレームワークから入るのか
shell scriptから入るのか
NginxやApacheなどでmod_lua 使いこなせたらきっと便利だしなぁ。
&amp;hellip;などと考えているだけで、本当にただコードが苦手な人になっている。
少しずつでも手を動かして慣れます。
最近は自分の苦手なことがどんどん浮き彫りになるというか
苦手を強く自覚することが増えて
逆に何が得意なのか？という気持ちになる。
冬だから仕方ないね☃</description>
    </item>
    
    <item>
      <title>征服欲</title>
      <link>https://hugo.suwa3.me/post/2019-12-19-%E5%BE%81%E6%9C%8D%E6%AC%B2/</link>
      <pubDate>Thu, 19 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-19-%E5%BE%81%E6%9C%8D%E6%AC%B2/</guid>
      <description>歯が痛くて午後休で歯科医に行ってきました。
歯医者に電話をかけたら
「今日は臨時休診なんです」
と断られて
仕方ないので他の歯医者に電話したら
まさかの3院連続で臨時休業だったの。
何か大きな学会でもあったのかな&amp;hellip;
たまたま記事を読んでいたら見つけたの
どうしても派手で華やかな
目先の新しい技術に目がいきがちだものなぁと思った。
自作OSで感じたのは
コンピューターに関する知識欲を満たせる以上に
コンピューターに対する征服欲を満たせることに喜びを感じるのだと思った。
プログラミングは、OS基盤あっての挙動であって
こちらからOSに関与して操作することは難しいので
自身の干渉によって直接コンピューターの根幹的な部分を操作できるというのは
「このコンピューターについて、わたしは中身を理解した上で動かしている」
という征服欲を満たすことができると感じる。</description>
    </item>
    
    <item>
      <title>Blueqat Summit Tokyo 2019</title>
      <link>https://hugo.suwa3.me/post/2019-12-18-blueqat-summit-tokyo-2019/</link>
      <pubDate>Wed, 18 Dec 2019 13:00:08 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-18-blueqat-summit-tokyo-2019/</guid>
      <description>Blueqat主催の量子コンピューターをテーマにしたサミットへ行ってきました。
正直なところ
「これらのセッションのターゲットとは」
というのが、全体的に振り幅大きくて
例えば、潜在的なパートナーシップ企業へ向けたアピールセッションは
非エンジニアを対象としているし
そうかと思えばソースコードやアルゴリズムを全面に出して
ゴリゴリの技術者向けというか
学術的内容を全面に押し出したセッションもあり
かといえば量子コンピューターにあまり関係のないセッションもあるなどして
方向性の迷子感が少しありました。
まぁ、無料だし
お寿司も食べられたので良い感じです😃
個人的に、一番興味深いなと感じたセッションは
Shinya Morinoさんの
https://github.com/shinmorino/qgate
こちらのGitHubにあるQgateのお話でした。
ただMojaveではNVIDIA GPUを扱えないっぽいので
試しにやってみたいなぁと思ったけれども難しそう。
バージョンダウンするという手段もあるけれども、うーむ。。
量子力学
「事象を観測して、その事実を受け入れる」
みたいな世界観だなぁと感じるの。
根本の部分から結構ブラックボックスだけれど
本当にそれで良いの？と思ってしまう。
好き嫌いが分かれそうな分野だなとは感じた。
特に量子コンピューターは
「机上の計算では、ここまで可能です」
のような話が多くて
確かに実現すれば素晴らしいけれども
スポンサー獲得のためのパフォーマンスも含まれているのでは
と、邪推してしまう。
ある意味、ロマン要素が強すぎると感じたの。
量子コンピューターについては、情報はこれまで通り集めるし
時間さえあえば、またセミナーに参加しても良いかなとは思うけれども
深入りする分野ではないなと感じました。
以前、テトリスのパーツ最適化をblueqat(量子コンピューターシミュレーター)で解く記事を見かけて、それっきりだったので
良い機会だし、試しにやってみるのもアリかなぁと思いました。
テトロミノ敷き詰めパズルを量子コンピュータ（シミュレータ）で解いてみる - Qiita
サミットからの帰り道
とてもモヤモヤしてしまった。
モヤモヤするので言語化に挑戦します。
今はインフラをやっているけれども
このままずっとインフラをやっていくのかなぁと考えていたの。
インフラに飽きたのかな？
とも考えたの。
「Pythonなどで形になるWebを書きたい」
って想像してみたけれども
AWSで構築するほうが、ガッと大きなものをつくれるので
飽きたってわけでは無いのかなぁと思いました。
「構築」という言葉が好きだなぁ。
何かをつくっている感じがする。
書いているのはコードだけれども
頭の中では、きちんと立体物がそれぞれの接続先でどう動いているのか
何がどう流れるのかをなるべく正確に把握して考えるのが好きだなと感じる。
休みの日だとか、何をしているときにワクワクするのか
もう少し考えようと思いました。
なんだか楽しそうでもないのに
やったほうが良いからって理由でやることが増えてきて
だんだん楽しくない気持ちになってしまっている気がする。
自作OSは確かに勉強になったけれども
「これ以上深入りしても無駄。業務に全く生きない無駄なこと」
と言われて
私にとっては、とても神秘的で不可侵だと感じられたOSをつくる行為が
別の誰かにとってはかなり無駄な行為なのだなと感じたし
(それ自体はどう考えても当たり前なこと)</description>
    </item>
    
    <item>
      <title>DB接続確立error</title>
      <link>https://hugo.suwa3.me/post/2019-12-17-db%E6%8E%A5%E7%B6%9A%E7%A2%BA%E7%AB%8Berror/</link>
      <pubDate>Tue, 17 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-17-db%E6%8E%A5%E7%B6%9A%E7%A2%BA%E7%AB%8Berror/</guid>
      <description>今日はまさかのWordPressがDB接続確立errorで見られなくなりました。
かなりゾッとしたので、バックアップのcron回します。
あとDB接続したらレイアウトがガタガタに崩れていたので
きちんとgit管理します🙋
異常終了によるロック状態になっていたため
ロックファイルの削除をしてDB起動しました。
以下、作業ログです。
作業ログ、ここに残してもまたDB確立error起きたら見られないんだけどね..
暗記しよう😃
$ service mysqld status $ cd /var/lock/subsys/ $ rm -rf mysqld $ sudo su - # service mysqld start 帰宅後サーバー内に入り、原因調査をしました。
$ cd /var/log/ $ tail -n200 mysqld.log 2019-12-17 03:44:07 3906 [ERROR] InnoDB: Cannot allocate memory for the buffer pool 2019-12-17 03:44:07 3906 [ERROR] Plugin &amp;#39;InnoDB&amp;#39; init function returned error. 2019-12-17 03:44:07 3906 [ERROR] Plugin &amp;#39;InnoDB&amp;#39; registration as a STORAGE ENGINE failed. 2019-12-17 03:44:07 3906 [ERROR] Unknown/unsupported storage engine: InnoDB 2019-12-17 03:44:07 3906 [ERROR] Aborting 2019-12-17 03:44:07 3906 [Note] Binlog end 2019-12-17 03:44:07 3906 [Note] Shutting down plugin &amp;#39;partition&amp;#39; 2019-12-17 03:44:07 3906 [Note] Shutting down plugin &amp;#39;INNODB_SYS_DATAFILES&amp;#39; 2019-12-17 03:44:07 3906 [Note] Shutting down plugin &amp;#39;INNODB_SYS_TABLESPACES&amp;#39; 2019-12-17 03:44:07 3906 [Note] Shutting down plugin &amp;#39;INNODB_SYS_FOREIGN_COLS&amp;#39; 2019-12-17 03:44:07 3906 [Note] Shutting down plugin &amp;#39;INNODB_SYS_FOREIGN&amp;#39; 2019-12-17 03:44:07 3906 [Note] Shutting down plugin &amp;#39;INNODB_SYS_FIELDS&amp;#39; ~~~~~~~略~~~~~~~ ERRORし始めて、しばらくしたらShutting down plugin が始まっているのが分かります。</description>
    </item>
    
    <item>
      <title>量子コンピューター</title>
      <link>https://hugo.suwa3.me/post/2019-12-16-%E9%87%8F%E5%AD%90%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC/</link>
      <pubDate>Mon, 16 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-16-%E9%87%8F%E5%AD%90%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC/</guid>
      <description>プログラミング言語、人がつくったものである以上完璧はないのだろうなぁ
と、思っていて
コンピューターに関しても
0と1で信号を送っているのだとしても、所詮人間がつくったものだしなぁ
と、思っていたの。
それでも実際にアセンブリ言語で仕組みをつくる工程について学んだり
パケットを眺めながら、こうしてバイナリコードが流れていくのだなぁと眺めたりして
本当の本当に0と1なのだなと感じたの。
コンピューターの構造については
大学時代に学んだはずなのだけれども
実際に見ることで、キーボードに触れながら割り込みについて考えるなど
0と1で描画されて、機能する根本的な仕組みに限れば
とても正しくて美しいのだなぁと感じた。
そこにマイクロカーネル派だとかモノリシックカーネル派だとかの
「何が誰にとって便利か」
みたいな、そもそも正解があるのかないのかみたいなレイヤーで揉めそうな問いが入り込んでくると少し萎える。
そして明後日は
量子コンピューターでのOSS開発ツールであるblueqatの
開発元が主催する発表イベントがあり
量子コンピューター軽く予習しておこうと思って調べたの。
量子コンピューターについては、IT系のメディアで情報を拾う程度で
原理についてガッツリ調べたのは初めてでした。
基礎部分であれば、行列だとか複素数など高校数学レベルの知識でいけるかな？と感じたけれども
量子力学あたりから雲行き怪しくなり
数学や物理学、復習が必要かもしれない。
しかし別に、必ず理解すべきという内容でも無いので
ゆるゆるやれたら良いかなぁ。
そして何より
0と1に感動した翌日には
「0と1そして0にも1にもなる存在」
みたいな原理で動くコンピューターのせいで
感動が吹き飛んでしまったの。
もう少し感動タイム欲しかったです。
量子力学面白いけれどもキモいなぁ
って、エモい気持ちになりました。</description>
    </item>
    
    <item>
      <title>やりたいこと途中経過</title>
      <link>https://hugo.suwa3.me/post/2019-12-15-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8%E9%80%94%E4%B8%AD%E7%B5%8C%E9%81%8E/</link>
      <pubDate>Sun, 15 Dec 2019 13:00:28 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-15-%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8%E9%80%94%E4%B8%AD%E7%B5%8C%E9%81%8E/</guid>
      <description>約2ヶ月前に書いた、今年度中にやりたいことの振り返りをしたいと思います。
LT慣れする ハッカソン参戦 チューターやってみる 技術的な何かで30pほど書く＆製本 AWSの資格挑戦してみる OS自作 ラズパイで何か作る LT慣れ については、機会があればなるべく発表するようにしているので引き続き訓練していきたいです。
チューター はAWSハンズオンやDjangoGirlsでコーチを経験させてもらったので、今後もDjangoGirlsのスタッフとしてコーチを続けます。
OSの自作 は簡易OSを作って動かし、それをblogにまとめたので今後はどんどん機能追加していきたいです。
ハッカソン参戦 については、自分のレベルに見合ったものを探しつつ情報収集と仲間集めします。
技術的な何かで30pほど書く＆製本 について、そもそも書きたい内容がぼんやりしているのでいくつか候補案を考えます。
AWSの認定資格 は書籍の購入をしたので、演習問題をざっくり流し読みします。
ラズパイ はもくもく会に申し込んだので、いったんLinuxとして扱えるようセットアップをするのと、ミニ四駆の自動制御経験者を見つけたので相談してみます。
ちょっと色々と手を出しすぎ感あるので
来年からは少しずつ絞って行けたらなぁと思います。
AWSのサービスやAnsible、TerraformなどのInfrastructure as Code系ツールをもっと触って使いこなしたいです。</description>
    </item>
    
    <item>
      <title>OS自作</title>
      <link>https://hugo.suwa3.me/post/2019-12-14-os%E8%87%AA%E4%BD%9C/</link>
      <pubDate>Sat, 14 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-14-os%E8%87%AA%E4%BD%9C/</guid>
      <description>かねがねOSの自作をしてみたいなと思っていたので
まずは簡易的なOSの実装にチャレンジしてみました。
OSを自作したいと感じたきっかけというか、経緯を簡単に書きたいと思います。
以前参加したOSCにて、サイボウズさんがブース出展をされていて
そのブースには何冊か本が並べてあったのですが
たまたま手にとった本が川合秀実さんのOS自作入門でした。
「うちの社員が書いた本です。初見でそれを手に取るのですねぇ」
と、話しかけて頂いて
OSについて知りたいというよりは
(表紙デザインの猫が可愛らしいな)
と思って手にとったので
その感想をそのまま正直に伝えつつ、本の中身をしばらく見ているうちに
コンピューターの内部について知るためにも
いつかOSを書いてみたいなぁ
と、ふんわり考えるようになりました。
今回の内容は、書籍を参考にOS自作を始める前段階として
取っ掛かりになるような、もっとハードルの低いものから徐々に機能を追加していきたいなぁという気持ちがあり
ちょうど手頃なチュートリアルを見つけたので、試してみたものを簡単な解説とともに作業ログ的にまとめました。
主に参考にした記事です
OSを書く：初歩から一歩ずつ | POSTD
実行環境を整える まず、実行環境ですが
Macbookにnasmとmakeとqemu をインストールします。
※DockerやVMなどを用いてローカル環境を汚さずに行うことも可能です。
ただ今回の内容程度であれば、特に問題ないと判断しました。
今後、自作OSを続けたい場合はgit管理などで仮想マシンへの移動をスムーズにすると良いかもしれません。
$ brew install nasm $ brew install make $ brew install qemu nasm: アセンブラです。機械が理解できる命令プログラム(アセンブリコード)を機械が理解できる命令(バイナリコード)に置き換えてコンピューターが実行できるようにします。
make: コンパイルを自動化するツールです。
qemu: キューエミューと読みます。自作したOSは、このエミュレーターを介して実行されます。いわゆる仮想マシンです。
コンピューターの起動 コンピューターが起動してからの処理について
わかりやすい概要を見つけたので記載します。
0から作るOS開発
電源ボタンをONするとまずBIOS（BasicInputOutputSystem）が動き出します。BIOSはその名の通り基本的な（Basic）入力（Input）と出力（Output）を制御するハードウェアとソフトウェアのシステム（System）です。（このあたりは別に読み飛ばしても問題ありません）。BIOSが動き出すとPOST（PowerOnSelfTest）と呼ばれている処理を行います。POST処理では接続されたデバイスのチェック・初期設定、メモリーのチェックを行って正常にシステムが起動できるかどうかをチェックします。起動できると判断すると次にブートローダーまたはOSをメモリーにロードします。ブートローダーまたはプログラムがロードされた後にそのプログラムが様々な処理を簡単に行えるように、BIOSは入出力デバイスの操作をプログラムから利用できるインターフェースを用意しています。
0から作るOS開発 vol.0
MBR(マスターブートレコード)の容量には上限があり、それを解決するためにブートローダーが用いられます。今回作成するOSはとてもシンプルなため、ブートローダを使用してさらにコードをロードすることはありません。
アセンブリコードを書いてみる 実際にアセンブリコードを書いてみます。
$ vi boot.asm ; boot.asm hang: jmp hang times 510-($-$$) db 0 ; This is a comment db 0x55 db 0xAA hang: コード内の名前つきマーカーです。</description>
    </item>
    
    <item>
      <title>セルフ盗聴</title>
      <link>https://hugo.suwa3.me/post/2019-12-13-%E3%82%BB%E3%83%AB%E3%83%95%E7%9B%97%E8%81%B4/</link>
      <pubDate>Fri, 13 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-13-%E3%82%BB%E3%83%AB%E3%83%95%E7%9B%97%E8%81%B4/</guid>
      <description>暗号化されていないWi-Fi通信下では
httpでのフォーム入力は外から見ることができてしまう
というのは知識として知ってはいたのですが
それらが『どういった仕組みで見ることが可能なのか』というのを
説明するのは難しいなぁと感じたので
実際に試してみることにしました。
流れとしては、見る側と見られる側のデバイス機器を用意して
PCから他デバイスの入力情報を盗聴してみます。
まずは、下記の条件を満たす環境を用意します。
PC 2台 (1台はスマホでも可) PCにWireSharkをインストール httpでフォーム入力ができるサイト 暗号化を解除したWi-Fi 注意事項: スタバなどの公衆Wi-Fi (無線LAN) 下で、WireSharkなどを用いたパケット解析ツールでの盗聴行為は違法になります。必ず自宅などの自前のWi-Fi環境下で行ってください。
PCにWireSharkをインストール https://www.wireshark.org/download.html
こちらでインストールします。
install ChmodBPF to fix this をクリックして
ChmodBPFをインストールします。 Wi-Fi: en0 をダブルクリックします。 httpでフォーム入力ができるサイト これは少し難易度が高いというか面倒な作業かもしれないです。
かなり古いWebページの、サイト内検索フォームなどがtestしやすいかなぁと思いました。
探すのが面倒だったため、自鯖にあるWordPressの設定を変更してhttp通信の環境を用意しました。
Apacheの設定で、80番Portへリクエストが来た場合に443番Portへリダイレクトする仕組みになっていたため
httpd.confの内容を下記のように書き換えます。
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
を、コメントアウトです。
&amp;lt;VirtualHost wp.suwa3.me:80&amp;gt; DocumentRoot /var/www/html/ ServerName wp.suwa3.me # RewriteEngine On # RewriteCond %{HTTPS} off # RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L] &amp;lt;/VirtualHost&amp;gt; &amp;lt;Virtualhost wp.suwa3.me:443&amp;gt; DocumentRoot /var/www/html/ ServerName wp.</description>
    </item>
    
    <item>
      <title>AWS re:Invent 2019 Containers re:Cap</title>
      <link>https://hugo.suwa3.me/post/2019-12-11-1942/</link>
      <pubDate>Wed, 11 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-11-1942/</guid>
      <description>AWS re:Invent 2019 Containers re:Capに行ってきました。
re:Inventは毎年ラスベガスで開催されるAWSの新機能発表イベントです。
今回のセミナーは、そのイベントで発表された内容の中でも
コンテナ技術に限定して解説するセミナーでした。
特に中盤以降から
「難解だなぁ」
と感じたけれども、このセミナーを聴講したことで
ECSやEKSのサービスを実際にさわってみたいな
と、思えたので
参加してよかったのかもしれない。
個人用のメモです。
あとAWSLoftのキャンディを貰ったの。
かわいい〜</description>
    </item>
    
    <item>
      <title>魂を売る</title>
      <link>https://hugo.suwa3.me/post/2019-12-10-%E9%AD%82%E3%82%92%E5%A3%B2%E3%82%8B/</link>
      <pubDate>Tue, 10 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-10-%E9%AD%82%E3%82%92%E5%A3%B2%E3%82%8B/</guid>
      <description>本日も1日リモートでした。
家にいると集中するの難しいので結局コワーキング行きました。
今までVimの機能追加はしないと思っていましたが
魂を売ってカスタマイズしていくことにしたの。
Neovimについて軽く調べたけれども
色々なネーミングセンスがいちいち中二病で良い感じだなと思いました。
あとは週末などにPCを2台使って
自宅の暗号化されていないWi-Fi下で(公共WiFiはダメ🙅)
SSL暗号化されていない状態でフォームを入力をして
wiresharkで自分のPCの情報がどこまで見ることができるのか
試すやつやりたいです。ハッキングごっこ😃楽しそう。
OS自作の導入部分を進めます。
そしてラズパイは通販で購入しました。
届くの楽しみだなぁ。</description>
    </item>
    
    <item>
      <title>GitHubのアカウントを統合</title>
      <link>https://hugo.suwa3.me/post/2019-12-08-github%E3%81%AE%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%82%92%E7%B5%B1%E5%90%88/</link>
      <pubDate>Sun, 08 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-08-github%E3%81%AE%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%82%92%E7%B5%B1%E5%90%88/</guid>
      <description>**GitHubの問題解消する
**- 旧アカウント(suwa33)からメインアカウント(suwa3)にオーナー移管
方法: リポジトリのSettings =&amp;gt; Danger Zone =&amp;gt; Transfer ownerhip
- suwa33の方はexampleeeeにする
- Organizationsをsuwa33で作成してHP(GitHubPages)移管
- GitのCommit AuthorとCommiterを変更する(草移管)
- GitHubPages死回避
今日の目標である、GitHubの整備は完全クリアです！
GitHubのアカウントを統合させました。
理由は
プライベート用のGitHubアカウントと
仕事用のアカウントがそれぞれあって
２つの鍵を管理していくのが大変だったのと
MacBookAirが死にかけていたので
なんとかGitHubの内容だけでも脱出させておきたかったからです。
リポジトリの避難 まずsuwa33アカウントからsuwa3アカウントへリポジトリを避難させます。
実際にはリポジトリのオーナーを変更する設定になります。
避難させたいリポジトリのSettingsを開いて
一番下のDanger Zoneまでスクロールし、Transferをクリック
Typeするよう言われた内容をコピペして
引越し先のアカウント名を入力します。
しばらくすると
引越し先のアカウントで登録してあるメールアドレスにメールが届きます。
メール内に
To accept the transfer, visit this link:
と書かれた先にリンクが続くのでクリックします。
このときの注意点で
旧アカウント(ここではsuwa33)からログアウトをして
引越し先のアカウント(ここではsuwa3) にSign Inしてから
メール内のリンクを踏んでください。
成功すると、リポジトリが移行してきています。
GitHub pagesが死ぬのを回避 オーナー名が変更になるため
GitHubの静的サイトのホスティングが適用されなくなりページが死にます
暫定的な対処として以下を行います。
旧アカウントのオーナー名(username)を適当に変更 引越し先のアカウントでOrganizationを作成 Organizationに旧アカウントのオーナー名をつける GitHub静的サイトのリポジトリを移管
↑主な流れは記事上の「リポジトリの避難」と同様 具体的な方法を書いていきます。
GitHubの静的サイトがかつてあった旧アカウント(suwa33)のSettingsから
AccountのChange usernameを選択して
オーナー名の変更をします。
色々聞かれます。</description>
    </item>
    
    <item>
      <title>DjangoGirls</title>
      <link>https://hugo.suwa3.me/post/2019-12-07-djangogirls/</link>
      <pubDate>Sat, 07 Dec 2019 13:00:22 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-07-djangogirls/</guid>
      <description>コーチとしてDjangoGirlsのワークショップに参加しました。
先日、AWSのハンズオンを主催してみて
｢参加する側よりも主催する側の方が
勉強に繋がって成長できるのでは｣
と感じたのをキッカケに
自分自身が理想としていたDjangoGirlsのハンズオンに
スタッフとして参加してみようと思いました。
受けた質問を一通りまとめて、躓きやすいポイントを整理しながら
｢どういったサポートが相手のためになるのか、どういった伝え方がスムーズに受け入れられるか｣
など考えました。
ただ訊かれたことに答えるだけではなく
その周辺情報を伝えることで、より理解が深まる場合もあると思うのだけれども
もともとインフラよりの方と
フロントよりの方では質問内容や興味のもちかたの傾向がかなり違うだとか
非エンジニアの方への伝え方で、なるべく専門的な用語を使わないだとか
テクニックが要るなぁと感じました。
チュートリアルの完成度の高さがあってこそ
こういった面について考えることができるのだなぁ
と思いました。
まだまだ勉強不足な部分たくさんあるので
これからも頑張りたいです。
今日の収穫、いっぱいあったのですが
個人的に面白いなと思ったのが
DjangoのMTVという考え方で
Laravelの話も少し出ていてわかりやすかったです。
Djangoの魅力をもっと知りたいなと感じました。
自分で書いたものをどんどん試して改造してみたい〜😃
あとはFlaskというフレームワークの存在を知ったので
これも軽く試してみたいです。
初めてDjangoGirlsのハンズオンに参加したとき
Django自体の魅力はもちろん
チュートリアルの完成度の高さと
コーチ役との距離感のちょうど良さと
DjangoGirls代表であるマミさんの牽引力に惹かれて
「このコミュニティに所属したいなぁ」
と、一目惚れに近い気持ちになったの。
今後も、開発コミュニティを通して交流を深めつつ
技術の幅を広げていきたいなと思いました。</description>
    </item>
    
    <item>
      <title>phpとDocker</title>
      <link>https://hugo.suwa3.me/post/2019-12-03-php%E3%81%A8docker/</link>
      <pubDate>Tue, 03 Dec 2019 01:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-03-php%E3%81%A8docker/</guid>
      <description>朝の通勤中はIT系のメディアで情報収集の時間にあてていたけれども
phpの学習時間にあてることにしました。
あとは徒歩時間で脳内の自分に解説することで復習。
お昼はプロセスや接続について知見を深めました。
ふんわりとした理解ではなかなか人に解説ができないので
今後も引っかかりを見つけたら、そのままにせずに
時間を別途確保して調べたいの。そして脳内の自分に説明する。
帰宅しながら、Redisについて調べました。
最近は趣味鯖でSidekiqの設定を触っているけれども
そもそもRedis内の処理や機能/構造について
正確に理解しているのかと考えたら
かなり曖昧な部分が多いと感じたので
DockerなどでRedisコンテナを立ち上げて
どういった処理をするのかを言葉だけではなく
動かして検証したいと思ったの。
まずはPub/Sub(出版-購読モデル)を実際に試してみたいです。
Dockerって開発環境でしか使わないという先入観があったけれども
なにかの構造や動作などについて、気軽に検証可能という利点があるのでは
と思った。環境汚さないし後片付けがとてもラクだし。
もっと使いこなせるようになりたいなぁ。</description>
    </item>
    
    <item>
      <title>phpカンファレンス</title>
      <link>https://hugo.suwa3.me/post/2019-12-01-php%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/</link>
      <pubDate>Sun, 01 Dec 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-12-01-php%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/</guid>
      <description>phpカンファレンスに行ってきました。
セッションのメモをとったので載せます。
PHP Conference Japan 2019
言語系カンファレンスは初めてで
正直セッションの内容はライブ映像で見ることが出来るし
わざわざ会場まで行くことに意味があるのだとすれば
phpに関わる、いろいろな人と交流して帰ることだよなぁと思っていたの。
「目標は名刺交換！」
と、考えていて
お仕事の内容的に、とても親和性が高そうなサービス紹介のブースがあって
同僚が積極的に関わりに行ってくれたおかげで
名刺交換をすることができたの。目標達成できたよ😃
そのあとは永田町にあるコワーキングスペース
ガイアックスで作業です。
WordPressのホスティングを昨日からはじめて
結構、右も左もわからない状態だったのだけれども
テーマやプラグイン、外観をどう編集するのか
証明書やApacheの設定などについても教わることが出来て良かったです。
わたしはデフォルトVPCを作成し直すのをやりました🙋
もくもくと作業も捗るけれども
お互いにわからないところを教え合うの楽しいなぁと感じました。
目の前でblogの内容を参考に作業してもらって
そのフィードバック貰えたのは、かなり大きかったです。
記事の内容として
「これくらいは書かなくても良いかな」
と、省いてしまう箇所が結構あるなと感じたので
出来る限り丁寧に書くよう気をつけたいです。</description>
    </item>
    
    <item>
      <title>centOSにLAMP環境の構築をしてWordPressの引越し on AWS</title>
      <link>https://hugo.suwa3.me/post/2019-11-30-centos%E3%81%ABlamp%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89%E3%82%92%E3%81%97%E3%81%A6wordpress%E3%81%AE%E5%BC%95%E8%B6%8A%E3%81%97-on-aws/</link>
      <pubDate>Sat, 30 Nov 2019 14:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-30-centos%E3%81%ABlamp%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89%E3%82%92%E3%81%97%E3%81%A6wordpress%E3%81%AE%E5%BC%95%E8%B6%8A%E3%81%97-on-aws/</guid>
      <description>備忘録としてまとめます。
ざっくりとやった内容です。
AWSでEC2インスタンスをたてる EC2内にLAMP環境を構築 EC2内にWordPressをインストール 旧WordPressからデータをエクスポート 新WordPressへデータをインポート Route53でサブドメインを切る Let’s Encryptで証明書発行 諸々の設定ファイルを書く AWSでEC2インスタンスをたてる 主に参考にした記事です。
Amazon EC2 Linux インスタンスの開始方法 - Amazon Elastic Compute Cloud
注意するポイントとして
Amazon Linux 2ではなくAmazon Linux AMIを使用します。
好みの問題かもしれないですが
Amazon Linux 2
$ sudo amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
Amazon Linux AMI
$ sudo yum install -y httpd24 php70 mysql56-server php70-mysqlnd
この違いです。
amazon-linux-extrasではなくyumを使いたかったので
Amazon Linux AMIを使用しました。
セキュリティグループは下記のとおりです。
SSH: ポート範囲22
HTTP: ポート範囲80
HTTPS: ポート範囲443
鍵を作成したら.ssh配下に移動します。
$ mv ~/.Downloads/HogeKeyName.pem ~/.ssh/
権限の変更をします。
$ chmod 600 HogeKeyName.</description>
    </item>
    
    <item>
      <title>お引越し完了</title>
      <link>https://hugo.suwa3.me/post/2019-11-30-test/</link>
      <pubDate>Sat, 30 Nov 2019 11:35:27 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-30-test/</guid>
      <description>WordPress.comからWordPress.orgへのお引越し完了しました。
つまりホスティングサービス利用から、自前サーバーで運用になりました。
主にやった内容は
AWSでEC2インスタンスをたてる EC2内にLAMP環境を構築 EC2内にWordPressをインストール 旧WordPressからデータをエクスポート 新WordPressへデータをインポート Route53でサブドメインを切る Let&amp;rsquo;s Encryptで証明書発行 諸々の設定ファイルを書く こんな感じでした。
これからやりたいことは
GitHubでバージョン管理
問題: 個人アカウントと仕事用アカウントで鍵の管理が煩雑になっているため、アカウントを統一させたい。 セキュリティ強化
WordPressへの攻撃数がエグいので、同VPC内にある別鯖を踏み台にする。
しばらく様子を見て、アクセスログに海外からのものが多くあった場合は通知する。 構成管理
AWSの無料期間が終了したらサーバーの引越しをしたくなると思うので、Ansibleで構成管理しておく。 とりあえずこんな感じです。
今日やった内容については、別記事に備忘録としてまとめておきたいと思います。
AWSにはもともとSNSを運用しているEC2があったので
同居させても良かったのですが
それらはUbuntu環境にNginxで運用していて
WordPressはcentOS環境にApacheで運用してみたかったので
別インスタンスで立てることにしました。
とりあえず引越しが1日で完了したのでよかったぁ
blogが途切れること無く書けたということに感動😃</description>
    </item>
    
    <item>
      <title>お引越ししました。</title>
      <link>https://hugo.suwa3.me/post/2019-11-29-%E3%81%8A%E5%BC%95%E8%B6%8A%E3%81%97%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/</link>
      <pubDate>Fri, 29 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-29-%E3%81%8A%E5%BC%95%E8%B6%8A%E3%81%97%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/</guid>
      <description>WordPressのblogを自鯖運用することにしたので
URLが変わりました。
うさぎでもわかる
WordPressでblogを始めるとき、セキュリティ周りの整備や運用に自信がなくて
AWSのAMIでWordPressの構築自体はできたのだけれども
自鯖でホスティングはもう少し慣れてからにしようと思ったの。
そろそろ自分でホスティングしても良いかなぁなどと思いつつ
データの移行方法について調べたところ
プラグインが用意されていて意外と簡単にできることが判明したので
引越しに踏み切りました。
これからはHTMLやCSSはもちろんPHPでも何でも触れるので
どんどん改造していきたいー！
WordPress.comでも、3000円/月のコースに登録すれば
HTML/CSSの編集やプラグインの利用は可能なの。
おそらくフロントエンドとして練習のためになら
それらの有料コースに登録していたのだろうけれども
インフラとしてやっていくのなら、自分でホスティングする一択でしょ！
ということで、構築とっても楽しかったです😃♡</description>
    </item>
    
    <item>
      <title>Deep Lunch</title>
      <link>https://hugo.suwa3.me/post/2019-11-28-deep-lunch/</link>
      <pubDate>Thu, 28 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-28-deep-lunch/</guid>
      <description>帰宅後、ソファで寝落ちしてしまったので
blog書こうにも昨日のことなんて覚えていません！
お昼何食べたか思い出そうとして思い出しました。
濃い感じのお昼でした。
職場のひと数人で魚を食べたのですが
ほぼ今まで会話をしたことがないメンバーで
「初っ端の話題がこれか」
ってレベルの内容だったの。
おそらく皆お互いにそう思いつつも
ブレーキかける人が不在で突き抜けてしまった感じでした。
なかなかディープなお昼でした。
おそらく人生において最初で最後のDeep Lunchです。
# DeepLunch
週末は渋谷のもくもく会と
PHPカンファレンスです。
久しぶりに盛り沢山なので楽しみ〜😃
あと自作OSについて
OS自作入門でやりたいなと思っていて
https://www.amazon.co.jp/30%E6%97%A5%E3%81%A7%E3%81%A7%E3%81%8D%E3%82%8B-OS%E8%87%AA%E4%BD%9C%E5%85%A5%E9%96%80-%E5%B7%9D%E5%90%88-%E7%A7%80%E5%AE%9F/dp/4839919844/ref=sr_1_2?adgrpid=69849074613&amp;amp;gclid=EAIaIQobChMI_fHy482O5gIVWT5gCh0p_weLEAAYASAAEgKmjPD_BwE&amp;amp;hvadid=347698848884&amp;amp;hvdev=c&amp;amp;hvlocphy=1028853&amp;amp;hvnetw=g&amp;amp;hvpos=1t1&amp;amp;hvqmt=e&amp;amp;hvrand=934107838803021360&amp;amp;hvtargid=kwd-840847145233&amp;amp;hydadcr=28798_10688920&amp;amp;jp-ad-ap=0&amp;amp;keywords=os%E8%87%AA%E4%BD%9C%E5%85%A5%E9%96%80&amp;amp;qid=1575002610&amp;amp;sr=8-2
30日でできる！
なら3ヶ月あればできる！
って思っていたのだけれども
なかなかハードルは高いなと感じていて
これとは全く別の記事で
OSを書く：初歩から一歩ずつ | POSTD
この内容であれば
頑張れば1日でできそうだし
OS自作入門の序盤と重なる部分もあるので
「アセンブリ言語を触ってみる」
みたいな感じで、やってみたいなぁと思いました。</description>
    </item>
    
    <item>
      <title>さながら目玉焼きをつくるような</title>
      <link>https://hugo.suwa3.me/post/2019-11-27-%E7%9B%AE%E7%8E%89%E7%84%BC%E3%81%8D%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B%E3%83%8E%E3%83%AA%E3%81%A7%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E6%A7%8B%E7%AF%89%E3%81%97%E3%81%9F%E3%81%84/</link>
      <pubDate>Wed, 27 Nov 2019 13:00:58 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-27-%E7%9B%AE%E7%8E%89%E7%84%BC%E3%81%8D%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B%E3%83%8E%E3%83%AA%E3%81%A7%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E6%A7%8B%E7%AF%89%E3%81%97%E3%81%9F%E3%81%84/</guid>
      <description>きゃーーーーー
WordPress.comってWPのホスティングサービスを使っていて
WordPress.orgで(ホスティングサービスを使わずに)自鯖運用したいけれども
どうやって今のblogから、引越し先のサーバーへデータ移行するのかなぁ
なんて考えていたら移行方法のページ見つけた！
https://move.wordpress.com/exportimport-content/
エクスポートとインポートできるのか！わーわー
suwa3.meドメイン持っているので
さっそくwp.suwa3.meとかでサブドメイン切って移管作業やりたいです🙋
今週末のもくもく会かなぁ
blogなんだかんだ1年間毎日休まず続けているの。
TODOできたぁ
今週中にがんばるぞい😃
お仕事するようになって作業スピードが10倍くらい速くなったので
目玉焼きをつくるような手際の良さでサーバー構築したいし
クッキーを焼くようにサクッとDockerfile書けるようになりたいです。</description>
    </item>
    
    <item>
      <title>エムグラム</title>
      <link>https://hugo.suwa3.me/post/2019-11-26-%E3%82%A8%E3%83%A0%E3%82%B0%E3%83%A9%E3%83%A0/</link>
      <pubDate>Tue, 26 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-26-%E3%82%A8%E3%83%A0%E3%82%B0%E3%83%A9%E3%83%A0/</guid>
      <description>エムグラム診断やってみました。
質問に頑張って答えたよ😃
なるほどーだったぁ。
週末に勉強会に参加したり、自鯖内で作業したりするの
もともと趣味から入って
週末に開発コミュニティなどに参加していたので
いろいろと教わった際、必然的に
『仕事も趣味も人生そのものがエンジニア』
みたいな人たちばかりで
エンジニアとはそういうものだと思っていたの。
そうじゃない人もいるというのがカルチャーショックだった。
しかし普通に考えたら、休日は休むための日だし
当たり前といえば当たり前なのかもしれない。
むしろ、感覚的に趣味と仕事の境界線が曖昧になってしまうかもしれないの
危ういなぁと思う。
先々月のTODOリストだとか見るとconfig編集していて
「まだコドモンで働いていないはずなのに何で仕事しているんだ？」
って一瞬ビビったら普通に趣味鯖で遊んでいただけとか
色々なことが出来るようになるのとても楽しいし
楽しむぶんには問題ないのだろうけれども
仕事は仕事なので(たとえ趣味鯖と同じ作業だとしても)
切り替えてキチンとこなすべきだよなぁと思う。
趣味鯖はBOT走らせ放題の実験cron回し放題のDBガンガン触って遊べるので、これからもマイペースにやりたいことやるの😃</description>
    </item>
    
    <item>
      <title>モノリシック</title>
      <link>https://hugo.suwa3.me/post/2019-11-25-%E3%83%A2%E3%83%8E%E3%83%AA%E3%82%B7%E3%83%83%E3%82%AF/</link>
      <pubDate>Mon, 25 Nov 2019 13:00:33 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-25-%E3%83%A2%E3%83%8E%E3%83%AA%E3%82%B7%E3%83%83%E3%82%AF/</guid>
      <description>先日の勉強会でLinuxの話になって
「モノリシックカーネルとマイクロカーネル、あなたはどちらが優れていると感じますか」
と訊かれて
「何じゃそりゃ？」
となったので、そこで聞いたことと
調べたこと、ふんわりと考えたことをまとめます。
モノリシックカーネルは一枚岩ということで
機能が分割されていないため実行速度が速い。
マイクロカーネルは逆に、様々な機能がモジュールとして分割されているため
一部のみの変更や更新などに対応することができる。
カーネルにおける設計思想ということだな、と理解しました。
以下にも詳細が載っています
モノリシックカーネルとマイクロカーネル | Linux技術者認定試験 リナック | LPI-Japan
すなわち、「完全にモノリシックカーネル」「完全にマイクロカーネル」というのは、最近では少なくなってきたのです。アーキテクチャや機能の多様化・進化に伴い、「この機能はカーネルに組み込む」「この機能はモジュールにする」のように使い分けるほうが、設計上もパフォーマンスの上でも好ましいため、と言えるでしょう。
https://linuc.org/study/knowledge/460/
これを読んで思い出したのが
VimとEmacsのエディタ論争で
シンプルさか、もしくはカスタマイズ性を求めるのかという部分では
モノリシックかマイクロか、という部分で重なりました。
「用途に合わせて」
というのが前提にあるにせよ
どちらが自分自身の考え方にあっているのかというのは
対象に合わせて自分を変化させるのか
対象を自分のコントロール下に置くのか
そういったところに帰結するような気がする。
何にせよ、自作OSやりたいので
「カーネルにも色々と種類があって、設計思想的なものがあるのだなぁ」
と知ることができたの良かったです。</description>
    </item>
    
    <item>
      <title>CodeDeploy</title>
      <link>https://hugo.suwa3.me/post/2019-11-24-codedeploy/</link>
      <pubDate>Sun, 24 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-24-codedeploy/</guid>
      <description>sidekiqの設定をAnsibleで自動化したものを
AWS CodeDeployで自動化しようと格闘しました。
とりあえず途中まで進んだものを備忘録的に書いておきます。
まずIAMロールを作成
CodeDeployダッシュボードへ移動し
そのロールARNを元に
アプリケーション、デプロイグループの作成をします。
デプロイタイプはシンプルなものを選びます。
対象のEC2インスタンスを選択します。
デプロイ設定は、今回ES2インスタンス1台なのでOne at Timeを選択します。
詳細は以下URL
CodeDeploy でデプロイ設定を使用する - AWS CodeDeploy
ロードバランサーはEC2内部でNginx稼働しているため、今回は指定しません。
デプロイの作成で
GitHubのトークン名は
一度ブラウザでGitHubからログアウトして
アカウント名を入力してあげます。
以下URL参照
ステップ 6: アプリケーションをインスタンスにデプロイする - AWS CodeDeploy
次はリポジトリの紐付けです！
肝心のAnsibleリポジトリが
個人的に、まだまだまとめられてないなぁと感じるので
ディレクトリ掘って整備が完了次第、続きをやりたいと思います。</description>
    </item>
    
    <item>
      <title>PORTでもくもく</title>
      <link>https://hugo.suwa3.me/post/2019-11-23-port%E3%81%A7%E3%82%82%E3%81%8F%E3%82%82%E3%81%8F/</link>
      <pubDate>Sat, 23 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-23-port%E3%81%A7%E3%82%82%E3%81%8F%E3%82%82%E3%81%8F/</guid>
      <description>PORTのもくもく会に行きました。
先月行けなかったので、少し久しぶりな感じでした。
だんだん知り合いが増えてきて、ホーム感増してきたの嬉しいなぁ。
LTをやったので懇親会にも初参戦したよ。
あまり話したことない人とたくさん話せて楽しかったです。
主に趣味鯖上で運用しているSNSの
dumpのcronを書き換えたりsidekiqの設定を変えたりしました。
備忘録を残します。
$ crontab -l 0 0 * * * docker run &amp;ndash;link mastodon_db_1 &amp;ndash;volume /opt/backup:/mnt/backup &amp;ndash;network mastodon_internal_network postgres:9.6-alpine /bin/sh -c &amp;ldquo;pg_dump -U postgres -h mastodon_db_1 postgres | gzip -c &amp;gt; /mnt/backup/dump-`date +&amp;rsquo;%Y-%m-%d&amp;rsquo;`.sql.gz; exit&amp;rdquo; &amp;gt; ~/cron.log 2&amp;gt;&amp;amp;1
本当はローカルにdump取りたいの
でもとりあえずdiscfullでEC2が定期的に落ちるのどうにかしたいので
`date +&amp;rsquo;%Y-%m-%d&amp;rsquo;`
ここの部分を削除して
dumpファイルが最新のものに上書きされるようにしました。
つまりこうです。
$ crontab -l 0 0 * * * docker run &amp;ndash;link mastodon_db_1 &amp;ndash;volume /opt/backup:/mnt/backup &amp;ndash;network mastodon_internal_network postgres:9.6-alpine /bin/sh -c &amp;ldquo;pg_dump -U postgres -h mastodon_db_1 postgres | gzip -c &amp;gt; /mnt/backup/dump.</description>
    </item>
    
    <item>
      <title>Dockerの思い出</title>
      <link>https://hugo.suwa3.me/post/2019-11-20-docker%E3%81%AE%E6%80%9D%E3%81%84%E5%87%BA/</link>
      <pubDate>Wed, 20 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-20-docker%E3%81%AE%E6%80%9D%E3%81%84%E5%87%BA/</guid>
      <description>夜は疲れたので帰宅後即寝です！
https://wp.suwa3.me/2019/08/26/厳しめモードDocker/
これ読んでいて、懐かしいなぁと思うの。
Dockerの問題云々ではなく
恐らくどこかしらの鯖からのリクエストが急増するなどして
処理しきれなくなってEC2が不安定になるのだけれども。
EC2の再起動すると、スナップショットも取っていないし
IP変わってしまう可能性あるので、Dockerをひとまず落として
（DBのマウントはしてあるので）
Dockerをdownさせると挙動が遅くて落ちきれず
その状態でうっかりupさせると、ただでさえ捌ききれてないStreaming apiが残像みたいに残ったまま
docker-composeが忖度して
「Streaming api無いのでは？！なんかStreamingコンテナ無さげだし新しくコンテナたてといたよ〜｣
って感じで、重複させてコンテナ起動してしまうの。途中から明らかに人災。
設定ファイルの整理と見直しをしたい。
できるならAnsible化しながら、それらをやってしまいたい。
設定ファイルをまとめてGitHubに上げるところからだなぁ。
少しづつ頑張ろう💪</description>
    </item>
    
    <item>
      <title>ちぢむ！！</title>
      <link>https://hugo.suwa3.me/post/2019-11-19-%E3%81%A1%E3%81%A2%E3%82%80/</link>
      <pubDate>Tue, 19 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-19-%E3%81%A1%E3%81%A2%E3%82%80/</guid>
      <description>健康診断してきたよ。
身長が縮んで152cmになっていました。
妹に負けてしまう😢
でもどうせ妹も身長縮むだろうし大丈夫かな。
調べたら午後の身体測定は重力で身長が縮むらしい。
そして宇宙飛行士は身長が4cmも伸びていたことがあるとのこと。
宇宙いけば背が高くなれる！
職場の人がAWSの本を貸してくれたの。
わーい😃
スキマ時間にコツコツ読むぞ。
本を読んでいて
これAWS触る前に読めばよかったのかなぁ
とか思いつつ、今だから読めるのかもと思った。
初めてAWSにさわったとき
3分動画を最後まで観られなくて
↑「何言っているのか分からん」と即諦めた。
実際に登録したほうが早そうなので、さっさと登録してコンソールに入り
動画でEC2という単語だけは覚えたので
EC2という単語を探してAWSコンソール内をさまよったの。
最初はEC2だけでWebサイトを公開できると思っていた。
チュートリアルを運良く見つけてインスタンスを起動できたけれども
今考えるとやばいくらい無謀だったなと思います。
あと🙋ブルーライトカット眼鏡を手に入れたので、明日から眼鏡っ子です。
前の職場で使っていた眼鏡、デザインが気に入らなくて
ブルーライトカット眼鏡が必要そうな人に譲ったの。
ブルーライトは集中すると頭痛のもとになるので
これから目を労ります。</description>
    </item>
    
    <item>
      <title>腑抜け</title>
      <link>https://hugo.suwa3.me/post/2019-11-17-1739/</link>
      <pubDate>Sun, 17 Nov 2019 13:00:35 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-17-1739/</guid>
      <description>お昼過ぎにnail行ってきたよ
初めてのところだったけれども
いい感じにしてもらえたので良かった。
次は表参道とかで探そうかなぁ。お店の種類たくさんありそう。
ネイルサロン一年くらい同じところに通っていたけれども
別のところを探してみようかなぁって感じです。
デザインがマンネリ化してしまうの。
ネイルのあとは作業だよ
フリーマン、メニューにホイップココアないけれども
頼んだら作ってくれたの。
TODOまとめて少しだけやったよ。
残りは平日に少しずつ進めます。
次のPORTもくもく会でのLT内容は
「やらかし集」
に決定しました。
ここ最近でのやらかしネタをまとめたいと思います。
「ハンズオン主催してみた」や「スマホからデプロイ」
は、またいつかのネタに取っておきます。
DjangoGirls主催のWebアプリケーションを作る会
何度か参加しているので
次はコーチ枠で参加してみることにしました。
がんばるぞ😃
時間見つけてもう一周DjangoGirlsチュートリアルやるのと
Djangoでblog以外のWebアプリケーション
どんなものが作れるのか調べて作ってみよーっと。
S3だけで静的サイトを作成する作戦を練っていて
どうしたらよりスマートでCOOLな構成に出来るかなぁ
と模索して、とりあえず
- Nuxt.js
- CodeDeploy
- CloudFormation
これらを使ってみようと思いました。
CodeDeployとCloudFormationは名前しか知らなくて
まだ触ったこともないので
AWSのドキュメント読みながら試してみるのやります。
なんとなく分かってきたら具体的な構成を詰めていきます。
CircleCIまたやってみようかなぁと思ったけれども
IAMの設定が面倒だし、今回はAWS縛りでいくの。
結構、外部ツール入れるよりも
AWSならAWSで完結してしまうのがラクなのかなぁ
と思うようになってきた。
最近作業blog全然書けていない😢
腑抜けている😢
書けるようにがんばります。
夜は20年以上昔の
クレヨンしんちゃんの映画を
ワインを飲みながら観て、ノスタルジーしていました。
子どもの頃に観た映画を大人になってから観るの
数年に一度やりたくなる。
しんちゃん可愛かったです。</description>
    </item>
    
    <item>
      <title>開催後</title>
      <link>https://hugo.suwa3.me/post/2019-11-14-%E9%96%8B%E5%82%AC%E5%BE%8C/</link>
      <pubDate>Thu, 14 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-14-%E9%96%8B%E5%82%AC%E5%BE%8C/</guid>
      <description>AWSハンズオンを無事に開催することが出来ました。
色々と問題点が洗い出されて良かったです。
どんどん改善して継続していけたら良いなぁ。
最後緊張の糸が切れてウッとなったけれども
そのあとは気持ちを切り替えて
「もっとこういうふうに出来たら良かったね」
だとか
「むしろこういう感じで進めたら良いのでは？」
みたいな、前向きなアイディアを出せていけたのが良かった。
帰りの電車では「失敗をいかす　方法」でひたすらググったけれども。笑
人前で話すの、極度に緊張してしまうのでどんどん場馴れしたい。
とりあえず、ここ数日は
「不安で夜眠れず、3〜4時間くらいしか寝ていない」
みたいな日が続いていたので
ようやく安心して眠れるのが嬉しいです。</description>
    </item>
    
    <item>
      <title>擬似ハンズオン</title>
      <link>https://hugo.suwa3.me/post/2019-11-13-%E6%93%AC%E4%BC%BC%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</link>
      <pubDate>Wed, 13 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-13-%E6%93%AC%E4%BC%BC%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</guid>
      <description>明日のAWSハンズオンの準備のために
「一度実際に通しでやってみよう」
ということで、同僚2人とAWS公式のチュートリアルを使って擬似ハンズオンしてみました。
※ハンズオン（hands on）実際に手を動かしてやってみること
完了まで4時間かかるという。。
時間内では終わらないことは分かっていたし
｢途中から再開して自宅でも出来るようにする！｣
というのが今回の目標なので、それは良いのだけれども
途中なぞのテンションになって
最後は皆無言になりはじめるレベルで疲れました。
チュートリアルの危うさがわかったのが大きな収穫でした。
チュートリアル、古いせいかもしれないけれど、まあまあ実際の挙動と異なる箇所が多くて
そういった部分をこちらで修正した資料を作らないとだなぁ
って感じです。
チュートリアル内にある不足部分について、自分達で正しい方法を模索して設定したりサーバー内に入って確認したりしたの。
｢どうやったら出来るんだろう？｣
と、皆で知恵を絞りあい
あーだこーだ言い合いながら、成功すると喜んで
と、進めていく過程が（疲れたけれども）楽しかったです。
最後はさすがに疲れ過ぎてガス欠な感じだったけれども。
一体感あるなぁと思いました。
なかなか職場でというか、学生時代も含めて
今までこういったふうに連帯感を感じたことなかったかもしれないと思い少し考えてしまった。
明日のハンズオンについては不安が大きかったけれども、2人が一緒に頑張ってくれたし
大丈夫かもという気持ちになれたの、本当に良かったです。
帰宅してからじわじわと感謝の念が込み上げてきた感じです。
感謝しないとなぁ。いつか恩返しできたら良いな。</description>
    </item>
    
    <item>
      <title>画面でか！！！！</title>
      <link>https://hugo.suwa3.me/post/2019-11-09-%E7%94%BB%E9%9D%A2%E3%81%A7%E3%81%8B/</link>
      <pubDate>Sat, 09 Nov 2019 13:00:21 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-09-%E7%94%BB%E9%9D%A2%E3%81%A7%E3%81%8B/</guid>
      <description>早速Terminusをスマホにインストールして設定諸々してみました。
EC2にログインできました😃わーい
ついでにラズパイにも入ってみました。
やったぁ。
しばらくスマホでポチポチ作業していたのですが
PCでblogを書こうとして感じたのが
**「画面でか！！！！」
**でした。
画面が大きいって、とても有り難いことなんだなぁと感じました。
これはすごくテンション上がるなぁ。
とりあえず夢にまでみた“スマホで自動デプロイ”が実現しそうなので
気合い入れてAnsible書きたいです。
お昼はカフェ難民しましたが
タリーズで電源確保に成功したので
AWSハンズオンの資料作成タイムです。
不安しかなかったけれども
やることまとめて着手しはじめたら大丈夫な気がしてきた！
明日も引き続きがんばろー🙋</description>
    </item>
    
    <item>
      <title>Terminus</title>
      <link>https://hugo.suwa3.me/post/2019-11-08-terminus/</link>
      <pubDate>Fri, 08 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-08-terminus/</guid>
      <description>お昼は先輩とカレーです。
たまごとキャベツのカレー美味しかった😃
カレー屋さんに置いてあった浦沢直樹の「パイナップルARMY」面白そうだなぁと思って見ていたら
「MASTERキートン」をオススメされた！読んでみたい。
休みの日の話題から派生して
わたしは普段TVはアニマルプラネットしか観ないので
Twitterでバズったニュースはおろか
一般的に話題になったニュースなどにも疎くなってしまうの。
そうすると、文脈の共有時に
「なんかズレたこと言ったかな？」
みたいな齟齬が生じる時があって
あとから調べてみると
「Twitterでバズったツイートを発端にした話題だったのだなぁ」
と気づくことが度々あるの。
単一のメディアが一種の常識を形成するように機能しているのかな？
という感覚になるのだけれども
現状Twitterの方が、新聞やTVニュースと比較しても
（数種類の新聞・ニュース番組を継続して観続けるのは時間が無さすぎて現実的ではないという意味で）
情報収集のツールとしても、多様性の面においても優れていると感じる。
無くても生きていけるっちゃ生きていけるんだけどねぇ。
世間の常識ってどんどん変化しているので
だんだんと疎くなってしまうのが、少し怖いなと思いました。
あと面白かったのが
Terminusというスマホアプリを教えてもらったの。
鍵の登録をすればスマホからサーバーにsshログインできるらしい。
以前スマホからデプロイ自動化したくて
脱獄するしかないのかなぁって調べていたので
こんなアプリがあることに驚いた😃
これをネタにしてLTやりたいなぁ。
落ち着いたら、スマホに鍵の登録して
Ansibleでデプロイ自動化したLT資料つくるのやりたい。
AWSハンズオンの資料
土日でガッツリ作りたいの。
がんばろう💪</description>
    </item>
    
    <item>
      <title>AWS認定資格</title>
      <link>https://hugo.suwa3.me/post/2019-11-05-aws%E8%AA%8D%E5%AE%9A%E8%B3%87%E6%A0%BC/</link>
      <pubDate>Tue, 05 Nov 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-05-aws%E8%AA%8D%E5%AE%9A%E8%B3%87%E6%A0%BC/</guid>
      <description>DockerとGitHubについて思いを馳せていました。
いろいろと作戦を練りつつ
そのあとはWordPressのデプロイです。
WordPress用のAMIにデフォルトで入っているtestDBの設定を
勘で当てる作業をしていました。
勘で当てることが出来たのでスクショ撮ったよ。
AWS認定資格の参考書を購入した。
https://www.amazon.co.jp/AWS%E8%AA%8D%E5%AE%9A%E8%B3%87%E6%A0%BC%E8%A9%A6%E9%A8%93%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88-AWS%E8%AA%8D%E5%AE%9A-%E3%82%BD%E3%83%AA%E3%83%A5%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%88-%E3%82%A2%E3%82%BD%E3%82%B7%E3%82%A8%E3%82%A4%E3%83%88-%E4%BD%90%E3%80%85%E6%9C%A8-%E6%8B%93%E9%83%8E-ebook/dp/B07R1H87Y1/ref=sr_1_2?adgrpid=80122682121&amp;amp;gclid=EAIaIQobChMIyaneyKPT5QIVEz5gCh1TsQKdEAAYASAAEgKgf_D_BwE&amp;amp;hvadid=369131110939&amp;amp;hvdev=c&amp;amp;hvlocphy=1009333&amp;amp;hvnetw=g&amp;amp;hvpos=1t1&amp;amp;hvqmt=b&amp;amp;hvrand=1572079449442674716&amp;amp;hvtargid=kwd-772399703697&amp;amp;hydadcr=26606_10270258&amp;amp;jp-ad-ap=0&amp;amp;keywords=aws%E8%AA%8D%E5%AE%9A%E8%B3%87%E6%A0%BC%E8%A9%A6%E9%A8%93%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88&amp;amp;qid=1572964014&amp;amp;sr=8-2
来週末から早速試験勉強を始めたいです。
明日から移動時間に読もうかなぁ。
夜の作業がまあまあ捗ったけれども
寝る時間すこし遅くなってしまったので
BLOG書いたら即寝ようと思います。
おやすみなさい(。-ω-)zzz</description>
    </item>
    
    <item>
      <title>悪に手を染めた</title>
      <link>https://hugo.suwa3.me/post/2019-11-03-%E6%82%AA%E3%81%AB%E6%89%8B%E3%82%92%E6%9F%93%E3%82%81%E3%81%9F/</link>
      <pubDate>Sun, 03 Nov 2019 13:00:13 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-03-%E6%82%AA%E3%81%AB%E6%89%8B%E3%82%92%E6%9F%93%E3%82%81%E3%81%9F/</guid>
      <description>朝マックして、そのまま作業です。
マックは1時間でWIFIが切れてしまうの
その都度Macアドレス変えるの面倒なので
.shで解決するという悪いことをしました。
ついに悪に手を染めてしまった😢
登録するアドレスやPASSもダミーで良いっぽい。
そのあとはSlackでBOTを書く練習です。
Outgoing WebhookとIncoming Webhookについて覚えた。
URLを指定して、ラズパイに入り
# cd /var/log/nginx
tail -f access.log 173.245.54.7 - - [03/Nov/2019:11:46:54 +0900] &amp;ldquo;POST /test/ HTTP/1.1&amp;rdquo; 403 779 &amp;ldquo;-&amp;rdquo; &amp;ldquo;Slackbot 1.0 (+https://api.slack.com/robots)&amp;rdquo;
こんな感じで、logを見れば
「Webhook働いているな〜」
までやりました。
AWSのチュートリアルやらないとやばいです😃
午後はお手伝いさんが来て、一緒に家の大掃除しました。
少し早いけれども
繁盛期に頼むと争奪戦になるので、時期をずらしてみたの。
部屋がピカピカになった〜。
夕方はお昼寝して
夜はアニマルプラネットを観ながらblogです。
connpassいくつか申し込みしていた。
PHPカンファレンス 2019 - connpass
**12/1(日)
**PHPについて造詣を深めたいとおもって申し込みました。
Blueqat Summit Tokyo 2019 a/w 量子コンピュータ総集編（MDR株式会社） - connpass
**12/18(水)
**これは量子コンピュータに興味あるので申し込みしました。
内容難しそうでついていけるか不安あるけれども。
よく見たら仕事と時間かぶっていたので
仕事を早退できるか、もしくはイベント途中入室可能か
確認しなきゃだぁ。
Object Oriented Conference - connpass
**2/16(日)
**オブジェクト指向、難解なので理解を深めるために参加です。</description>
    </item>
    
    <item>
      <title>スクランブルスクエア</title>
      <link>https://hugo.suwa3.me/post/2019-11-02-%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%B3%E3%83%96%E3%83%AB%E3%82%B9%E3%82%AF%E3%82%A8%E3%82%A2/</link>
      <pubDate>Sat, 02 Nov 2019 13:00:37 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-02-%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%B3%E3%83%96%E3%83%AB%E3%82%B9%E3%82%AF%E3%82%A8%E3%82%A2/</guid>
      <description>最近、咳が続いて夜眠りづらかったので
病院に行って診てもらい
強めの咳止め処方してもらった。
副作用で眠くなるけれども
就寝前に飲むやつなのでちょうどいい感じ。
渋谷にOPENしたスクランブルスクエアに行ってきたよ。
昨日OPENしたばかりみたいで
人がたくさんいた。
また落ち着いたくらいにゆっくりお買い物に行きたいなぁ。
お昼はやよい軒で食べた。
最近やよい軒お気に入りなの。
渋谷新南口のPUBLIC HOUSEで作業しました。
AWSチュートリアル、内容を確認しながらもう一度やっていました。
なかなかボリュームあるし細かな注意点などあるなぁ。
Macでチュートリアル2周して、Windowsでも念の為1周しておく。
夕方にソファでお昼寝して
夜はアニマルプラネット観ながらblog書いているよ。
真っ白な雪原を歩くホッキョクグマを見ていると
同じ地球上にいるのが不思議なくらい
別世界に生きる動物のように見える。
なにか作業するとき
わかりやすく決まった内容ばかりではないので
具体的に作業に名前をつけてあげないとなぁって思うの。
名もなき家事というけれども
名もなき作業もたくさんあると感じる。
そういったものを明示化していくの習慣づけたい。</description>
    </item>
    
    <item>
      <title>AWSOME DAY</title>
      <link>https://hugo.suwa3.me/post/2019-11-01-awsome-day/</link>
      <pubDate>Fri, 01 Nov 2019 13:00:29 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-11-01-awsome-day/</guid>
      <description>朝からAWSOME DAYという
AWS主催のセミナーに参加していました。
セミナーに参加していて思ったのが
休みの日の感覚に近いなぁといった感じだった。
丸一日座学というのは少ないけれども
休日に丸一日もくもく会で朝から作業だとか
OSCに行ったりハンズオンに参加したりすることはあるので
休みと、仕事でセミナーに行く差ってほぼ無くて
なんだか仕事しなきゃとおもってレポートを丁寧に書いてみた。
そう考えると、休みの日は趣味鯖の手入れをしたり
Pythonだとか興味のある分野の学習にあてたりしているので
趣味と仕事の境界線も曖昧なところがあって
好きで没頭できるのはとても嬉しいのだけれども
逆に、これ興味もなく好きでもないのに仕事でやるとか
きっとひたすら苦行だろうし
向き不向きって、能力というよりは興味関心なのかもしれないと思った。
AWSの認定資格とりたい。
参考書を見に書店へ行かなきゃ。
最新の技術やツール、知りたいし使えるようになりたいのと同時に
コンピューター内部の仕組みを知りたいの
自作OSや自作コンピューターやりたいなぁと思う。
外に向かう興味と、内に向かう興味って感じする。
現役でエンジニアとして働けるの
頑張ったところであと30年とかなんだろうけれど
あと100年くらい現役でエンジニアやれたら良いのにとおもう。
そのくらい時間がないというか
学んでも学んでもジリジリとしか進まない。</description>
    </item>
    
    <item>
      <title>ギャップ萌え</title>
      <link>https://hugo.suwa3.me/post/2019-10-30-%E3%82%AE%E3%83%A3%E3%83%83%E3%83%97%E8%90%8C%E3%81%88/</link>
      <pubDate>Wed, 30 Oct 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-30-%E3%82%AE%E3%83%A3%E3%83%83%E3%83%97%E8%90%8C%E3%81%88/</guid>
      <description>「この雰囲気でインフラエンジニアだなんてギャップ萌えですね」
といわれた。
わーい😃萌えドメイン取得するしかない。
どんすわdiskfullで落ちました。
20Gで100％らしい。
pg_dumpのcron回していて
それが1日100MBなので、10日で1GB計算になるの。
だいたい週イチで落ちているので
石橋を叩いてcron自殺している状態ですね！
アホな状況なので、古いdumpファイル自動削除cronさっさと書きます。
AWS勉強会の募集をconnpassで公開したら
1日で4名も応募者きて驚いた。
平日の夜なので全く期待していなかったというか
誰か応募してくださる方いるのだろうか・・・
くらいな調子で募集出したので。
この調子でうまく進むと良いなあ。</description>
    </item>
    
    <item>
      <title>蕁麻疹Docker</title>
      <link>https://hugo.suwa3.me/post/2019-10-27-%E8%95%81%E9%BA%BB%E7%96%B9docker/</link>
      <pubDate>Sun, 27 Oct 2019 12:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-27-%E8%95%81%E9%BA%BB%E7%96%B9docker/</guid>
      <description>昨夜の帰宅後から急に蕁麻疹が全身に出てきて
びっくりして、とりあえず眠りました。
疲れていたのかなぁ。
今日も日中は眠って
午後から皮膚科に行ってきました。
風邪で免疫力が落ちていたので
蕁麻疹が出てしまったよう。
内服薬を貰ったよ。
夕方はスタバで少しだけ作業です。
docker-compose.ymlについて。
今まで結構誤解していた部分が多かったなぁ
って反省です。
流れとしては
docker-compose.ymlで
アプリケーションが使うミドルウェアの接続・起動をできるようにして
その状態で
Dockerfileを書き進めつつdocker buildでDocker imageをつくって
docker-compose upしてDocker imageを元にコンテナをつくるの。
$ docker-compose ps
これでコマンドやState、Portsなどの確認ができるので
errorが起きている場合は
$ docker-compose logs &amp;lt; Name &amp;gt;
などでlogを見て原因究明をしたり
$ docker-compose run &amp;ndash;entrypoint /bin/sh &amp;lt; application &amp;gt;
などでDocker内に入って実際にコマンドを打ってerrorログを読んだりすれば
地道なerror潰し作業で
Dockerfileを作りあげることが
理論上は出来る。
実際にはerrorログ読んでも
訳分からんくて詰むの多々あるかんじなので
わかりそうなひとにログとともに見せて教えを請う作業です。
趣味鯖でDocker上にアプリケーションを構築する際
動きそうなdocker-compose.ymlをgit cloneしてきて
こんな感じでerrorログを見ながら
ひたすら「わからん」と唱えていた記憶があったの。
わからんまま構築できてしまったのだけれども。
一度復習しようと思ってふむふむしていた。
Dockerfile内のRUNとCMDの違いだとか
docker-compose.ymlを書いたら
ローカルで接続・起動の確認をするのか
Docker上でそれらの確認をするのか
そもそもDocker imageとは
って、かなり初歩的なレベルで理解が浅かったなぁって気づけたの。
適当にソースコードgit cloneして構築できてしまうの便利だけれども
オリジナルの独自設定アプリケーションを動かせるような環境構築
きちんと理解して進めないと難しいのだなと感じた。</description>
    </item>
    
    <item>
      <title>Nginxの設定をAnsibleで展開</title>
      <link>https://hugo.suwa3.me/post/2019-10-20-nginx%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92ansible%E3%81%A7%E5%B1%95%E9%96%8B/</link>
      <pubDate>Sun, 20 Oct 2019 11:30:11 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-20-nginx%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92ansible%E3%81%A7%E5%B1%95%E9%96%8B/</guid>
      <description>どんすわサーバー内に入って
Nginxの設定ファイルどこにあるのかなあと探して見つけました。
/etc/nginx$ cat nginx.conf
出てきたnginx.confをcopyして
ローカルのdon.suwa3.me-ansibleに追加したらGitHubにpushです。
https://github.com/suwa3/don.suwa3.me-ansible/blob/master/nginx.conf
ついでにyamlも追加
- hosts: all tasks: - name:nginx.conf become: yes template: src: nginx.conf dest: /etc/nginx/nginx.conf owner: root group: root mode: 0644
そういえばポートを22222に変更していたので
ポート番号の変更を追記しました。
$ sudo vi ansible.cfg [defaults] hostfile = ./hosts remote_port = 22222
playbookしてみます。
$ ansible-playbook -i hosts nginx.yaml ____________ &amp;lt; PLAY [all] &amp;gt; \ ^__^ \ (oo)\_______ (__)\ )\/\ ||&amp;mdash;-w | || ||
無事okでました〜
やったねえ</description>
    </item>
    
    <item>
      <title>Django GirlsチュートリアルでつくったものでDockerfile作成</title>
      <link>https://hugo.suwa3.me/post/2019-10-20-django-girls%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%A7%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE%E3%81%A7dockerfile%E4%BD%9C%E6%88%90/</link>
      <pubDate>Sun, 20 Oct 2019 11:20:36 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-20-django-girls%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%A7%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE%E3%81%A7dockerfile%E4%BD%9C%E6%88%90/</guid>
      <description>まずDocker Hubで使いたいイメージを探します。
公式のものなど、なるべく信頼できるイメージをつかった方が良さげです。
Django Girlsチュートリアルでつくったものはこちらです。
$ ls blog manage.py myvenv README.md db.sqlite3 mysite requirements.txt
元になるイメージはpython:3.7.5-slim-busterを選びました。
Django起動時に打ち込んでいるコマンドを
Dockerfileに書き込んでいきます。
$ vi Dockerfile
FROM python:3.7.5-slim-buster COPY . /app/ WORKDIR /app RUN pip3 install -r requirements.txt RUN python3 manage.py collectstatic &amp;ndash;noinput CMD python3 manage.py runserver 0.0.0.0:8000
イメージ名にはわかりやすい名前をつけて
タグにはバージョン（日付や0.1.0など）を指定してあげると良いです。
無記入だとlatestになります。
$ docker build -t [イメージ名]:[タグ] . 例えば $ docker build -t djangogirls:0.1.0 .
最後のドットを忘れないように注意です。
一覧を出すには
$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE djangogirls latest 53a38ee83c1a 24 minutes ago</description>
    </item>
    
    <item>
      <title>manコマンドの日本語化</title>
      <link>https://hugo.suwa3.me/post/2019-10-20-man%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%8C%96/</link>
      <pubDate>Sun, 20 Oct 2019 11:10:23 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-20-man%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%8C%96/</guid>
      <description>先日manコマンドを覚えたのですが
英語の表示を日本語にできるとの情報を仕入れたので
早速、manコマンドで表示される文字を日本語化してみました。
環境
OS: MacOS v10.13
Shell: bash
groffをインストール groff(GNU roff)という文書整形を行うコマンドをインストールする
$ brew install groff
/usr/local/bin/groffが配置されます。
macではgroffが既に入っているので brew installしたgroffを参照するように設定を書き換えます。
$ sudo vi /etc/man.conf
95行目 行頭に「#」を付けてコメントアウトするか削除する JNROFF /usr/bin/groff -Tnippon -mandocj -c
95行目 groff コマンドでインストールした最新版を使うようにする JNROFF /usr/local/bin/groff -Dutf8 -Tutf8 -mandoc -mja -E
105行目 行頭に「#」を付けてコメントアウトするか削除する PAGER /usr/bin/less -is
105行目 文書整形を日本語表示に対応させる PAGER /usr/bin/less -isr
106行目 行頭に「#」を付けてコメントアウトするか削除する BROWSER /usr/bin/less -is
106行目 同上 BROWSER /usr/bin/less -isr
日本語のmanページをダウンロード $ curl -O http://linuxjm.osdn.jp/man-pages-ja-20191015.tar.gz
毎月15日に更新されているようなので
URLは以下のページで確認してください。
http://linuxjm.osdn.jp/download.html
DLしたファイルを解凍、インストール $ tar xfz man-pages-ja-20191015.</description>
    </item>
    
    <item>
      <title>ハンズオン続き</title>
      <link>https://hugo.suwa3.me/post/2019-10-19-%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3%E7%B6%9A%E3%81%8D/</link>
      <pubDate>Sat, 19 Oct 2019 11:00:46 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-19-%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3%E7%B6%9A%E3%81%8D/</guid>
      <description>DjangoGirls主催の
PythonでWebアプリケーションをつくるハンズオンに参加してきました。
https://tutorial.djangogirls.org/ja/deploy/
ここを参考に進めました。
前回のハンズオンで書いたコードやDBの設定などを読み返して復習しつつ
チュートリアルに沿ってPythonAnywhereにデプロイしました。
流れとしてはGitHubにアップは済ませてあったので
PythonAnywhere APIトークンの作成 PythonAnywhere のbashコンソール内でサイトの設定をする $ pip3.6 install &amp;ndash;user pythonanywhere $ pa_autoconfigure_django.py https://github.com/``/.git
これらを実行することで
GitHubからコードをダウンロード PythonAnywhere上にvirtualenvを作成する。 一部のデプロイメント設定で設定ファイルを更新する manage.py migrateコマンドを使ってPythonAnywhere上のデータベースをセットアップする 静的ファイルの設定 APIを通じてPythonAnywhereがWebアプリケーションを提供するように設定 上記が自動で設定されます。PythonAnywhereすごーい！
CSSをいじったら
$ python manage.py collectstatic
collectstaticコマンドで
アプリが管理している静的ファイルを
Nginxが参照できる場所（ディレクトリ）へ
ひとつにまとめることができるの。
参照： https://qiita.com/saira/items/a1c565c4a2eace268a07
手動でがんばる。
とりあえず目標だったデプロイまでできたし
.env以下に
# set environment variable to tell django where your settings.py is os.environ[&amp;lsquo;DOTENV&amp;rsquo;] = &amp;lsquo;/home/suwa3/suwa3.pythonanywhere.com/.env&amp;rsquo;
これらを追記してsettings.pyのSECRET_KEYの値、直書きしていたのを
SECRET_KEY = os.environ[&amp;lsquo;SECRET_KEY&amp;rsquo;]
に書き換えました。
キリの良いところまでいったので
とりあえずこれでよしとします！
あしたのやりたいことをリスト化しました。
できたらいいなあ</description>
    </item>
    
    <item>
      <title>気絶</title>
      <link>https://hugo.suwa3.me/post/2019-10-18-%E6%B0%97%E7%B5%B6-2/</link>
      <pubDate>Fri, 18 Oct 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-18-%E6%B0%97%E7%B5%B6-2/</guid>
      <description>帰宅してから記憶がないのでベッドで気絶したとおもわれます！
肩凝りがキツいのでこっそりピップエレキバン貼ります🙋
土曜日はDjango girls主催の
PythonでWebアプリケーションをつくるハンズオンに参加してきます。
先月も参加していて、GitHubにソースコードを上げるまでは出来ているの。
Pythonのversionを上げるのと細かな修正、あとデプロイまで出来たら良いかなぁってかんじです。
時間が余ったら見た目の装飾を整えよう。
日曜日はLodgeか適当な作業カフェでもくもくする予定です。
Laravelの続きと、Dockerサラッと、Nginxファイルのgit管理とAnsible展開までしたいなぁ。
ハッカソンに誘われたの。
今回はDjango girlsと重なっていたので参加を見送った。
ハッカソン怖い。
でもいつか参加してみたいなぁ。
｢やらかしても怒られないから仕事より怖くないよ｣と言われた。
そういうものなのかなぁ。</description>
    </item>
    
    <item>
      <title>読書と食虫植物について</title>
      <link>https://hugo.suwa3.me/post/2019-10-17-%E8%AA%AD%E6%9B%B8%E3%81%A8%E9%A3%9F%E8%99%AB%E6%A4%8D%E7%89%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Thu, 17 Oct 2019 10:00:08 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-17-%E8%AA%AD%E6%9B%B8%E3%81%A8%E9%A3%9F%E8%99%AB%E6%A4%8D%E7%89%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>家事をやっつけたりボーッとして過ごしました。
久しぶりに予定のない1日だったかもしれない。
少しだけ読書したの。
もう半年くらい前に買った本だよ。
独学が不安だったの。
「アセンブリ言語で書かれたコードをPythonで書くとこうなります」
ってところにテンションが上がった。
アセンブリ言語、何書かれているのか分からな過ぎて良いな。
「プログラミングできるということは、しばらく座っていれば新しいアイディアを実際に実現できるということ」
というの、制約のあるなかで決められたパーツを組み合わせるのレゴブロックのようだなぁとおもった。
組み合わせを工夫することで、レゴブロックのように仕組みや構造をつくることができるの。
夕方以降はアニマルプラネット観ていた。
南アフリカにあるテーブルマウンテン近辺に住む
野生動物や食虫植物について詳しくなった。
正直今回は生き物の生態よりか、テーブルマウンテンの地理的背景や歴史のほうが気になった。笑
調べたら、大昔に地軸の上に位置していたため大陸分裂時にここだけ取り残されてしまったらしい。
その後は氷河期があったのだけれども、ここだけは気候変動の影響をほとんど受けないで固い岩盤が残ったとのこと。
そのせいで独特な植物も多いとのことだけれども、それで食虫植物に繋がるのか〜。
というか食虫植物、蚊一匹でも数ヶ月食事しなくて良いのね。
ラクで羨ましい。</description>
    </item>
    
    <item>
      <title>UNIX歴史講座/スクレイピングハンズオン</title>
      <link>https://hugo.suwa3.me/post/2019-10-14-unix%E6%AD%B4%E5%8F%B2%E8%AC%9B%E5%BA%A7-%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</link>
      <pubDate>Mon, 14 Oct 2019 13:00:25 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-14-unix%E6%AD%B4%E5%8F%B2%E8%AC%9B%E5%BA%A7-%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3/</guid>
      <description>きょうは座学とハンズオンのハシゴでした。
ハシゴは結構疲れることを学んだ。
平成生まれのためのUNIX&amp;amp;IT歴史講座 〜jus黎明期編/UNIX Fair編〜 - connpass
これです。
登壇されていた 岸田孝一さん(jus初代会長)
シグマ作戦の初代リーダーもしていたと知って驚きました。
花の手配の関係上、名前は知っていたので
実物がみたいなあとおもって行ったのだけれども
想像以上の、歴史の生き証人といった感じだった。
1970年代当時、UNIXのライセンス料は1台目が43000ドルで
当時230円/ドルだったため
ライセンス料だけで約一千万円して
今の物価で考えると気が遠くなるような値段だなとおもいました。
導入している企業や団体も少なくて
当然root権限をもっているもごくわずかで
「root権限をもっているひとの会」
のような集まりもあったらしい。
root権限って普通にあるものじゃなかったのか&amp;hellip;
コードをネットからDLもできなかったので
（そもそもインターネットが無い）
コードを手打ちして性能を見るなどしていたという話を聞いて
できないことが多すぎてびびりました。
日本UNIXユーザ会(jus)が主催していたUNIX Fairについて
セミナーへの参加費が9万円だとかで
最近だと無料のセミナーが溢れているのに
当時の会報には
「 参加費が5桁に収まったのが画期的」
と書かれていて、感覚が違うの。たっか！ってなった。
Bill Joy氏の講演があって
&amp;gt; ジョイの最大の貢献としてはviエディタとCシェル（csh）の開発がある。
Wikipediaより引用
ものすごいひと呼んでいるなあとおもった。
viエディタの開発者、、、ふつうに講演聴きたい。
「平成生まれの」と銘打ってはありましたが
参加者はほとんど昭和生まれのように見えました。
面白かったけどなぁ。
司会の方がとても上手くて
司会が本職ではなく、普段はフリーランスエンジニアの
日本UNIXユーザ会幹事(元会長)という肩書きの方なのに
会場のメインな視聴者でもある
昭和生まれの方々にも通じるようなジョークもまじえつつ
平成生まれが置いてきぼりにならないように
解説的な合いの手を入れて進めてくださったので、手腕に感動しました。
すごい
そのあとは、そのままスクレイピングのハンズオンです。
[秋葉原] 初心者向けPython入門会 スクレイピング編 (初心者大歓迎！) - connpass
教材はこちらをつかいました。
https://github.com/KengoTobita/python_scraping
PCの🍎マークに重ねてラズパイのスッテカー貼ってあるので
さっそく
「素敵なラズパイですね！」
ってやりとりしました。
実はMacBookというオチ付きです。
特にPython系の勉強会では、必ずといって良いほど触れてもらえるし
ラズパイのひとで覚えて貰えるので
目印になって良いかもしれない。</description>
    </item>
    
    <item>
      <title>機械学習でタイタニック乗客の生存予測してみる</title>
      <link>https://hugo.suwa3.me/post/2019-10-13-%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92%E3%81%A7%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E4%B9%97%E5%AE%A2%E3%81%AE%E7%94%9F%E5%AD%98%E4%BA%88%E6%B8%AC%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</link>
      <pubDate>Sun, 13 Oct 2019 13:20:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-13-%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92%E3%81%A7%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E4%B9%97%E5%AE%A2%E3%81%AE%E7%94%9F%E5%AD%98%E4%BA%88%E6%B8%AC%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</guid>
      <description>機械学習使っても技術的負債を残しにくいAWSのインフラ構成 - Qiita
機械学習でシステムを作ることができる人は世の中にたくさんいますが、作った後に運用したり保守したりする人がいるということまできちんと考えてシステムを作れる人はどれだけいるでしょうか。
エンドユーザーがハッピーになるからといってやたら高度な機能を作りまくって、考えなしに高利子なシステムを本番環境に乗っけてはならないと思っております。
上記サイトより引用
データのとり方、保存方法や保存先などの選定
今後、例えば機械学習をしたいとおもったときに
どのような構成にしていくかを考えられたら良いなあとおもったの。
機械学習について、なにも知らないより
どういった仕組みなのかくらい把握しておきたいなあということで
少しずつ勉強中です。
今日はKaggleに挑戦してみました。
【Kaggle初心者入門編】タイタニック号で生き残るのは誰？
この記事を参考にしながら進めた。
今回はJupyterNotebookの代わりにGoogleのColaboratoryを使ってみました。
Google Colabの使い方まとめ - Qiita
Google Colabの知っておくべき使い方
Google Colabとは、Jupyter Notebookを必要最低限の労力とコストで利用でき、ブラウザとインターネットがあれば今すぐにでも機械学習のプロジェクトを進めることが可能なサービスです。
上記サイトから引用
PythonやNumpyなど、機械学習で必要なほぼ全ての環境がすでに構築されている。 書いたコード（ノートブック）は、グーグルドライブで保存される。 そして、Colaboratoryの画面こんな感じです。
次に、Kaggleに接続してアカウントを作成。
Kaggleとは
Kaggleは企業や研究者がデータを投稿し、世界中の統計家やデータ分析家がその最適化モデルを競い合う 予測モデリング及び分析手法関連プラットフォーム及びその運営会社である。
ということで、まずは
https://www.kaggle.com/c/titanic/submissions
このページのRolesに同意して
「Join Competitions」をクリックしてコンペティションに参加します。
https://www.kaggle.com/c/titanic/data
こちらからデータをDL
Colaboratory
from google.colab import files files.upload()
https://www.kaggle.com/ユーザー名/account
ここのページから
「Create New API Token」をクリックしてDL
!mkdir -p ~/.kaggle !mv kaggle.json ~/.kaggle/
ダウンロードしたAPI Tokenをupします。
!chmod 600 /root/.kaggle/kaggle.json
!kaggle competitions download -c titanic
import pandas as pd import numpy as np train = pd.</description>
    </item>
    
    <item>
      <title>Laravel</title>
      <link>https://hugo.suwa3.me/post/2019-10-13-laravel/</link>
      <pubDate>Sun, 13 Oct 2019 13:10:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-13-laravel/</guid>
      <description>phpやりたい欲が高まったので
Laravelに手を出しました。
インストール 6.0 Laravel
ここを参考に進めました。
しょっぱなふるい日本語版でのバージョンで進めてハマったの。
理由：http://laravel.jp/のクイックスタートのリンク先が、何故か
ドキュメントメンテナンス期間の終了したLaravelのバージョン4.2だったから。ぷんすか
なので、少し丁寧めに手順をまとめました。
https://getcomposer.org/download/
Composerのダウンロード手順に従って4行ぶんコピペ
インストーラーを実行した後、composer.pharのある層で下記を実行してパスの設定完了。
$ mv composer.phar /usr/local/bin/composer
composerコマンドが使えるようになったので
LaravelインストーラーをDL
$ composer global require &amp;ldquo;laravel/installer&amp;rdquo;
パスの通し方いつも忘れるのでまとめ
$ export PATH=追加したいパス:$PATH
今回のものだと~/.composer/vendor/binディレクトリへパスを通してくださいという指示があったので
$ export PATH=~/.composer/vendor/bin:$PATH
これを永続化させるため
$ vi ~/.bash_profile export PATH=~/.composer/vendor/bin:$PATH
Laravelをインストール
$ composer create-project &amp;ndash;prefer-dist laravel/laravel blog
設定ハマったポイント
ふるい日本語版では
app/config/app.phpファイルと、その中の記述を確認しておいたほうが良いでしょう。
と書かれていますが
最新のバージョンではapp以下にconfigディレクトリはなく
appと同じ階層に
config/app.php
があります。
もし以前のバージョンを使うのであれば
念のためGitHubでオリジナルのソースコードと差分を確認しておいたほうが良さげです。
https://github.com/laravel/laravel/
パーミッションの設定もappの下にstorageディレクトリはなく、同じ階層にあります。
storageにあるディレクトリ全部に対し、Webサーバーによる書き込みアクセスができるように設定して下さいとありますが
$ ls -al drwxr-xr-x 5 username staff 160 9 10 01:26 storage</description>
    </item>
    
    <item>
      <title>深淵をのぞく時、深淵もまたこちらをのぞいているのだ。</title>
      <link>https://hugo.suwa3.me/post/2019-10-13-%E6%B7%B1%E6%B7%B5%E3%82%92%E3%81%AE%E3%81%9E%E3%81%8F%E6%99%82%E6%B7%B1%E6%B7%B5%E3%82%82%E3%81%BE%E3%81%9F%E3%81%93%E3%81%A1%E3%82%89%E3%82%92%E3%81%AE%E3%81%9E%E3%81%84%E3%81%A6%E3%81%84/</link>
      <pubDate>Sun, 13 Oct 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-13-%E6%B7%B1%E6%B7%B5%E3%82%92%E3%81%AE%E3%81%9E%E3%81%8F%E6%99%82%E6%B7%B1%E6%B7%B5%E3%82%82%E3%81%BE%E3%81%9F%E3%81%93%E3%81%A1%E3%82%89%E3%82%92%E3%81%AE%E3%81%9E%E3%81%84%E3%81%A6%E3%81%84/</guid>
      <description>WordPressの情報＆HPに埋め込んであるGAで
誰が何月何日の何時にblogやHPを見に来ているのか、だいたい把握できているの。
深淵をのぞく時、深淵もまたこちらをのぞいているのだ。
誰がサイトに来ているかの解析ツールの徹底は、高校生の頃からです。
定期訪問者は、ほぼ全員誰か把握していたしIPアドレスに名前を紐づけて登録しておいたの。
blogを見に行くときはUserAgent書き換えてCookie消して、proxy経由で見にいく（いかない）。
たかがblogやHPにGA入れている時点で
オーバースペック感あるけれども
試してみたかったんだもん😆
今日はてんこ盛りなのでblogの内容を分割しました。
https://wp.suwa3.me/2019/10/13/laravel/
https://wp.suwa3.me/2019/10/13/機械学習でタイタニック乗客の生存予測してみる/
systemのlogいつもわからなくなるのでまとめです。
Mac
$ tail -f /var/log/system.log
Ubuntu
$ tail -f /var/log/syslog
ディストリビューションや設定によって違うので
基本/var/log以下をみて確認する。</description>
    </item>
    
    <item>
      <title>花とIT共通点</title>
      <link>https://hugo.suwa3.me/post/2019-10-11-1404/</link>
      <pubDate>Fri, 11 Oct 2019 13:00:59 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-11-1404/</guid>
      <description>DATADOG🐶Tシャツもらったあ
ちょうかわいい
これはかわいい
わーいわーい😃♡
三連休は台風だし衣替えして
どんすわのDockerfile読むやつやって
Laravelやりたあい
平成生まれのためのUNIX&amp;amp;IT歴史講座 〜jus黎明期編/UNIX Fair編〜
[秋葉原] 初心者向けPython入門会 スクレイピング編 (初心者大歓迎！)
14日勉強会ハシゴするんかい〜
って、ノリで申し込みをしてしまったので
むりそうだったらキャンセルするかんじかなあ。
台風は去っているとおもうのだけれども。
というか、IT関連会社の代表や顧問の名前
「みたことあるなあ」
ってことがおおいの、
花の手配していたときに見ることがおおかったからだと気づいたの。
慶弔関係の花をWEBから依頼するような会社って
都内の大きな企業だったり、業務を効率化したりしている会社がおおくて
IT系の大きめな企業の社長、役職のひとの名前を
申し込みのたびに、間違いのないよう念入りに確認するので
覚えたんだなあってかんじです。
花とITまさかの共通点（？）みつけてしまった。
「花屋さんからインフラ屋さんっていみわからん、共通点なくない？毎日お世話しなきゃとかの水やり的な？」
って言われたことあったの。
サーバーに水やり。。。。
難易度高いけれども、上手に効率よく水やりできるようになりたいなあ。
そういえば中華ランチに誘われて行ったの。
「AWS触ったことないけど有資格者です」
ってひとがいてびびった。
LPICとかAWSの資格系の参考書
Linux覚えたての頃に少し読んだけど秒でねむくなったの。
先日少し読んだら
「わかるかもー！もう少しがんばれば面白いかも」
「たぶん手で動かしながら覚えて、ある程度身についてから勉強しないと眠いなあ」
と感じたので、触ったことないのに暗記できるのすごい。
なんか他の資格もほしいとか言っていたけれども
他の資格とる前に、AWSさわった方が良いのでは！
と、おもいました🙋
しかし
「サーバーをたててもセキュリティ面が不安」
と話していて
確かに、わたしも最初のころ
乗っ取られからのAWS破産の話をいろいろと聞いて
セキュリティのことひたすら調べたなとおもいだしました。
マイニングに使われて高額な請求がくるだけなら
まだ被害者側だし
AWSに経緯を説明すれば支払わなくても良いになるけれど
国の主要施設などへの攻撃や
不正アクセスの踏み台に利用されたら
それらの行為に加担したということで、自宅に警察がくるの
怖すぎるし、きちんと調べようっておもったの。
たてたらすぐ落とせば良いのだけれども
継続してサービスを展開するのであれば
セキュリティは避けて通れないなあとおもいました。</description>
    </item>
    
    <item>
      <title>ゆるく計画</title>
      <link>https://hugo.suwa3.me/post/2019-10-10-%E3%82%86%E3%82%8B%E3%81%8F%E8%A8%88%E7%94%BB/</link>
      <pubDate>Thu, 10 Oct 2019 13:00:00 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-10-%E3%82%86%E3%82%8B%E3%81%8F%E8%A8%88%E7%94%BB/</guid>
      <description>現金もってなくて
お昼は学食で最安値を攻めれば足りるし良いかあ
って考えていたら焼肉ランチに誘われて
カードあるし大丈夫。。
っておもっていたのに
「ランチはカード使えません」
といわれて
ランチ代借りてしまった😢返さなきゃ
最近20時とかに帰宅して
いつの間にか寝てて
朝の3時とかに目が覚める、笑
おばあちゃん並の早寝早起きです。
Dockerファイル少し読んでいて
一つ一つの行を読むの楽しいなあってなる。
趣味サーバーに置いてあるSNSのDockerfileも読んでみたの
DockerからEC2に直置きしたいなーって言っていたけれども
データ適当にローカルなどにdumpして
Dockerfile参考に構築しなおすのやれば良いのでは！
思いついちゃった〜
わーい😃
念のため、戻せるようにEC2のスナップとっておこう。
そして最悪データ飛ぶかも、メンテ数日かかるかものアナウンスして構築しなおしだなあ。
というか、EC2にマストドン立てている系のblog参考に
先に構築やってみちゃうのも手かもしれない。
しかしバージョンが違うのネックだな。
そう考えるとバージョン上げるのは引っ越し後が良いのかもしれない。</description>
    </item>
    
    <item>
      <title>脳内自動整理機能</title>
      <link>https://hugo.suwa3.me/post/2019-10-08-%E8%84%B3%E5%86%85%E8%87%AA%E5%8B%95%E6%95%B4%E7%90%86%E6%A9%9F%E8%83%BD/</link>
      <pubDate>Tue, 08 Oct 2019 13:00:33 +0000</pubDate>
      
      <guid>https://hugo.suwa3.me/post/2019-10-08-%E8%84%B3%E5%86%85%E8%87%AA%E5%8B%95%E6%95%B4%E7%90%86%E6%A9%9F%E8%83%BD/</guid>
      <description>寝る前まで
わからんわからんってウンウン考えておくと
次の日に何故か理解が深まっているので
寝ながら脳内自動整理機能、侮れないなと思いました。
オートオルガナイズツールonブレーンだよ。
k8sに思いを馳せて眠ろうと思います。
ついにO&amp;rsquo;Reillyのk8s入門を買ってしまった。
以前、Java女子部主催のk8sハンズオンに参加する前日
あまりにも不安で衝動買いしかけた本です。
ううう
これ表紙なんだろう？
シャチ的な何かかな。
職場の先輩と珈琲トークで盛り上がったので
明日の朝、余裕があったらコーヒー豆を挽いて持参しようかなあ
って目論んでいます。
涼しくなると挽きたてホットコーヒー飲みたくなるね。</description>
    </item>
    
  </channel>
</rss>
